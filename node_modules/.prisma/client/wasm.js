
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.3
 * Query Engine version: bb420e667c1820a8c05a38023385f6cc7ef8e83a
 */
Prisma.prismaVersion = {
  client: "6.16.3",
  engine: "bb420e667c1820a8c05a38023385f6cc7ef8e83a"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.RatingScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  roleId: 'roleId',
  avgRating: 'avgRating',
  ratingCount: 'ratingCount',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  roleId: 'roleId',
  email: 'email',
  username: 'username',
  firstName: 'firstName',
  lastName: 'lastName',
  name: 'name',
  uniqueDeliveryId: 'uniqueDeliveryId',
  deviceToken: 'deviceToken',
  phoneNumber: 'phoneNumber',
  phoneVerified: 'phoneVerified',
  identityVerified: 'identityVerified',
  bvnVerified: 'bvnVerified',
  businessVerified: 'businessVerified',
  webAccessGranted: 'webAccessGranted',
  webAccessGrantedAt: 'webAccessGrantedAt',
  migratedToVendor: 'migratedToVendor',
  migrationDate: 'migrationDate',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  inviteCode: 'inviteCode',
  publicKey: 'publicKey',
  address: 'address',
  avatar: 'avatar',
  emailVerified: 'emailVerified',
  password: 'password',
  isSocialAccount: 'isSocialAccount',
  socialAccountProvider: 'socialAccountProvider',
  notificationsEnabled: 'notificationsEnabled',
  twoFactorEnabled: 'twoFactorEnabled',
  twoFactorSecret: 'twoFactorSecret',
  notificationPreference: 'notificationPreference',
  savedMeterNumbers: 'savedMeterNumbers',
  isSuspended: 'isSuspended',
  suspendedAt: 'suspendedAt',
  deletionRequestedAt: 'deletionRequestedAt',
  deletedAt: 'deletedAt',
  isWithdrawalSuspended: 'isWithdrawalSuspended',
  withdrawalSuspendedAt: 'withdrawalSuspendedAt',
  withdrawalSuspensionReason: 'withdrawalSuspensionReason',
  withdrawalSuspensionDuration: 'withdrawalSuspensionDuration',
  gender: 'gender',
  dateOfBirth: 'dateOfBirth',
  pushToken: 'pushToken',
  lastLoginAt: 'lastLoginAt',
  isWithdrawalAllowed: 'isWithdrawalAllowed',
  isDeliveryAgent: 'isDeliveryAgent',
  isAdmin: 'isAdmin',
  isVendor: 'isVendor',
  status: 'status',
  banReason: 'banReason',
  blocked: 'blocked',
  isPenalized: 'isPenalized'
};

exports.Prisma.RoleScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  isActive: 'isActive',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  createdById: 'createdById'
};

exports.Prisma.ProfileScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  roleId: 'roleId',
  status: 'status',
  isWebEnabled: 'isWebEnabled',
  webEnabledAt: 'webEnabledAt',
  department: 'department',
  jobTitle: 'jobTitle',
  permissions: 'permissions',
  vehicleType: 'vehicleType',
  vehiclePlate: 'vehiclePlate',
  lastLocationLat: 'lastLocationLat',
  lastLocationLng: 'lastLocationLng',
  lastLocationAt: 'lastLocationAt',
  vendorId: 'vendorId',
  defaultDeliveryFee: 'defaultDeliveryFee',
  roleSpecificData: 'roleSpecificData',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  profileId: 'profileId',
  businessVerificationStatus: 'businessVerificationStatus',
  identityVerificationStatus: 'identityVerificationStatus',
  serviceVerificationStatus: 'serviceVerificationStatus',
  walletBalance: 'walletBalance',
  avatar: 'avatar',
  deliveries: 'deliveries',
  rating: 'rating',
  yearsOnPlatform: 'yearsOnPlatform',
  achievements: 'achievements',
  fiveStarRatingsCount: 'fiveStarRatingsCount',
  avgRating: 'avgRating',
  ratingCount: 'ratingCount',
  fiveStarCount: 'fiveStarCount'
};

exports.Prisma.ZoneScalarFieldEnum = {
  id: 'id',
  serviceId: 'serviceId',
  name: 'name',
  minDeliveryDays: 'minDeliveryDays',
  maxDeliveryDays: 'maxDeliveryDays',
  orderCutoffTime: 'orderCutoffTime',
  status: 'status',
  providerId: 'providerId',
  providerRole: 'providerRole',
  address: 'address',
  latitude: 'latitude',
  longitude: 'longitude',
  serviceRadius: 'serviceRadius',
  priceMultiplier: 'priceMultiplier',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ComplaintScalarFieldEnum = {
  id: 'id',
  orderId: 'orderId',
  serviceOrderId: 'serviceOrderId',
  productId: 'productId',
  serviceId: 'serviceId',
  userId: 'userId',
  issueType: 'issueType',
  description: 'description',
  reason: 'reason',
  status: 'status',
  internalNote: 'internalNote',
  resolutionDetails: 'resolutionDetails',
  assignedTeamId: 'assignedTeamId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  resolvedAt: 'resolvedAt',
  images: 'images',
  ticketId: 'ticketId'
};

exports.Prisma.StaffScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  profileId: 'profileId',
  roleId: 'roleId',
  customRole: 'customRole',
  createdById: 'createdById',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  isActive: 'isActive',
  metadata: 'metadata'
};

exports.Prisma.NotificationPreferenceScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  pushEnabled: 'pushEnabled',
  emailEnabled: 'emailEnabled',
  smsEnabled: 'smsEnabled',
  discountsEnabled: 'discountsEnabled',
  passwordChangeEnabled: 'passwordChangeEnabled',
  notificationTypes: 'notificationTypes',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.IdentityVerificationScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  profileId: 'profileId',
  documentType: 'documentType',
  country: 'country',
  frontImageUrl: 'frontImageUrl',
  backImageUrl: 'backImageUrl',
  selfieImageUrl: 'selfieImageUrl',
  status: 'status',
  reviewedById: 'reviewedById',
  reviewedAt: 'reviewedAt',
  rejectionReason: 'rejectionReason',
  submittedAt: 'submittedAt',
  processedAt: 'processedAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  deviceInfo: 'deviceInfo',
  documentNumber: 'documentNumber'
};

exports.Prisma.IdentityVerificationStatusHistoryScalarFieldEnum = {
  id: 'id',
  verificationId: 'verificationId',
  status: 'status',
  updatedById: 'updatedById',
  notes: 'notes',
  createdAt: 'createdAt'
};

exports.Prisma.LicenseScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  licenseType: 'licenseType',
  licenseNumber: 'licenseNumber',
  issuedBy: 'issuedBy',
  issuedDate: 'issuedDate',
  expiryDate: 'expiryDate',
  documentUrl: 'documentUrl',
  documentBackUrl: 'documentBackUrl',
  documentType: 'documentType',
  verified: 'verified',
  status: 'status',
  verifiedAt: 'verifiedAt',
  rejectionReason: 'rejectionReason',
  verifiedById: 'verifiedById',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  urlStatuses: 'urlStatuses'
};

exports.Prisma.VehicleScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  plateNumberUrl: 'plateNumberUrl',
  driverLicenseUrl: 'driverLicenseUrl',
  vehicleRoadLicenseUrl: 'vehicleRoadLicenseUrl',
  verified: 'verified',
  status: 'status',
  verifiedAt: 'verifiedAt',
  rejectionReason: 'rejectionReason',
  documentType: 'documentType',
  verifiedById: 'verifiedById',
  plateNumber: 'plateNumber',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  urlStatuses: 'urlStatuses'
};

exports.Prisma.VendorWalletConfigScalarFieldEnum = {
  id: 'id',
  vendorId: 'vendorId',
  deliveryAgentId: 'deliveryAgentId',
  withdrawalEnabled: 'withdrawalEnabled',
  depositEnabled: 'depositEnabled',
  withdrawalLimit: 'withdrawalLimit',
  depositRequiresApproval: 'depositRequiresApproval',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  virtualAccount1Id: 'virtualAccount1Id',
  virtualAccount2Id: 'virtualAccount2Id'
};

exports.Prisma.ServiceTypeScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  isActive: 'isActive',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  createdById: 'createdById',
  categoryId: 'categoryId'
};

exports.Prisma.ServiceOrderScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  agentId: 'agentId',
  serviceId: 'serviceId',
  zoneId: 'zoneId',
  vendorId: 'vendorId',
  amountDue: 'amountDue',
  deliveryFee: 'deliveryFee',
  serviceCharge: 'serviceCharge',
  paymentStatus: 'paymentStatus',
  status: 'status',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  paymentId: 'paymentId',
  deliveryAddressId: 'deliveryAddressId',
  latitude: 'latitude',
  longitude: 'longitude',
  countryId: 'countryId',
  stateId: 'stateId',
  cityId: 'cityId',
  virtualAccountId: 'virtualAccountId',
  adminId: 'adminId',
  orderQuantity: 'orderQuantity',
  deliveryDistance: 'deliveryDistance',
  customerReference: 'customerReference',
  paymentMethod: 'paymentMethod',
  deliveryLatitude: 'deliveryLatitude',
  deliveryLongitude: 'deliveryLongitude',
  confirmationCode: 'confirmationCode',
  voucherId: 'voucherId',
  deliveryTime: 'deliveryTime',
  billerCode: 'billerCode',
  itemCode: 'itemCode',
  meterNumber: 'meterNumber',
  paymentDetails: 'paymentDetails',
  meterType: 'meterType',
  token: 'token',
  serviceFee: 'serviceFee',
  voucherDiscount: 'voucherDiscount',
  pointsDiscount: 'pointsDiscount',
  flutterwaveFee: 'flutterwaveFee',
  monnifyFee: 'monnifyFee',
  vat: 'vat',
  transactionRef: 'transactionRef',
  serviceTypeId: 'serviceTypeId'
};

exports.Prisma.ServiceOrderStatusHistoryScalarFieldEnum = {
  id: 'id',
  serviceOrderId: 'serviceOrderId',
  status: 'status',
  updatedBy: 'updatedBy',
  notes: 'notes',
  createdAt: 'createdAt'
};

exports.Prisma.BVNVerificationScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  walletId: 'walletId',
  bvn: 'bvn',
  bankName: 'bankName',
  accountNumber: 'accountNumber',
  status: 'status',
  responseDetails: 'responseDetails',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  transactionRef: 'transactionRef'
};

exports.Prisma.AccessoryScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  price: 'price',
  stockCount: 'stockCount',
  status: 'status',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ServicesScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  serviceTypeId: 'serviceTypeId',
  status: 'status',
  isActive: 'isActive',
  pricePerUnit: 'pricePerUnit',
  deliveryCost: 'deliveryCost',
  minimumOrder: 'minimumOrder',
  maximumOrder: 'maximumOrder',
  paymentOptions: 'paymentOptions',
  Contact: 'Contact',
  businessHours: 'businessHours',
  expectedDeliveryTime: 'expectedDeliveryTime',
  address: 'address',
  logoUrl: 'logoUrl',
  longitude: 'longitude',
  latitude: 'latitude',
  serviceRadius: 'serviceRadius',
  countryId: 'countryId',
  stateId: 'stateId',
  cityId: 'cityId',
  lgaId: 'lgaId',
  providerId: 'providerId',
  providerRole: 'providerRole',
  businessVerificationId: 'businessVerificationId',
  deliveryRepId: 'deliveryRepId',
  agentId: 'agentId',
  verified: 'verified',
  verifiedAt: 'verifiedAt',
  verificationStatus: 'verificationStatus',
  avgRating: 'avgRating',
  ratingCount: 'ratingCount',
  billerCode: 'billerCode',
  itemCode: 'itemCode',
  destinationBankCode: 'destinationBankCode',
  destinationAccountNumber: 'destinationAccountNumber',
  vendorId: 'vendorId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  businessName: 'businessName'
};

exports.Prisma.ServiceReviewScalarFieldEnum = {
  id: 'id',
  rating: 'rating',
  comment: 'comment',
  reviewerName: 'reviewerName',
  reviewerId: 'reviewerId',
  serviceId: 'serviceId',
  createdAt: 'createdAt'
};

exports.Prisma.BusinessVerificationScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  profileId: 'profileId',
  businessName: 'businessName',
  rcNumber: 'rcNumber',
  businessAddress: 'businessAddress',
  tinNumber: 'tinNumber',
  cacDocumentUrl: 'cacDocumentUrl',
  tinDocumentUrl: 'tinDocumentUrl',
  proofOfAddressUrl: 'proofOfAddressUrl',
  logoUrl: 'logoUrl',
  handles: 'handles',
  status: 'status',
  documentType: 'documentType',
  rejectionReason: 'rejectionReason',
  adminId: 'adminId',
  submittedAt: 'submittedAt',
  processedAt: 'processedAt',
  urlStatuses: 'urlStatuses'
};

exports.Prisma.ProductOrderScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  vendorId: 'vendorId',
  deliveryAddressId: 'deliveryAddressId',
  agentId: 'agentId',
  subtotal: 'subtotal',
  deliveryFee: 'deliveryFee',
  serviceCharge: 'serviceCharge',
  vatAmount: 'vatAmount',
  total: 'total',
  confirmationCode: 'confirmationCode',
  paymentMethod: 'paymentMethod',
  paymentStatus: 'paymentStatus',
  orderStatus: 'orderStatus',
  deliveryRepId: 'deliveryRepId',
  countryId: 'countryId',
  stateId: 'stateId',
  lgaId: 'lgaId',
  cityId: 'cityId',
  notes: 'notes',
  customerReference: 'customerReference',
  deliveryNotes: 'deliveryNotes',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  completedAt: 'completedAt',
  deliveryTime: 'deliveryTime',
  deliveryDistance: 'deliveryDistance',
  latitude: 'latitude',
  longitude: 'longitude',
  voucherId: 'voucherId',
  productTypeId: 'productTypeId'
};

exports.Prisma.ServiceVerificationScalarFieldEnum = {
  id: 'id',
  serviceId: 'serviceId',
  profileId: 'profileId',
  notes: 'notes',
  status: 'status',
  adminId: 'adminId',
  submittedAt: 'submittedAt',
  processedAt: 'processedAt',
  userId: 'userId'
};

exports.Prisma.AuditLogScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  action: 'action',
  details: 'details',
  createdAt: 'createdAt',
  notes: 'notes',
  entityType: 'entityType',
  entityId: 'entityId',
  investigationStatus: 'investigationStatus',
  investigatedBy: 'investigatedBy',
  investigatedAt: 'investigatedAt',
  orderId: 'orderId',
  orderAuditLogId: 'orderAuditLogId',
  serviceOrderId: 'serviceOrderId'
};

exports.Prisma.WalletTransactionScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  walletId: 'walletId',
  transactionType: 'transactionType',
  amount: 'amount',
  topupCharge: 'topupCharge',
  serviceOrderId: 'serviceOrderId',
  productOrderId: 'productOrderId',
  paymentId: 'paymentId',
  transactionRef: 'transactionRef',
  status: 'status',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  billerCode: 'billerCode',
  metadata: 'metadata',
  vendorId: 'vendorId'
};

exports.Prisma.OtpScalarFieldEnum = {
  id: 'id',
  code: 'code',
  userId: 'userId',
  expiresAt: 'expiresAt',
  transactionReference: 'transactionReference',
  phoneNumber: 'phoneNumber',
  email: 'email',
  medium: 'medium',
  verified: 'verified',
  attempts: 'attempts',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  eventType: 'eventType',
  metadata: 'metadata',
  verifiedAt: 'verifiedAt'
};

exports.Prisma.VoucherScalarFieldEnum = {
  id: 'id',
  code: 'code',
  discount: 'discount',
  type: 'type',
  maxUses: 'maxUses',
  maxUsesPerUser: 'maxUsesPerUser',
  uses: 'uses',
  validFrom: 'validFrom',
  validUntil: 'validUntil',
  isActive: 'isActive',
  appliesTo: 'appliesTo',
  createdById: 'createdById',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  updatedById: 'updatedById'
};

exports.Prisma.VoucherUsageScalarFieldEnum = {
  id: 'id',
  voucherId: 'voucherId',
  userId: 'userId',
  usedAt: 'usedAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.FavoriteScalarFieldEnum = {
  id: 'id',
  profileId: 'profileId',
  entityType: 'entityType',
  entityId: 'entityId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.TransferScalarFieldEnum = {
  id: 'id',
  amount: 'amount',
  bankName: 'bankName',
  accountNumber: 'accountNumber',
  transactionId: 'transactionId',
  status: 'status',
  proofOfPayment: 'proofOfPayment',
  createdAt: 'createdAt'
};

exports.Prisma.CustomerAddressScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  address: 'address',
  state: 'state',
  latitude: 'latitude',
  longitude: 'longitude',
  isDefault: 'isDefault',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SubAccountScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  subAccountCode: 'subAccountCode',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.FeedbackScalarFieldEnum = {
  id: 'id',
  ticketId: 'ticketId',
  giverId: 'giverId',
  giverRoleId: 'giverRoleId',
  receiverId: 'receiverId',
  receiverRoleId: 'receiverRoleId',
  comment: 'comment',
  rating: 'rating',
  status: 'status',
  priority: 'priority',
  issueType: 'issueType',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  resolvedAt: 'resolvedAt',
  agentProfileId: 'agentProfileId',
  vendorId: 'vendorId',
  orderId: 'orderId',
  serviceOrderId: 'serviceOrderId',
  customerId: 'customerId'
};

exports.Prisma.OrderReviewScalarFieldEnum = {
  id: 'id',
  comment: 'comment',
  orderId: 'orderId',
  serviceOrderId: 'serviceOrderId',
  serviceId: 'serviceId',
  userId: 'userId',
  rating: 'rating',
  createdAt: 'createdAt'
};

exports.Prisma.SessionScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  token: 'token',
  expiresAt: 'expiresAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  metadata: 'metadata'
};

exports.Prisma.PayOnDeliveryOrderScalarFieldEnum = {
  id: 'id',
  orderId: 'orderId',
  serviceOrderId: 'serviceOrderId',
  phoneNumber: 'phoneNumber',
  amountDue: 'amountDue',
  status: 'status',
  createdAt: 'createdAt',
  userId: 'userId'
};

exports.Prisma.PaymentScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  transactionRef: 'transactionRef',
  flwRef: 'flwRef',
  monnifyRef: 'monnifyRef',
  productType: 'productType',
  serviceType: 'serviceType',
  billerCode: 'billerCode',
  serviceOrderId: 'serviceOrderId',
  meterNumber: 'meterNumber',
  paymentLink: 'paymentLink',
  amount: 'amount',
  requestedAmount: 'requestedAmount',
  topupCharge: 'topupCharge',
  status: 'status',
  paymentMethod: 'paymentMethod',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  paymentDetails: 'paymentDetails',
  providerId: 'providerId',
  orderId: 'orderId'
};

exports.Prisma.ReportScalarFieldEnum = {
  id: 'id',
  reporterId: 'reporterId',
  adminId: 'adminId',
  category: 'category',
  details: 'details',
  imageUrl: 'imageUrl',
  status: 'status',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  resolvedAt: 'resolvedAt',
  agentProfileId: 'agentProfileId',
  vendorId: 'vendorId',
  reporterName: 'reporterName',
  reporterPhone: 'reporterPhone',
  serviceOrderId: 'serviceOrderId',
  productOrderId: 'productOrderId',
  documentId: 'documentId'
};

exports.Prisma.WalletScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  balance: 'balance',
  totalTopupCharge: 'totalTopupCharge',
  vendorLinkedAccount1: 'vendorLinkedAccount1',
  vendorLinkedAccount2: 'vendorLinkedAccount2',
  vendorBankName: 'vendorBankName',
  metadata: 'metadata',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  accountNumber: 'accountNumber'
};

exports.Prisma.PaymentProviderScalarFieldEnum = {
  id: 'id',
  name: 'name',
  flutterwave_biller_code: 'flutterwave_biller_code',
  providerKey: 'providerKey',
  description: 'description',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.CategoryScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  imageUrl: 'imageUrl',
  active: 'active',
  images: 'images',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ProductTypeScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  categoryId: 'categoryId',
  isActive: 'isActive',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  createdById: 'createdById'
};

exports.Prisma.ProductScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  price: 'price',
  salePrice: 'salePrice',
  imageUrl: 'imageUrl',
  images: 'images',
  brand: 'brand',
  size: 'size',
  stock: 'stock',
  status: 'status',
  featured: 'featured',
  productTypeId: 'productTypeId',
  categoryId: 'categoryId',
  productOwnerId: 'productOwnerId',
  rating: 'rating',
  orderCount: 'orderCount',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.CartScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ContactOptionScalarFieldEnum = {
  id: 'id',
  method: 'method',
  details: 'details',
  responseTime: 'responseTime',
  businessHours: 'businessHours',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  isActive: 'isActive'
};

exports.Prisma.CartItemScalarFieldEnum = {
  id: 'id',
  cartId: 'cartId',
  productId: 'productId',
  quantity: 'quantity',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.InfractionScalarFieldEnum = {
  id: 'id',
  agentId: 'agentId',
  deliveryRepId: 'deliveryRepId',
  vendorId: 'vendorId',
  type: 'type',
  reason: 'reason',
  issuedAt: 'issuedAt',
  expiresAt: 'expiresAt'
};

exports.Prisma.OrderItemScalarFieldEnum = {
  id: 'id',
  orderId: 'orderId',
  productId: 'productId',
  accessoryId: 'accessoryId',
  quantity: 'quantity',
  price: 'price',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.PaymentConfigScalarFieldEnum = {
  id: 'id',
  paymentMethod: 'paymentMethod',
  isEnabled: 'isEnabled',
  gateway: 'gateway',
  publicKey: 'publicKey',
  secretKey: 'secretKey',
  contractCode: 'contractCode',
  updatedAt: 'updatedAt',
  updatedBy: 'updatedBy'
};

exports.Prisma.DisputeScalarFieldEnum = {
  id: 'id',
  orderId: 'orderId',
  serviceOrderId: 'serviceOrderId',
  productId: 'productId',
  serviceId: 'serviceId',
  reason: 'reason',
  riskFactors: 'riskFactors',
  internalNotes: 'internalNotes',
  status: 'status',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.WithdrawalScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  walletId: 'walletId',
  amount: 'amount',
  bankName: 'bankName',
  accountNumber: 'accountNumber',
  status: 'status',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  deliveryRepId: 'deliveryRepId',
  vendorId: 'vendorId',
  processedAt: 'processedAt',
  transactionRef: 'transactionRef',
  isAccountValidated: 'isAccountValidated',
  validatedBy: 'validatedBy',
  validationDate: 'validationDate',
  bvnVerified: 'bvnVerified'
};

exports.Prisma.WithdrawalLimitScalarFieldEnum = {
  id: 'id',
  roleId: 'roleId',
  limitType: 'limitType',
  limitValue: 'limitValue',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  updatedBy: 'updatedBy'
};

exports.Prisma.QuicrifillWalletScalarFieldEnum = {
  id: 'id',
  accountNumber: 'accountNumber',
  bankName: 'bankName',
  balance: 'balance',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.QuicrifillWithdrawalScalarFieldEnum = {
  id: 'id',
  walletId: 'walletId',
  amount: 'amount',
  bankName: 'bankName',
  accountNumber: 'accountNumber',
  status: 'status',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  processedAt: 'processedAt',
  transactionRef: 'transactionRef',
  requestedBy: 'requestedBy'
};

exports.Prisma.AppInstallationScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  deviceType: 'deviceType',
  deviceId: 'deviceId',
  deviceToken: 'deviceToken',
  isRecognized: 'isRecognized',
  recognizedAt: 'recognizedAt',
  isBanned: 'isBanned',
  bannedAt: 'bannedAt',
  banReason: 'banReason',
  createdAt: 'createdAt',
  blocked: 'blocked',
  isSuspended: 'isSuspended',
  isPenalized: 'isPenalized'
};

exports.Prisma.CountryScalarFieldEnum = {
  id: 'id',
  name: 'name',
  code: 'code',
  status: 'status',
  restrictions: 'restrictions',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.StateScalarFieldEnum = {
  id: 'id',
  name: 'name',
  countryId: 'countryId',
  status: 'status',
  restrictions: 'restrictions',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.CityScalarFieldEnum = {
  id: 'id',
  name: 'name',
  lgaId: 'lgaId',
  stateId: 'stateId',
  status: 'status',
  restrictions: 'restrictions',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.LgaScalarFieldEnum = {
  id: 'id',
  name: 'name',
  stateId: 'stateId',
  status: 'status',
  restrictions: 'restrictions',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.VirtualAccountScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  walletId: 'walletId',
  vendorId: 'vendorId',
  accountNumber: 'accountNumber',
  bankName: 'bankName',
  status: 'status',
  monnifyRef: 'monnifyRef',
  isVendorMain: 'isVendorMain',
  metadata: 'metadata',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.FraudAlertScalarFieldEnum = {
  id: 'id',
  type: 'type',
  entityId: 'entityId',
  entityType: 'entityType',
  reason: 'reason',
  userId: 'userId',
  vendorId: 'vendorId',
  createdAt: 'createdAt',
  resolvedAt: 'resolvedAt',
  status: 'status'
};

exports.Prisma.EmailTemplateScalarFieldEnum = {
  id: 'id',
  name: 'name',
  subject: 'subject',
  htmlContent: 'htmlContent',
  eventTypeId: 'eventTypeId',
  updatedBy: 'updatedBy',
  updatedAt: 'updatedAt',
  isActive: 'isActive'
};

exports.Prisma.RolePrivilegeScalarFieldEnum = {
  id: 'id',
  roleId: 'roleId',
  privileges: 'privileges',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.CrashReportScalarFieldEnum = {
  id: 'id',
  appVersion: 'appVersion',
  deviceType: 'deviceType',
  deviceModel: 'deviceModel',
  osVersion: 'osVersion',
  errorMessage: 'errorMessage',
  stackTrace: 'stackTrace',
  userId: 'userId',
  status: 'status',
  reportedAt: 'reportedAt',
  updatedAt: 'updatedAt',
  resolvedAt: 'resolvedAt',
  deviceId: 'deviceId',
  metadata: 'metadata'
};

exports.Prisma.AccountDeletionRequestScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  reason: 'reason',
  additionalComments: 'additionalComments',
  status: 'status',
  requestedAt: 'requestedAt',
  scheduledDeletionAt: 'scheduledDeletionAt',
  reviewedAt: 'reviewedAt',
  reviewedById: 'reviewedById',
  rejectionReason: 'rejectionReason',
  adminNotes: 'adminNotes',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.AdminSettingsScalarFieldEnum = {
  id: 'id',
  defaultServiceCharge: 'defaultServiceCharge',
  defaultVatRate: 'defaultVatRate',
  defaultTopupCharge: 'defaultTopupCharge',
  defaultPetroleumTaxRate: 'defaultPetroleumTaxRate',
  updatedAt: 'updatedAt'
};

exports.Prisma.AppealScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  vendorId: 'vendorId',
  reason: 'reason',
  status: 'status',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.WalletSettingsScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  walletId: 'walletId',
  isDeliveryWithdrawalEnabled: 'isDeliveryWithdrawalEnabled',
  withdrawalLimitDaily: 'withdrawalLimitDaily',
  withdrawalLimitSingle: 'withdrawalLimitSingle',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.BankCardScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  walletId: 'walletId',
  profileId: 'profileId',
  cardLast4: 'cardLast4',
  cardType: 'cardType',
  bankName: 'bankName',
  accountNumber: 'accountNumber',
  bankCode: 'bankCode',
  expiryDate: 'expiryDate',
  isValidated: 'isValidated',
  flutterwaveToken: 'flutterwaveToken',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.OrderStatusHistoryScalarFieldEnum = {
  id: 'id',
  orderId: 'orderId',
  serviceOrderId: 'serviceOrderId',
  entityType: 'entityType',
  status: 'status',
  createdAt: 'createdAt',
  updatedBy: 'updatedBy',
  notes: 'notes'
};

exports.Prisma.WebhookAttemptScalarFieldEnum = {
  id: 'id',
  walletTransactionId: 'walletTransactionId',
  eventType: 'eventType',
  webhookUrl: 'webhookUrl',
  payload: 'payload',
  status: 'status',
  attempts: 'attempts',
  lastAttemptAt: 'lastAttemptAt',
  response: 'response',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.EventTypeScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  createdBy: 'createdBy',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SMSTemplateScalarFieldEnum = {
  id: 'id',
  name: 'name',
  content: 'content',
  eventTypeId: 'eventTypeId',
  updatedBy: 'updatedBy',
  updatedAt: 'updatedAt',
  isActive: 'isActive'
};

exports.Prisma.NotificationLogScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  vendorId: 'vendorId',
  type: 'type',
  eventTypeId: 'eventTypeId',
  payload: 'payload',
  status: 'status',
  channel: 'channel',
  recipient: 'recipient',
  errorMessage: 'errorMessage',
  message: 'message',
  createdAt: 'createdAt'
};

exports.Prisma.PushTemplateScalarFieldEnum = {
  id: 'id',
  name: 'name',
  title: 'title',
  body: 'body',
  eventTypeId: 'eventTypeId',
  updatedBy: 'updatedBy',
  updatedAt: 'updatedAt',
  isActive: 'isActive'
};

exports.Prisma.WebhookScalarFieldEnum = {
  id: 'id',
  url: 'url',
  eventTypeId: 'eventTypeId',
  isActive: 'isActive',
  createdBy: 'createdBy',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.EmailSettingsScalarFieldEnum = {
  id: 'id',
  smtpHost: 'smtpHost',
  smtpPort: 'smtpPort',
  smtpUser: 'smtpUser',
  smtpPassword: 'smtpPassword',
  emailFrom: 'emailFrom',
  enableNotifications: 'enableNotifications',
  deliveryTimeStart: 'deliveryTimeStart',
  deliveryTimeEnd: 'deliveryTimeEnd',
  updatedBy: 'updatedBy',
  updatedAt: 'updatedAt',
  createdAt: 'createdAt'
};

exports.Prisma.SMSSettingsScalarFieldEnum = {
  id: 'id',
  enableNotifications: 'enableNotifications',
  senderId: 'senderId',
  deliveryTimeStart: 'deliveryTimeStart',
  deliveryTimeEnd: 'deliveryTimeEnd',
  smsProvider: 'smsProvider',
  serviceType: 'serviceType',
  user: 'user',
  password: 'password',
  host: 'host',
  port: 'port',
  updatedBy: 'updatedBy',
  updatedAt: 'updatedAt',
  createdAt: 'createdAt'
};

exports.Prisma.ChurnInsightScalarFieldEnum = {
  id: 'id',
  month: 'month',
  poorCustomerSupport: 'poorCustomerSupport',
  highServiceFees: 'highServiceFees',
  paymentIssues: 'paymentIssues',
  serviceDelays: 'serviceDelays',
  other: 'other',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.RewardRuleScalarFieldEnum = {
  id: 'id',
  pointsPerNaira: 'pointsPerNaira',
  nairaPerPoint: 'nairaPerPoint',
  appliesTo: 'appliesTo',
  validFrom: 'validFrom',
  validUntil: 'validUntil',
  isActive: 'isActive',
  createdById: 'createdById',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  updatedById: 'updatedById'
};

exports.Prisma.RewardScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  points: 'points',
  source: 'source',
  sourceId: 'sourceId',
  createdAt: 'createdAt',
  expiresAt: 'expiresAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.EventTypeRoleScalarFieldEnum = {
  id: 'id',
  eventTypeId: 'eventTypeId',
  roleId: 'roleId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.JsonNullValueInput = {
  JsonNull: Prisma.JsonNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};
exports.IdentityVerificationType = exports.$Enums.IdentityVerificationType = {
  DRIVER_LICENSE: 'DRIVER_LICENSE',
  VOTER_CARD: 'VOTER_CARD',
  INTERNATIONAL_PASSPORT: 'INTERNATIONAL_PASSPORT',
  NIN: 'NIN',
  RESIDENCE_PERMIT: 'RESIDENCE_PERMIT'
};

exports.IssueType = exports.$Enums.IssueType = {
  DELIVERY: 'DELIVERY',
  PAYMENT: 'PAYMENT',
  SERVICE: 'SERVICE',
  DEFECTIVE_PRODUCT: 'DEFECTIVE_PRODUCT',
  WRONG_ITEM: 'WRONG_ITEM',
  DELIVERY_ISSUE: 'DELIVERY_ISSUE',
  GENERAL: 'GENERAL',
  PRODUCT: 'PRODUCT'
};

exports.NotificationType = exports.$Enums.NotificationType = {
  NEW_ORDER: 'NEW_ORDER',
  ORDER_UPDATE: 'ORDER_UPDATE',
  ORDER_CANCELLED: 'ORDER_CANCELLED',
  FEEDBACK_SUBMITTED: 'FEEDBACK_SUBMITTED',
  EMAIL: 'EMAIL',
  SMS: 'SMS',
  PUSH: 'PUSH',
  WEBHOOK: 'WEBHOOK',
  ALL: 'ALL',
  DISCOUNT: 'DISCOUNT',
  PASSWORD_CHANGE: 'PASSWORD_CHANGE',
  WALLET_EVENT: 'WALLET_EVENT',
  PREFERENCE_UPDATE: 'PREFERENCE_UPDATE',
  VENDOR_LINKING: 'VENDOR_LINKING'
};

exports.ComplaintStatus = exports.$Enums.ComplaintStatus = {
  PENDING: 'PENDING',
  UNDER_REVIEW: 'UNDER_REVIEW',
  RESOLVED: 'RESOLVED',
  REJECTED: 'REJECTED'
};

exports.PaymentMethod = exports.$Enums.PaymentMethod = {
  MONNIFY: 'MONNIFY',
  CARD: 'CARD',
  TRANSFER: 'TRANSFER',
  WALLET: 'WALLET',
  PAY_ON_DELIVERY: 'PAY_ON_DELIVERY',
  VIRTUAL_ACCOUNT: 'VIRTUAL_ACCOUNT',
  BANK_TRANSFER: 'BANK_TRANSFER'
};

exports.AccessoryStatus = exports.$Enums.AccessoryStatus = {
  ACTIVE: 'ACTIVE',
  SUSPENDED: 'SUSPENDED',
  DELETED: 'DELETED'
};

exports.AgentStatus = exports.$Enums.AgentStatus = {
  AVAILABLE: 'AVAILABLE',
  ASSIGNED: 'ASSIGNED',
  PENDING: 'PENDING',
  SUSPENDED: 'SUSPENDED',
  DELIVERED: 'DELIVERED',
  BLOCKED: 'BLOCKED'
};

exports.AccountDeletionStatus = exports.$Enums.AccountDeletionStatus = {
  PENDING: 'PENDING',
  UNDER_REVIEW: 'UNDER_REVIEW',
  APPROVED: 'APPROVED',
  REJECTED: 'REJECTED'
};

exports.RevenueType = exports.$Enums.RevenueType = {
  SERVICE_CHARGE: 'SERVICE_CHARGE',
  TOPUP_CHARGE: 'TOPUP_CHARGE',
  DELIVERY_FEE: 'DELIVERY_FEE',
  VAT: 'VAT'
};

exports.SocialAccountProvider = exports.$Enums.SocialAccountProvider = {
  FACEBOOK: 'FACEBOOK',
  GOOGLE: 'GOOGLE'
};

exports.AppealStatus = exports.$Enums.AppealStatus = {
  PENDING: 'PENDING',
  APPROVED: 'APPROVED',
  REJECTED: 'REJECTED'
};

exports.TransactionType = exports.$Enums.TransactionType = {
  DEPOSIT: 'DEPOSIT',
  WITHDRAWAL: 'WITHDRAWAL',
  DEDUCTION: 'DEDUCTION',
  REFUND: 'REFUND'
};

exports.TransactionStatus = exports.$Enums.TransactionStatus = {
  FAILED: 'FAILED',
  PENDING: 'PENDING',
  CONFIRMED: 'CONFIRMED',
  COMPLETED: 'COMPLETED',
  PENDING_MANUAL: 'PENDING_MANUAL',
  PENDING_DELIVERY: 'PENDING_DELIVERY',
  CANCELLED: 'CANCELLED',
  REFUND: 'REFUND',
  AWAITING_APPROVAL: 'AWAITING_APPROVAL',
  REJECTED: 'REJECTED'
};

exports.WithdrawalLimitType = exports.$Enums.WithdrawalLimitType = {
  DAILY_AMOUNT: 'DAILY_AMOUNT',
  DAILY_COUNT: 'DAILY_COUNT',
  AUTO_AMOUNT: 'AUTO_AMOUNT'
};

exports.DocumentStatus = exports.$Enums.DocumentStatus = {
  VERIFIED: 'VERIFIED',
  NOT_VERIFIED: 'NOT_VERIFIED',
  PENDING: 'PENDING',
  UNDER_REVIEW: 'UNDER_REVIEW'
};

exports.DocumentType = exports.$Enums.DocumentType = {
  NIN: 'NIN',
  INTERNATIONAL_PASSPORT: 'INTERNATIONAL_PASSPORT',
  VOTER_CARD: 'VOTER_CARD',
  DRIVING_LICENCE: 'DRIVING_LICENCE',
  RESIDENCE_PERMIT: 'RESIDENCE_PERMIT',
  CAC: 'CAC',
  SAFETY_CERTIFICATE: 'SAFETY_CERTIFICATE',
  COMPLIANCE_CERTIFICATE: 'COMPLIANCE_CERTIFICATE',
  PLATE_NUMBER: 'PLATE_NUMBER',
  VEHICLE_ROAD_LICENSE: 'VEHICLE_ROAD_LICENSE'
};

exports.VoucherType = exports.$Enums.VoucherType = {
  PERCENTAGE: 'PERCENTAGE',
  FIXED: 'FIXED'
};

exports.VerificationStatus = exports.$Enums.VerificationStatus = {
  PENDING: 'PENDING',
  APPROVED: 'APPROVED',
  REJECTED: 'REJECTED',
  INCOMPLETE: 'INCOMPLETE'
};

exports.ServiceStatus = exports.$Enums.ServiceStatus = {
  ACTIVE: 'ACTIVE',
  INACTIVE: 'INACTIVE',
  APPROVED: 'APPROVED',
  REJECTED: 'REJECTED',
  SUSPENDED: 'SUSPENDED',
  DISCONTINUED: 'DISCONTINUED',
  PENDING_VERIFICATION: 'PENDING_VERIFICATION'
};

exports.ServiceOrderStatus = exports.$Enums.ServiceOrderStatus = {
  PENDING: 'PENDING',
  PROCESSING: 'PROCESSING',
  AGENT_ASSIGNED: 'AGENT_ASSIGNED',
  OUT_FOR_DELIVERY: 'OUT_FOR_DELIVERY',
  DELIVERED: 'DELIVERED',
  CANCELLED: 'CANCELLED',
  REJECTED: 'REJECTED',
  OUT_OF_STOCK: 'OUT_OF_STOCK',
  PAYMENT_RECEIVED: 'PAYMENT_RECEIVED',
  ORDER_RECEIVED: 'ORDER_RECEIVED'
};

exports.LicenseType = exports.$Enums.LicenseType = {
  DRIVERS_LICENSE: 'DRIVERS_LICENSE',
  DRIVING_LICENSE: 'DRIVING_LICENSE',
  OPERATORS_LICENSE: 'OPERATORS_LICENSE',
  BUSINESS: 'BUSINESS',
  VEHICLE: 'VEHICLE',
  SAFETY: 'SAFETY',
  OPERATIONAL: 'OPERATIONAL'
};

exports.OrderStatus = exports.$Enums.OrderStatus = {
  PENDING: 'PENDING',
  PROCESSING: 'PROCESSING',
  AGENT_ASSIGNED: 'AGENT_ASSIGNED',
  OUT_FOR_DELIVERY: 'OUT_FOR_DELIVERY',
  DELIVERED: 'DELIVERED',
  CANCELLED: 'CANCELLED',
  REJECTED: 'REJECTED',
  OUT_OF_STOCK: 'OUT_OF_STOCK',
  PAYMENT_RECEIVED: 'PAYMENT_RECEIVED',
  ORDER_RECEIVED: 'ORDER_RECEIVED',
  DISPUTED: 'DISPUTED'
};

exports.ProductStatus = exports.$Enums.ProductStatus = {
  PENDING: 'PENDING',
  APPROVED: 'APPROVED',
  REJECTED: 'REJECTED'
};

exports.FeedbackStatus = exports.$Enums.FeedbackStatus = {
  PENDING: 'PENDING',
  RESOLVED: 'RESOLVED',
  RESPONDED: 'RESPONDED'
};

exports.DisputeStatus = exports.$Enums.DisputeStatus = {
  PENDING: 'PENDING',
  RESOLVED: 'RESOLVED'
};

exports.WithdrawalStatus = exports.$Enums.WithdrawalStatus = {
  PENDING: 'PENDING',
  COMPLETED: 'COMPLETED',
  FAILED: 'FAILED'
};

exports.LocationStatus = exports.$Enums.LocationStatus = {
  ENABLED: 'ENABLED',
  DISABLED: 'DISABLED',
  RESTRICTED: 'RESTRICTED'
};

exports.CrashStatus = exports.$Enums.CrashStatus = {
  PENDING: 'PENDING',
  UNDER_INVESTIGATION: 'UNDER_INVESTIGATION',
  PRIORITY: 'PRIORITY',
  RESOLVED: 'RESOLVED'
};

exports.StationType = exports.$Enums.StationType = {
  GAS: 'GAS',
  PETROL: 'PETROL',
  DIESEL: 'DIESEL'
};

exports.Prisma.ModelName = {
  Rating: 'Rating',
  User: 'User',
  Role: 'Role',
  Profile: 'Profile',
  Zone: 'Zone',
  Complaint: 'Complaint',
  Staff: 'Staff',
  NotificationPreference: 'NotificationPreference',
  IdentityVerification: 'IdentityVerification',
  IdentityVerificationStatusHistory: 'IdentityVerificationStatusHistory',
  License: 'License',
  Vehicle: 'Vehicle',
  VendorWalletConfig: 'VendorWalletConfig',
  ServiceType: 'ServiceType',
  ServiceOrder: 'ServiceOrder',
  ServiceOrderStatusHistory: 'ServiceOrderStatusHistory',
  BVNVerification: 'BVNVerification',
  Accessory: 'Accessory',
  Services: 'Services',
  ServiceReview: 'ServiceReview',
  BusinessVerification: 'BusinessVerification',
  ProductOrder: 'ProductOrder',
  ServiceVerification: 'ServiceVerification',
  AuditLog: 'AuditLog',
  WalletTransaction: 'WalletTransaction',
  Otp: 'Otp',
  Voucher: 'Voucher',
  VoucherUsage: 'VoucherUsage',
  Favorite: 'Favorite',
  Transfer: 'Transfer',
  CustomerAddress: 'CustomerAddress',
  SubAccount: 'SubAccount',
  Feedback: 'Feedback',
  OrderReview: 'OrderReview',
  Session: 'Session',
  PayOnDeliveryOrder: 'PayOnDeliveryOrder',
  Payment: 'Payment',
  Report: 'Report',
  Wallet: 'Wallet',
  PaymentProvider: 'PaymentProvider',
  Category: 'Category',
  ProductType: 'ProductType',
  Product: 'Product',
  Cart: 'Cart',
  ContactOption: 'ContactOption',
  CartItem: 'CartItem',
  Infraction: 'Infraction',
  OrderItem: 'OrderItem',
  PaymentConfig: 'PaymentConfig',
  Dispute: 'Dispute',
  Withdrawal: 'Withdrawal',
  WithdrawalLimit: 'WithdrawalLimit',
  QuicrifillWallet: 'QuicrifillWallet',
  QuicrifillWithdrawal: 'QuicrifillWithdrawal',
  AppInstallation: 'AppInstallation',
  Country: 'Country',
  State: 'State',
  City: 'City',
  Lga: 'Lga',
  VirtualAccount: 'VirtualAccount',
  FraudAlert: 'FraudAlert',
  EmailTemplate: 'EmailTemplate',
  RolePrivilege: 'RolePrivilege',
  CrashReport: 'CrashReport',
  AccountDeletionRequest: 'AccountDeletionRequest',
  AdminSettings: 'AdminSettings',
  Appeal: 'Appeal',
  WalletSettings: 'WalletSettings',
  BankCard: 'BankCard',
  OrderStatusHistory: 'OrderStatusHistory',
  WebhookAttempt: 'WebhookAttempt',
  EventType: 'EventType',
  SMSTemplate: 'SMSTemplate',
  NotificationLog: 'NotificationLog',
  PushTemplate: 'PushTemplate',
  Webhook: 'Webhook',
  EmailSettings: 'EmailSettings',
  SMSSettings: 'SMSSettings',
  ChurnInsight: 'ChurnInsight',
  RewardRule: 'RewardRule',
  Reward: 'Reward',
  EventTypeRole: 'EventTypeRole'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "/Users/funmishonubi/Desktop/Quicrefill_Deployment/CustomerServices/node_modules/.prisma/client",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "darwin",
        "native": true
      },
      {
        "fromEnvVar": null,
        "value": "linux-musl-openssl-3.0.x"
      }
    ],
    "previewFeatures": [
      "multiSchema",
      "postgresqlExtensions"
    ],
    "sourceFilePath": "/Users/funmishonubi/Desktop/Quicrefill_Deployment/CustomerServices/prisma/schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.16.3",
  "engineVersion": "bb420e667c1820a8c05a38023385f6cc7ef8e83a",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "POSTGRES_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "//Configures the Prisma Client generator to use the JavaScript client\ngenerator client {\n  provider        = \"prisma-client-js\"\n  previewFeatures = [\"postgresqlExtensions\", \"multiSchema\"]\n  output          = \"../node_modules/.prisma/client\"\n  binaryTargets   = [\"native\", \"linux-musl-openssl-3.0.x\"]\n}\n\n// Defines the database connection using PostgreSQL and an environment variable for the URL\ndatasource db {\n  provider   = \"postgresql\"\n  url        = env(\"POSTGRES_URL\")\n  schemas    = [\"public\"]\n  extensions = [postgis]\n}\n\nenum IdentityVerificationType {\n  DRIVER_LICENSE\n  VOTER_CARD\n  INTERNATIONAL_PASSPORT\n  NIN\n  RESIDENCE_PERMIT\n\n  @@schema(\"public\")\n}\n\nenum IssueType {\n  DELIVERY\n  PAYMENT\n  SERVICE\n  DEFECTIVE_PRODUCT\n  WRONG_ITEM\n  DELIVERY_ISSUE\n  GENERAL\n  PRODUCT\n\n  @@schema(\"public\")\n}\n\nenum NotificationType {\n  NEW_ORDER\n  ORDER_UPDATE\n  ORDER_CANCELLED\n  FEEDBACK_SUBMITTED\n  EMAIL\n  SMS\n  PUSH\n  WEBHOOK\n  ALL\n  DISCOUNT // Exclusive discounts\n  PASSWORD_CHANGE // Password change alerts\n  WALLET_EVENT // Wallet events (e.g., deposit)\n  PREFERENCE_UPDATE // Preference updates\n\n  VENDOR_LINKING\n\n  @@schema(\"public\")\n}\n\nenum ComplaintStatus {\n  PENDING\n  UNDER_REVIEW\n  RESOLVED\n  REJECTED\n\n  @@schema(\"public\")\n}\n\nenum PaymentMethod {\n  MONNIFY\n  CARD\n  TRANSFER\n  WALLET\n  PAY_ON_DELIVERY\n  VIRTUAL_ACCOUNT\n  BANK_TRANSFER\n\n  @@schema(\"public\")\n}\n\nenum AccessoryStatus {\n  ACTIVE\n  SUSPENDED\n  DELETED\n\n  @@schema(\"public\")\n}\n\nenum AgentStatus {\n  AVAILABLE\n  ASSIGNED\n  PENDING\n  SUSPENDED\n  DELIVERED\n  BLOCKED\n\n  @@schema(\"public\")\n}\n\nenum AccountDeletionStatus {\n  PENDING\n  UNDER_REVIEW\n  APPROVED\n  REJECTED\n\n  @@schema(\"public\")\n}\n\nenum RevenueType {\n  SERVICE_CHARGE\n  TOPUP_CHARGE\n  DELIVERY_FEE\n  VAT\n\n  @@schema(\"public\")\n}\n\nenum SocialAccountProvider {\n  FACEBOOK\n  GOOGLE\n\n  @@schema(\"public\")\n}\n\nenum AppealStatus {\n  PENDING\n  APPROVED\n  REJECTED\n\n  @@schema(\"public\")\n}\n\nenum TransactionType {\n  DEPOSIT\n  WITHDRAWAL\n  DEDUCTION\n  REFUND\n\n  @@schema(\"public\")\n}\n\nenum TransactionStatus {\n  FAILED\n  PENDING\n  CONFIRMED\n  COMPLETED\n  PENDING_MANUAL\n  PENDING_DELIVERY\n  CANCELLED\n  REFUND\n\n  AWAITING_APPROVAL\n  REJECTED\n\n  @@schema(\"public\")\n}\n\nenum WithdrawalLimitType {\n  DAILY_AMOUNT\n  DAILY_COUNT\n  AUTO_AMOUNT\n\n  @@schema(\"public\")\n}\n\nenum DocumentStatus {\n  VERIFIED\n  NOT_VERIFIED\n  PENDING\n  UNDER_REVIEW\n\n  @@schema(\"public\")\n}\n\nenum DocumentType {\n  NIN\n  INTERNATIONAL_PASSPORT\n  VOTER_CARD\n  DRIVING_LICENCE\n  RESIDENCE_PERMIT\n  CAC\n  SAFETY_CERTIFICATE\n  COMPLIANCE_CERTIFICATE\n  PLATE_NUMBER\n  VEHICLE_ROAD_LICENSE\n\n  @@schema(\"public\")\n}\n\nenum VoucherType {\n  PERCENTAGE\n  FIXED\n\n  @@schema(\"public\")\n}\n\n// Common verification status for all verification types\nenum VerificationStatus {\n  PENDING\n  APPROVED\n  REJECTED\n  INCOMPLETE\n\n  @@schema(\"public\")\n}\n\n// Service status options\nenum ServiceStatus {\n  ACTIVE\n  INACTIVE\n  APPROVED\n  REJECTED\n  SUSPENDED\n  DISCONTINUED\n  PENDING_VERIFICATION\n\n  @@schema(\"public\")\n}\n\nenum ServiceOrderStatus {\n  PENDING\n  PROCESSING\n  AGENT_ASSIGNED\n  OUT_FOR_DELIVERY\n  DELIVERED\n  CANCELLED\n  REJECTED\n  OUT_OF_STOCK\n  PAYMENT_RECEIVED\n  ORDER_RECEIVED\n\n  @@schema(\"public\")\n}\n\n// License types - expanded based on Figma designs\nenum LicenseType {\n  DRIVERS_LICENSE\n  DRIVING_LICENSE\n  OPERATORS_LICENSE\n  BUSINESS\n  VEHICLE\n  SAFETY\n  OPERATIONAL\n\n  @@schema(\"public\")\n}\n\nenum OrderStatus {\n  PENDING\n  PROCESSING\n  AGENT_ASSIGNED\n  OUT_FOR_DELIVERY\n  DELIVERED\n  CANCELLED\n  REJECTED\n  OUT_OF_STOCK\n  PAYMENT_RECEIVED\n  ORDER_RECEIVED\n  DISPUTED\n\n  @@schema(\"public\")\n}\n\nenum ProductStatus {\n  PENDING\n  APPROVED\n  REJECTED\n\n  @@schema(\"public\")\n}\n\nenum FeedbackStatus {\n  PENDING\n  RESOLVED\n  RESPONDED\n\n  @@schema(\"public\")\n}\n\nenum DisputeStatus {\n  PENDING\n  RESOLVED\n\n  @@schema(\"public\")\n}\n\nenum WithdrawalStatus {\n  PENDING\n  COMPLETED\n  FAILED\n\n  @@schema(\"public\")\n}\n\nenum LocationStatus {\n  ENABLED\n  DISABLED\n  RESTRICTED\n\n  @@schema(\"public\")\n}\n\nenum CrashStatus {\n  PENDING\n  UNDER_INVESTIGATION\n  PRIORITY\n  RESOLVED\n\n  @@schema(\"public\")\n}\n\nenum StationType {\n  GAS\n  PETROL\n  DIESEL\n\n  @@schema(\"public\")\n}\n\nmodel Rating {\n  id          String   @id @default(uuid()) @db.Uuid\n  userId      String   @db.Uuid\n  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)\n  roleId      String   @db.Uuid\n  role        Role     @relation(\"RatingRoles\", fields: [roleId], references: [id])\n  avgRating   Float    @default(0.0)\n  ratingCount Int      @default(0)\n  createdAt   DateTime @default(now())\n  updatedAt   DateTime @updatedAt\n\n  @@unique([userId, roleId])\n  @@index([userId])\n  @@index([createdAt])\n  @@schema(\"public\")\n}\n\nmodel User {\n  id                                String                              @id @default(uuid()) @db.Uuid\n  roleId                            String?                             @db.Uuid\n  role                              Role?                               @relation(\"UserRoles\", fields: [roleId], references: [id])\n  email                             String                              @unique\n  username                          String?                             @unique @db.VarChar(50)\n  firstName                         String\n  lastName                          String\n  name                              String?\n  uniqueDeliveryId                  String?                             @unique @db.VarChar(50)\n  deviceToken                       String?                             @db.VarChar(255)\n  phoneNumber                       String?                             @unique\n  phoneVerified                     Boolean                             @default(false)\n  identityVerified                  Boolean                             @default(false)\n  bvnVerified                       Boolean                             @default(false)\n  businessVerified                  Boolean                             @default(false)\n  webAccessGranted                  Boolean                             @default(false)\n  webAccessGrantedAt                DateTime?\n  migratedToVendor                  Boolean                             @default(false)\n  migrationDate                     DateTime?\n  createdAt                         DateTime                            @default(now())\n  updatedAt                         DateTime                            @updatedAt\n  inviteCode                        String?\n  publicKey                         String?\n  address                           String?\n  avatar                            String?\n  emailVerified                     Boolean                             @default(false)\n  password                          String?\n  isSocialAccount                   Boolean                             @default(false)\n  socialAccountProvider             SocialAccountProvider?\n  notificationsEnabled              Boolean                             @default(true)\n  twoFactorEnabled                  Boolean                             @default(false)\n  twoFactorSecret                   String?                             @db.VarChar(255)\n  notificationPreference            NotificationType?\n  customerAddress                   CustomerAddress[]\n  walletTransactions                WalletTransaction[]\n  payOnDeliveryOrders               PayOnDeliveryOrder[]\n  profile                           Profile?                            @relation(\"UserToProfile\")\n  orders                            ProductOrder[]                      @relation(\"UserProductOrders\")\n  vouchersCreated                   Voucher[]                           @relation(\"VoucherCreator\")\n  payments                          Payment[]\n  wallet                            Wallet?\n  savedMeterNumbers                 String[]                            @default([])\n  agentOrders                       ProductOrder[]                      @relation(\"AgentProductOrders\")\n  carts                             Cart[]\n  products                          Product[]\n  otps                              Otp[]\n  withdrawals                       Withdrawal[]                        @relation(\"UserWithdrawals\")\n  appInstallations                  AppInstallation[]                   @relation(\"UserInstallations\")\n  isSuspended                       Boolean                             @default(false)\n  suspendedAt                       DateTime?\n  deletionRequestedAt               DateTime?\n  deletedAt                         DateTime?\n  isWithdrawalSuspended             Boolean                             @default(false)\n  withdrawalSuspendedAt             DateTime?\n  withdrawalSuspensionReason        String?                             @db.VarChar(255)\n  withdrawalSuspensionDuration      Int?\n  fraudAlerts                       FraudAlert[]                        @relation(\"UserFraudAlerts\")\n  vendorFraudAlerts                 FraudAlert[]                        @relation(\"VendorFraudAlerts\")\n  smsTemplates                      SMSTemplate[]                       @relation(\"UserToSMSTemplate\")\n  emailTemplates                    EmailTemplate[]                     @relation(\"UserToEmailTemplate\")\n  auditLogs                         AuditLog[]                          @relation(\"UserAuditLogs\")\n  gender                            String?                             @db.VarChar(20)\n  dateOfBirth                       DateTime?\n  crashReports                      CrashReport[]                       @relation(\"UserCrashReports\")\n  accountDeletionRequest            AccountDeletionRequest?             @relation\n  reviewedAccountDeletionRequests   AccountDeletionRequest[]            @relation(\"ReviewedBy\")\n  notificationLogsUser              NotificationLog[]                   @relation(\"UserNotificationLogs\")\n  notificationLogsVendor            NotificationLog[]                   @relation(\"VendorNotificationLogs\")\n  appealsAsUser                     Appeal[]                            @relation(\"AppealToUser\")\n  bankCards                         BankCard[]                          @relation(\"UserToBankCard\")\n  settings                          WalletSettings?                     @relation(\"UserToWalletSettings\")\n  bvnVerifications                  BVNVerification[]                   @relation(\"UserToBVNVerification\")\n  notificationPreferences           NotificationPreference?             @relation(\"UserToNotificationPreference\")\n  orderStatusHistory                OrderStatusHistory[]                @relation(\"UserOrderStatusHistory\")\n  ratings                           Rating[]\n  orderReviews                      OrderReview[]\n  EventType                         EventType[]\n  givenFeedback                     Feedback[]                          @relation(\"FeedbackToUser\")\n  receivedFeedback                  Feedback[]                          @relation(\"FeedbackReceiver\")\n  serviceOrders                     ServiceOrder[]                      @relation(\"UserServiceOrders\")\n  agentServiceOrders                ServiceOrder[]                      @relation(\"AgentServiceOrders\")\n  adminServiceOrders                ServiceOrder[]                      @relation(\"AdminServiceOrders\")\n  reviewedIdentityVerifications     IdentityVerification[]              @relation(\"IdentityVerificationReviewedBy\")\n  identityVerification              IdentityVerification?               @relation(\"UserToIdentityVerification\")\n  businessVerification              BusinessVerification?               @relation(\"UserToBusinessVerification\")\n  pushToken                         String?                             @db.VarChar(255)\n  pushTemplates                     PushTemplate[]                      @relation(\"UserToPushTemplate\")\n  emailSettings                     EmailSettings[]                     @relation(\"EmailSettingsToUser\")\n  smsSettings                       SMSSettings[]                       @relation(\"SMSSettingsToUser\")\n  lastLoginAt                       DateTime?                           @map(\"last_login_at\")\n  virtualAccounts                   VirtualAccount[]                    @relation(\"UserToVirtualAccount\")\n  voucherUsages                     VoucherUsage[]                      @relation\n  reportsAsReporter                 Report[]                            @relation(\"ReportReporter\")\n  reportsAsAdmin                    Report[]                            @relation(\"ReportAdmin\")\n  rewardRulesCreated                RewardRule[]                        @relation(\"RewardRuleCreatedBy\")\n  rewardRulesUpdated                RewardRule[]                        @relation(\"RewardRuleUpdatedBy\")\n  rewards                           Reward[]                            @relation(\"RewardToUser\")\n  staff                             Staff?                              @relation\n  isWithdrawalAllowed               Boolean                             @default(false)\n  createdStaff                      Staff[]                             @relation(\"StaffCreatedBy\")\n  isDeliveryAgent                   Boolean                             @default(false)\n  subAccounts                       SubAccount[]\n  isAdmin                           Boolean                             @default(false)\n  isVendor                          Boolean                             @default(false)\n  complaints                        Complaint[]                         @relation(\"UserComplaints\")\n  assignedComplaints                Complaint[]                         @relation(\"AssignedTeamComplaints\")\n  status                            String?                             @db.VarChar(50)\n  agentServices                     Services[]                          @relation(\"AgentServices\")\n  banReason                         String?                             @db.VarChar(255)\n  blocked                           Boolean                             @default(false)\n  isPenalized                       Boolean                             @default(false)\n  serviceVerifications              ServiceVerification[]               @relation(\"UserToServiceVerification\")\n  serviceOrderStatusHistory         ServiceOrderStatusHistory[]         @relation(\"UserServiceOrderStatusHistory\")\n  licenses                          License[]                           @relation(\"UserToLicense\")\n  vehicles                          Vehicle[]                           @relation(\"UserToVehicle\")\n  providerServices                  Services[]                          @relation(\"ProviderServices\")\n  createdServiceTypes               ServiceType[]                       @relation(\"ServiceTypeCreatedBy\")\n  createdProductTypes               ProductType[]                       @relation(\"ProductTypeCreatedBy\")\n  createdRoles                      Role[]                              @relation(\"RoleCreatedBy\")\n  withdrawalLimitsUpdated           WithdrawalLimit[]                   @relation(\"WithdrawalLimitUpdatedBy\")\n  sessions                          Session[]                           @relation(\"UserToSessions\")\n  identityVerificationStatusHistory IdentityVerificationStatusHistory[] @relation(\"UserIdentityVerificationStatusHistory\")\n\n  @@index([roleId])\n  @@index([createdAt])\n  @@schema(\"public\")\n}\n\nmodel Role {\n  id                  String            @id @default(uuid()) @db.Uuid\n  name                String            @unique @db.VarChar(50)\n  description         String?           @db.Text\n  isActive            Boolean           @default(true)\n  createdAt           DateTime          @default(now())\n  updatedAt           DateTime          @updatedAt\n  createdById         String?           @db.Uuid\n  createdBy           User?             @relation(\"RoleCreatedBy\", fields: [createdById], references: [id])\n  users               User[]            @relation(\"UserRoles\")\n  staff               Staff[]           @relation(\"StaffRoles\")\n  ratings             Rating[]          @relation(\"RatingRoles\")\n  feedbackGivers      Feedback[]        @relation(\"FeedbackGiverRoles\")\n  feedbackReceivers   Feedback[]        @relation(\"FeedbackReceiverRoles\")\n  profiles            Profile[]         @relation(\"ProfileRoles\")\n  emailTemplates      EmailTemplate[]   @relation(\"EmailTemplateRoles\")\n  smsTemplates        SMSTemplate[]     @relation(\"SMSTemplateRoles\")\n  pushTemplates       PushTemplate[]    @relation(\"PushTemplateRoles\")\n  webhooks            Webhook[]         @relation(\"WebhookRoles\")\n  voucherRestrictedTo Voucher[]         @relation(\"VoucherRestrictedToRoles\")\n  withdrawalLimits    WithdrawalLimit[] @relation(\"WithdrawalLimitRoles\")\n  rolePrivileges      RolePrivilege[]   @relation(\"RoleToPrivileges\")\n  eventTypeRoles      EventTypeRole[]   @relation\n\n  @@index([name])\n  @@index([createdById])\n  @@schema(\"public\")\n}\n\nmodel Profile {\n  id                         String                                @id @default(uuid()) @db.Uuid\n  userId                     String                                @unique @db.Uuid\n  user                       User                                  @relation(\"UserToProfile\", fields: [userId], references: [id], onDelete: Cascade)\n  roleId                     String                                @db.Uuid\n  role                       Role                                  @relation(\"ProfileRoles\", fields: [roleId], references: [id])\n  status                     AgentStatus?\n  isWebEnabled               Boolean                               @default(false)\n  webEnabledAt               DateTime?\n  department                 String?                               @db.VarChar(100)\n  jobTitle                   String?                               @db.VarChar(100)\n  permissions                Json?\n  vehicleType                String?                               @db.VarChar(50)\n  vehiclePlate               String?                               @db.VarChar(20)\n  lastLocationLat            Float?\n  lastLocationLng            Float?\n  lastLocationAt             DateTime?\n  lastLocation               Unsupported(\"geometry(Point, 4326)\")?\n  vendorId                   String?                               @db.Uuid\n  vendor                     Profile?                              @relation(\"VendorToAgents\", fields: [vendorId], references: [id])\n  defaultDeliveryFee         Float?                                @default(0.0)\n  roleSpecificData           Json?\n  services                   Services[]                            @relation(\"VendorServices\")\n  orders                     ProductOrder[]                        @relation(\"VendorProductOrders\")\n  serviceOrders              ServiceOrder[]                        @relation(\"VendorToServiceOrders\")\n  deliveryReps               Profile[]                             @relation(\"VendorToDeliveryReps\")\n  agents                     Profile[]                             @relation(\"VendorToAgents\")\n  deliveryRepVendor          Profile?                              @relation(\"VendorToDeliveryReps\", fields: [profileId], references: [id])\n  servicesAsDeliveryRep      Services[]                            @relation(\"DeliveryRepServices\")\n  feedbackAsAgent            Feedback[]                            @relation(\"AgentFeedback\")\n  feedbackAsVendor           Feedback[]                            @relation(\"VendorFeedback\")\n  customerReviews            Feedback[]                            @relation(\"CustomerReviews\")\n  infractionsAsAgent         Infraction[]                          @relation(\"InfractionToAgent\")\n  infractionsAsDeliveryRep   Infraction[]                          @relation(\"InfractionToDeliveryRep\")\n  infractionsAsVendor        Infraction[]                          @relation(\"InfractionToVendor\")\n  appealsAsVendor            Appeal[]                              @relation(\"AppealToVendor\")\n  vendorWalletConfigs        VendorWalletConfig[]                  @relation(\"VendorToWalletConfig\")\n  createdAt                  DateTime                              @default(now())\n  updatedAt                  DateTime                              @updatedAt\n  profileId                  String?                               @db.Uuid\n  businessVerificationStatus VerificationStatus?                   @default(PENDING)\n  identityVerificationStatus DocumentStatus?                       @default(PENDING)\n  serviceVerificationStatus  VerificationStatus?                   @default(PENDING)\n  businessVerification       BusinessVerification?                 @relation(\"ProfileToBusinessVerification\")\n  identityVerification       IdentityVerification?                 @relation(\"ProfileToIdentityVerification\")\n  serviceVerification        ServiceVerification?                  @relation(\"ProfileToServiceVerification\")\n  wallet                     Wallet?                               @relation(\"ProfileToWallet\")\n  savedAddresses             CustomerAddress[]                     @relation(\"ProfileToSavedAddresses\")\n  savedCards                 BankCard[]                            @relation(\"ProfileToSavedCards\")\n  favorites                  Favorite[]                            @relation(\"ProfileToFavorites\")\n  walletBalance              Decimal?                              @default(0.00) @db.Decimal(10, 2)\n  avatar                     String?                               @db.Text\n  deliveries                 Int                                   @default(0)\n  rating                     Float?                                @default(0.0)\n  yearsOnPlatform            Float?                                @default(0.0)\n  achievements               Json?\n  fiveStarRatingsCount       Int?                                  @default(0)\n  reportsAsAgentProfile      Report[]                              @relation(\"ReportAgentProfile\")\n  reportsAsVendor            Report[]                              @relation(\"ReportVendor\")\n  staff                      Staff?                                @relation\n  avgRating                  Float?\n  ratingCount                Int?\n  fiveStarCount              Int?\n\n  @@index([userId])\n  @@index([roleId])\n  @@index([createdAt])\n  @@schema(\"public\")\n}\n\nmodel Zone {\n  id              String         @id @default(uuid()) @db.Uuid\n  serviceId       String?        @db.Uuid\n  service         Services?      @relation(\"ServicesToZones\", fields: [serviceId], references: [id], onDelete: Cascade)\n  name            String\n  minDeliveryDays Int\n  maxDeliveryDays Int\n  orderCutoffTime String         @db.VarChar(5)\n  status          Boolean        @default(true)\n  providerId      String         @db.Uuid\n  providerRole    String\n  address         String?        @db.Text\n  latitude        Float\n  longitude       Float\n  serviceRadius   Float?\n  priceMultiplier Float          @default(1.0)\n  createdAt       DateTime       @default(now())\n  updatedAt       DateTime       @updatedAt\n  serviceOrders   ServiceOrder[] @relation(\"ZoneToServiceOrders\")\n\n  @@index([serviceId])\n  @@index([providerId])\n  @@schema(\"public\")\n}\n\nmodel Complaint {\n  id                String          @id @default(uuid()) @db.Uuid\n  orderId           String?         @db.Uuid\n  order             ProductOrder?   @relation(\"ProductOrderComplaints\", fields: [orderId], references: [id], onDelete: Cascade)\n  serviceOrderId    String?         @db.Uuid\n  serviceOrder      ServiceOrder?   @relation(\"ServiceOrderComplaints\", fields: [serviceOrderId], references: [id], onDelete: Cascade)\n  productId         String?         @db.Uuid\n  product           Product?        @relation(\"ProductComplaints\", fields: [productId], references: [id], onDelete: SetNull)\n  serviceId         String?         @db.Uuid\n  service           Services?       @relation(\"ServicesComplaints\", fields: [serviceId], references: [id], onDelete: SetNull)\n  userId            String          @db.Uuid\n  user              User            @relation(\"UserComplaints\", fields: [userId], references: [id], onDelete: Cascade)\n  issueType         IssueType       @default(GENERAL)\n  description       String          @db.Text\n  reason            String?         @db.Text\n  status            ComplaintStatus @default(PENDING)\n  internalNote      String?         @db.Text\n  resolutionDetails String?         @db.Text\n  assignedTeamId    String?         @db.Uuid\n  assignedTeam      User?           @relation(\"AssignedTeamComplaints\", fields: [assignedTeamId], references: [id])\n  createdAt         DateTime        @default(now())\n  updatedAt         DateTime        @updatedAt\n  resolvedAt        DateTime?\n  images            String[]        @default([])\n  ticketId          String          @unique @db.VarChar(50)\n\n  @@index([orderId, productId, userId])\n  @@index([serviceOrderId])\n  @@index([serviceId])\n  @@index([createdAt])\n  @@schema(\"public\")\n}\n\nmodel Staff {\n  id          String   @id @default(uuid()) @db.Uuid\n  userId      String   @unique @db.Uuid\n  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)\n  profileId   String?  @unique @db.Uuid\n  profile     Profile? @relation(fields: [profileId], references: [id], onDelete: Cascade)\n  roleId      String?  @db.Uuid\n  role        Role?    @relation(\"StaffRoles\", fields: [roleId], references: [id])\n  customRole  String?  @db.VarChar(50)\n  createdById String   @db.Uuid\n  createdBy   User     @relation(\"StaffCreatedBy\", fields: [createdById], references: [id])\n  createdAt   DateTime @default(now())\n  updatedAt   DateTime @updatedAt\n  isActive    Boolean  @default(true)\n  metadata    Json?\n\n  @@index([userId, roleId])\n  @@index([createdById])\n  @@schema(\"public\")\n}\n\nmodel NotificationPreference {\n  id                    String             @id @default(uuid()) @db.Uuid\n  userId                String             @unique @db.Uuid\n  user                  User               @relation(\"UserToNotificationPreference\", fields: [userId], references: [id], onDelete: Cascade)\n  pushEnabled           Boolean            @default(true)\n  emailEnabled          Boolean            @default(true)\n  smsEnabled            Boolean            @default(true)\n  discountsEnabled      Boolean            @default(true)\n  passwordChangeEnabled Boolean            @default(true)\n  notificationTypes     NotificationType[] @default([])\n  createdAt             DateTime           @default(now())\n  updatedAt             DateTime           @updatedAt\n\n  @@index([userId])\n  @@index([createdAt])\n  @@schema(\"public\")\n}\n\nmodel IdentityVerification {\n  id              String                              @id @default(uuid()) @db.Uuid\n  userId          String                              @unique @db.Uuid\n  user            User                                @relation(\"UserToIdentityVerification\", fields: [userId], references: [id], onDelete: Cascade)\n  profileId       String                              @unique @db.Uuid\n  profile         Profile                             @relation(\"ProfileToIdentityVerification\", fields: [profileId], references: [id], onDelete: Cascade)\n  documentType    IdentityVerificationType\n  country         String                              @db.VarChar(100)\n  frontImageUrl   String\n  backImageUrl    String?\n  selfieImageUrl  String\n  status          DocumentStatus                      @default(PENDING)\n  reviewedById    String?                             @db.Uuid\n  reviewedBy      User?                               @relation(\"IdentityVerificationReviewedBy\", fields: [reviewedById], references: [id])\n  reviewedAt      DateTime?\n  rejectionReason String?                             @db.Text\n  submittedAt     DateTime                            @default(now())\n  processedAt     DateTime?\n  createdAt       DateTime                            @default(now())\n  updatedAt       DateTime                            @updatedAt\n  deviceInfo      String?                             @db.Text\n  documentNumber  String                              @db.VarChar(100)\n  statusHistory   IdentityVerificationStatusHistory[] @relation(\"IdentityVerificationStatusHistory\") // Added for status history\n\n  @@index([userId, status])\n  @@index([profileId])\n  @@schema(\"public\")\n}\n\nmodel IdentityVerificationStatusHistory {\n  id             String               @id @default(uuid()) @db.Uuid\n  verificationId String               @db.Uuid\n  verification   IdentityVerification @relation(\"IdentityVerificationStatusHistory\", fields: [verificationId], references: [id], onDelete: Cascade)\n  status         DocumentStatus\n  updatedById    String?              @db.Uuid\n  updatedBy      User?                @relation(\"UserIdentityVerificationStatusHistory\", fields: [updatedById], references: [id])\n  notes          String?              @db.Text\n  createdAt      DateTime             @default(now())\n\n  @@index([verificationId])\n  @@index([createdAt])\n  @@schema(\"public\")\n}\n\nmodel License {\n  id              String             @id @default(uuid()) @db.Uuid\n  userId          String             @db.Uuid\n  user            User               @relation(\"UserToLicense\", fields: [userId], references: [id], onDelete: Cascade)\n  licenseType     LicenseType\n  licenseNumber   String\n  issuedBy        String?\n  issuedDate      DateTime?\n  expiryDate      DateTime?\n  documentUrl     String\n  documentBackUrl String\n  documentType    DocumentType\n  verified        Boolean            @default(false)\n  status          VerificationStatus @default(PENDING)\n  verifiedAt      DateTime?\n  rejectionReason String?\n  verifiedById    String?            @db.Uuid\n  services        Services[]         @relation(\"ServicesToLicenses\")\n  createdAt       DateTime           @default(now())\n  updatedAt       DateTime           @updatedAt\n  urlStatuses     Json?\n\n  @@index([userId])\n  @@schema(\"public\")\n}\n\nmodel Vehicle {\n  id                    String             @id @default(uuid()) @db.Uuid\n  userId                String             @db.Uuid\n  user                  User               @relation(\"UserToVehicle\", fields: [userId], references: [id], onDelete: Cascade)\n  plateNumberUrl        String\n  driverLicenseUrl      String\n  vehicleRoadLicenseUrl String\n  verified              Boolean            @default(false)\n  status                VerificationStatus @default(PENDING)\n  verifiedAt            DateTime?\n  rejectionReason       String?\n  documentType          DocumentType\n  verifiedById          String?            @db.Uuid\n  services              Services[]         @relation(\"ServicesToVehicles\")\n  plateNumber           String?\n  createdAt             DateTime           @default(now())\n  updatedAt             DateTime           @updatedAt\n  urlStatuses           Json?\n\n  @@index([userId])\n  @@schema(\"public\")\n}\n\nmodel VendorWalletConfig {\n  id                      String          @id @default(uuid()) @db.Uuid\n  vendorId                String          @db.Uuid\n  deliveryAgentId         String          @db.Uuid\n  withdrawalEnabled       Boolean         @default(false)\n  depositEnabled          Boolean         @default(false)\n  withdrawalLimit         Decimal         @default(0.00) @db.Decimal(10, 2)\n  depositRequiresApproval Boolean         @default(true)\n  createdAt               DateTime        @default(now())\n  updatedAt               DateTime        @updatedAt\n  vendor                  Profile         @relation(\"VendorToWalletConfig\", fields: [vendorId], references: [id])\n  wallet                  Wallet          @relation(\"WalletToVendorWalletConfig\", fields: [deliveryAgentId], references: [id])\n  virtualAccount1Id       String?         @unique @db.Uuid\n  virtualAccount2Id       String?         @unique @db.Uuid\n  virtualAccount1         VirtualAccount? @relation(\"VendorWalletConfigToVirtualAccount1\", fields: [virtualAccount1Id], references: [id], onDelete: SetNull)\n  virtualAccount2         VirtualAccount? @relation(\"VendorWalletConfigToVirtualAccount2\", fields: [virtualAccount2Id], references: [id], onDelete: SetNull)\n\n  @@unique([vendorId, deliveryAgentId])\n  @@index([virtualAccount1Id])\n  @@index([virtualAccount2Id])\n  @@schema(\"public\")\n}\n\nmodel ServiceType {\n  id            String         @id @default(uuid()) @db.Uuid\n  name          String         @unique @db.VarChar(50)\n  description   String?        @db.Text\n  isActive      Boolean        @default(true)\n  createdAt     DateTime       @default(now())\n  updatedAt     DateTime       @updatedAt\n  createdById   String?        @db.Uuid\n  createdBy     User?          @relation(\"ServiceTypeCreatedBy\", fields: [createdById], references: [id])\n  services      Services[]     @relation(\"ServiceTypeToServices\")\n  serviceOrders ServiceOrder[] @relation(\"ServiceTypeToServiceOrders\")\n  categoryId    String?        @db.Uuid // Added to link to Category\n  category      Category?      @relation(\"CategoryToServiceTypes\", fields: [categoryId], references: [id]) // Added relation to Category\n\n  @@index([categoryId])\n  @@schema(\"public\")\n}\n\nmodel ServiceOrder {\n  id                  String                      @id @default(uuid()) @db.Uuid\n  userId              String?                     @db.Uuid\n  user                User?                       @relation(\"UserServiceOrders\", fields: [userId], references: [id], onDelete: Cascade)\n  agentId             String?                     @db.Uuid\n  agent               User?                       @relation(\"AgentServiceOrders\", fields: [agentId], references: [id], onDelete: Cascade)\n  serviceId           String?                     @db.Uuid\n  service             Services?                   @relation(\"ServicesToServiceOrders\", fields: [serviceId], references: [id])\n  zoneId              String?                     @db.Uuid\n  zone                Zone?                       @relation(\"ZoneToServiceOrders\", fields: [zoneId], references: [id])\n  vendorId            String?                     @db.Uuid\n  vendor              Profile?                    @relation(\"VendorToServiceOrders\", fields: [vendorId], references: [id])\n  amountDue           Decimal                     @db.Decimal(10, 2)\n  deliveryFee         Decimal?                    @db.Decimal(10, 2)\n  serviceCharge       Decimal?                    @db.Decimal(10, 2)\n  paymentStatus       TransactionStatus           @default(PENDING)\n  status              ServiceOrderStatus          @default(PENDING)\n  createdAt           DateTime                    @default(now())\n  updatedAt           DateTime                    @updatedAt\n  feedbacks           Feedback[]                  @relation(\"ServiceOrderFeedbacks\")\n  paymentId           String?                     @db.Uuid\n  payment             Payment?                    @relation(\"PaymentToServiceOrders\", fields: [paymentId], references: [id])\n  deliveryAddressId   String?                     @db.Uuid\n  deliveryAddress     CustomerAddress?            @relation(\"ServiceOrderToCustomerAddress\", fields: [deliveryAddressId], references: [id])\n  latitude            Float?\n  longitude           Float?\n  countryId           Int?\n  stateId             Int?\n  cityId              Int?\n  country             Country?                    @relation(\"CountryToServiceOrders\", fields: [countryId], references: [id])\n  state               State?                      @relation(\"StateToServiceOrders\", fields: [stateId], references: [id])\n  city                City?                       @relation(\"CityToServiceOrders\", fields: [cityId], references: [id])\n  auditLogs           AuditLog[]                  @relation(\"AuditLogToServiceOrder\")\n  virtualAccountId    String?                     @db.Uuid\n  virtualAccount      VirtualAccount?             @relation(\"VirtualAccountToServiceOrder\", fields: [virtualAccountId], references: [id])\n  adminId             String?                     @db.Uuid\n  admin               User?                       @relation(\"AdminServiceOrders\", fields: [adminId], references: [id], onDelete: SetNull)\n  walletTransactions  WalletTransaction[]         @relation(\"ServiceOrderTransactions\")\n  reports             Report[]                    @relation(\"ReportToServiceOrder\")\n  orderQuantity       Decimal?                    @db.Decimal(10, 2)\n  deliveryDistance    Float?\n  customerReference   String                      @unique @db.VarChar(50)\n  paymentMethod       PaymentMethod?              @default(PAY_ON_DELIVERY)\n  deliveryLatitude    Float?                      @default(0) @map(\"ST_Y(delivery_location::geometry)\")\n  deliveryLongitude   Float?                      @default(0) @map(\"ST_X(delivery_location::geometry)\")\n  confirmationCode    String?                     @db.VarChar(50)\n  voucherId           String?                     @db.Uuid\n  voucher             Voucher?                    @relation(\"ServiceOrderToVoucher\", fields: [voucherId], references: [id])\n  deliveryTime        Decimal?                    @db.Decimal(10, 2)\n  statusHistory       ServiceOrderStatusHistory[] @relation(\"ServiceOrderStatusHistory\")\n  billerCode          String?                     @db.VarChar(50)\n  itemCode            String?                     @db.VarChar(50)\n  meterNumber         String?                     @db.VarChar(255)\n  paymentDetails      Json?\n  meterType           String?                     @default(\"prepaid\")\n  token               String?                     @db.Text\n  serviceFee          Float?\n  voucherDiscount     Float?\n  pointsDiscount      Float?\n  flutterwaveFee      Float?\n  monnifyFee          Float?\n  vat                 Float?\n  transactionRef      String?                     @db.VarChar(255)\n  payments            Payment[]                   @relation(\"ServiceOrderPayments\")\n  fraudAlerts         FraudAlert[]                @relation(\"ServiceOrderFraudAlerts\")\n  disputes            Dispute[]                   @relation(\"ServiceOrderDisputes\")\n  payOnDeliveryOrders PayOnDeliveryOrder[]        @relation(\"ServiceOrderPayOnDelivery\")\n  reviews             OrderReview[]               @relation(\"ServiceOrderReviews\")\n  complaints          Complaint[]                 @relation(\"ServiceOrderComplaints\")\n  serviceTypeId       String?                     @db.Uuid\n  serviceType         ServiceType?                @relation(\"ServiceTypeToServiceOrders\", fields: [serviceTypeId], references: [id])\n\n  @@index([paymentId])\n  @@index([userId, agentId, serviceId, zoneId])\n  @@index([virtualAccountId])\n  @@index([adminId])\n  @@index([voucherId])\n  @@index([billerCode])\n  @@index([createdAt])\n  @@schema(\"public\")\n}\n\nmodel ServiceOrderStatusHistory {\n  id             String             @id @default(uuid()) @db.Uuid\n  serviceOrderId String             @db.Uuid\n  serviceOrder   ServiceOrder       @relation(\"ServiceOrderStatusHistory\", fields: [serviceOrderId], references: [id], onDelete: Cascade)\n  status         ServiceOrderStatus\n  updatedBy      String?            @db.Uuid\n  user           User?              @relation(\"UserServiceOrderStatusHistory\", fields: [updatedBy], references: [id])\n  notes          String?            @db.Text\n  createdAt      DateTime           @default(now())\n\n  @@index([serviceOrderId])\n  @@index([createdAt])\n  @@schema(\"public\")\n}\n\nmodel BVNVerification {\n  id              String   @id @default(uuid()) @db.Uuid\n  userId          String   @db.Uuid\n  user            User     @relation(\"UserToBVNVerification\", fields: [userId], references: [id], onDelete: Cascade)\n  walletId        String?  @db.Uuid\n  wallet          Wallet?  @relation(fields: [walletId], references: [id], onDelete: Cascade)\n  bvn             String   @db.VarChar(11)\n  bankName        String?  @db.VarChar(255)\n  accountNumber   String?  @db.VarChar(10)\n  status          String   @db.VarChar(20)\n  responseDetails Json?\n  createdAt       DateTime @default(now())\n  updatedAt       DateTime @updatedAt\n  transactionRef  String   @unique @db.VarChar(255)\n\n  @@index([userId])\n  @@index([walletId])\n  @@index([createdAt])\n  @@schema(\"public\")\n}\n\nmodel Accessory {\n  id          Int             @id @default(autoincrement())\n  name        String\n  description String?\n  price       Float\n  stockCount  Int             @default(0)\n  status      AccessoryStatus @default(ACTIVE)\n  createdAt   DateTime        @default(now())\n  updatedAt   DateTime        @updatedAt\n  orderItems  OrderItem[]\n\n  @@schema(\"public\")\n}\n\nmodel Services {\n  id                       String                                 @id @default(uuid()) @db.Uuid\n  name                     String\n  description              String?                                @db.Text\n  serviceTypeId            String                                 @db.Uuid\n  serviceType              ServiceType                            @relation(\"ServiceTypeToServices\", fields: [serviceTypeId], references: [id])\n  status                   ServiceStatus                          @default(PENDING_VERIFICATION)\n  isActive                 Boolean                                @default(false)\n  pricePerUnit             Decimal                                @db.Decimal(10, 2)\n  deliveryCost             Decimal?                               @db.Decimal(10, 2)\n  minimumOrder             Int                                    @default(1)\n  maximumOrder             Int?\n  paymentOptions           String?                                @db.VarChar(255)\n  Contact                  String?                                @db.VarChar(255)\n  businessHours            Json?\n  expectedDeliveryTime     Int?\n  address                  String?                                @db.Text\n  logoUrl                  String?                                @db.Text\n  longitude                Float?\n  latitude                 Float?\n  location                 Unsupported(\"geography(Point, 4326)\")?\n  serviceRadius            Float?\n  countryId                Int?\n  stateId                  Int?\n  cityId                   Int?\n  lgaId                    Int?\n  country                  Country?                               @relation(\"ServicesToCountry\", fields: [countryId], references: [id])\n  state                    State?                                 @relation(\"ServicesToState\", fields: [stateId], references: [id])\n  city                     City?                                  @relation(\"ServicesToCity\", fields: [cityId], references: [id])\n  lga                      Lga?                                   @relation(\"ServicesToLga\", fields: [lgaId], references: [id])\n  providerId               String                                 @db.Uuid\n  provider                 User                                   @relation(\"ProviderServices\", fields: [providerId], references: [id], onDelete: Cascade)\n  providerRole             String                                 @db.VarChar(50)\n  businessVerificationId   String?                                @db.Uuid\n  businessVerification     BusinessVerification?                  @relation(\"ServicesToBusinessVerification\", fields: [businessVerificationId], references: [id], onDelete: Restrict)\n  deliveryRepId            String?                                @db.Uuid\n  deliveryRep              Profile?                               @relation(\"DeliveryRepServices\", fields: [deliveryRepId], references: [id])\n  agentId                  String?                                @db.Uuid\n  agent                    User?                                  @relation(\"AgentServices\", fields: [agentId], references: [id])\n  verified                 Boolean                                @default(false)\n  verifiedAt               DateTime?\n  verificationStatus       VerificationStatus                     @default(PENDING)\n  avgRating                Float?                                 @default(0.0)\n  ratingCount              Int?                                   @default(0)\n  serviceOrders            ServiceOrder[]                         @relation(\"ServicesToServiceOrders\")\n  serviceReviews           ServiceReview[]                        @relation(\"ServicesToServiceReviews\")\n  billerCode               String?                                @db.VarChar(50)\n  itemCode                 String?                                @db.VarChar(50)\n  destinationBankCode      String?                                @db.VarChar(50)\n  destinationAccountNumber String?                                @db.VarChar(50)\n  serviceVerifications     ServiceVerification[]                  @relation(\"ServicesToVerifications\")\n  disputes                 Dispute[]                              @relation(\"ServicesDisputes\")\n  zones                    Zone[]                                 @relation(\"ServicesToZones\")\n  licenses                 License[]                              @relation(\"ServicesToLicenses\")\n  vehicles                 Vehicle[]                              @relation(\"ServicesToVehicles\")\n  vendorId                 String?                                @db.Uuid\n  vendor                   Profile?                               @relation(\"VendorServices\", fields: [vendorId], references: [id], onDelete: SetNull)\n  reviews                  OrderReview[]                          @relation(\"ServicesReviews\")\n  complaints               Complaint[]                            @relation(\"ServicesComplaints\")\n  createdAt                DateTime                               @default(now())\n  updatedAt                DateTime                               @updatedAt\n  businessName             String?                                @db.VarChar(255)\n\n  @@index([providerId])\n  @@index([providerRole])\n  @@index([businessVerificationId])\n  @@index([serviceTypeId])\n  @@index([status])\n  @@index([isActive])\n  @@index([agentId])\n  @@index([lgaId])\n  @@index([vendorId])\n  @@schema(\"public\")\n}\n\n// Reviews for services\nmodel ServiceReview {\n  id           String   @id @default(uuid()) @db.Uuid\n  rating       Int\n  comment      String?\n  reviewerName String\n  reviewerId   String   @db.Uuid\n  serviceId    String   @db.Uuid\n  service      Services @relation(\"ServicesToServiceReviews\", fields: [serviceId], references: [id])\n  createdAt    DateTime @default(now())\n\n  @@index([serviceId])\n  @@index([reviewerId])\n  @@schema(\"public\")\n}\n\nmodel BusinessVerification {\n  id                String             @id @default(uuid()) @db.Uuid\n  userId            String             @unique @db.Uuid\n  user              User               @relation(\"UserToBusinessVerification\", fields: [userId], references: [id], onDelete: Cascade)\n  profileId         String?            @unique @db.Uuid\n  profile           Profile?           @relation(\"ProfileToBusinessVerification\", fields: [profileId], references: [id], onDelete: Cascade)\n  businessName      String\n  rcNumber          String\n  businessAddress   String\n  tinNumber         String?\n  cacDocumentUrl    String\n  tinDocumentUrl    String?\n  proofOfAddressUrl String\n  logoUrl           String?\n  handles           Json?\n  status            VerificationStatus @default(PENDING)\n  documentType      DocumentType\n  rejectionReason   String?\n  adminId           String?\n  submittedAt       DateTime           @default(now())\n  processedAt       DateTime?\n  services          Services[]         @relation(\"ServicesToBusinessVerification\")\n  urlStatuses       Json?\n\n  @@index([userId])\n  @@index([profileId])\n  @@index([status])\n  @@schema(\"public\")\n}\n\nmodel ProductOrder {\n  id                  String                                @id @default(uuid()) @db.Uuid\n  userId              String                                @db.Uuid\n  user                User                                  @relation(\"UserProductOrders\", fields: [userId], references: [id])\n  vendorId            String?                               @db.Uuid\n  vendor              Profile?                              @relation(\"VendorProductOrders\", fields: [vendorId], references: [id])\n  deliveryAddressId   String                                @db.Uuid\n  deliveryAddress     CustomerAddress                       @relation(fields: [deliveryAddressId], references: [id])\n  agentId             String?                               @db.Uuid\n  agent               User?                                 @relation(\"AgentProductOrders\", fields: [agentId], references: [id])\n  subtotal            Decimal                               @db.Decimal(10, 2)\n  deliveryFee         Decimal                               @db.Decimal(10, 2)\n  serviceCharge       Decimal                               @db.Decimal(10, 2)\n  vatAmount           Decimal                               @default(0.00) @db.Decimal(10, 2)\n  total               Decimal                               @db.Decimal(10, 2)\n  confirmationCode    String                                @db.VarChar(4)\n  paymentMethod       PaymentMethod\n  paymentStatus       TransactionStatus                     @default(PENDING)\n  orderStatus         OrderStatus                           @default(PENDING)\n  deliveryRepId       String?                               @db.Uuid\n  countryId           Int?\n  stateId             Int?\n  lgaId               Int?\n  cityId              Int?\n  country             Country?                              @relation(\"ProductOrderToCountry\", fields: [countryId], references: [id])\n  state               State?                                @relation(\"ProductOrderToState\", fields: [stateId], references: [id])\n  lga                 Lga?                                  @relation(\"ProductOrderToLga\", fields: [lgaId], references: [id])\n  city                City?                                 @relation(\"ProductOrderToCity\", fields: [cityId], references: [id])\n  items               OrderItem[]\n  reviews             OrderReview[]                         @relation(\"ProductOrderReviews\")\n  payOnDeliveryOrders PayOnDeliveryOrder[]                  @relation(\"ProductOrderPayOnDelivery\")\n  disputes            Dispute[]                             @relation(\"ProductOrderDisputes\")\n  notes               String?\n  customerReference   String                                @unique @db.VarChar(50)\n  deliveryNotes       String?                               @db.Text\n  createdAt           DateTime                              @default(now())\n  updatedAt           DateTime                              @updatedAt\n  completedAt         DateTime?\n  deliveryTime        Int?\n  deliveryDistance    Float?\n  deliveryLocation    Unsupported(\"geometry(Point, 4326)\")?\n  latitude            Float?                                @default(0) @map(\"ST_Y(delivery_location::geometry)\")\n  longitude           Float?                                @default(0) @map(\"ST_X(delivery_location::geometry)\")\n  auditLogs           AuditLog[]                            @relation(\"AuditLogs\")\n  auditLogsToOrder    AuditLog[]                            @relation(\"AuditLogToProductOrder\")\n  payments            Payment[]                             @relation(\"ProductOrderPayments\")\n  fraudAlerts         FraudAlert[]                          @relation(\"ProductOrderFraudAlerts\")\n  feedbacks           Feedback[]                            @relation(\"ProductOrderFeedbacks\")\n  statusHistory       OrderStatusHistory[]                  @relation(\"ProductOrderStatusHistory\")\n  voucherId           String?                               @db.Uuid\n  voucher             Voucher?                              @relation(\"ProductOrderToVoucher\", fields: [voucherId], references: [id])\n  complaints          Complaint[]                           @relation(\"ProductOrderComplaints\")\n  reports             Report[]                              @relation(\"ReportToProductOrder\")\n  walletTransactions  WalletTransaction[]                   @relation(\"ProductOrderTransactions\")\n  productTypeId       String?                               @db.Uuid // Added\n  productType         ProductType?                          @relation(\"ProductTypeToProductOrders\", fields: [productTypeId], references: [id]) // Added\n\n  @@index([createdAt, customerReference])\n  @@index([productTypeId]) // Added index for productTypeId\n  @@schema(\"public\")\n}\n\nmodel ServiceVerification {\n  id          String             @id @default(uuid()) @db.Uuid\n  serviceId   String?            @db.Uuid\n  service     Services?          @relation(\"ServicesToVerifications\", fields: [serviceId], references: [id], onDelete: Cascade)\n  profileId   String?            @unique @db.Uuid\n  profile     Profile?           @relation(\"ProfileToServiceVerification\", fields: [profileId], references: [id], onDelete: Cascade)\n  notes       String?\n  status      VerificationStatus @default(PENDING)\n  adminId     String?\n  submittedAt DateTime           @default(now())\n  processedAt DateTime?\n  userId      String?            @db.Uuid\n  user        User?              @relation(\"UserToServiceVerification\", fields: [userId], references: [id], onDelete: Cascade)\n\n  @@index([status])\n  @@index([profileId])\n  @@index([serviceId])\n  @@schema(\"public\")\n}\n\nmodel AuditLog {\n  id                  String        @id @default(uuid()) @db.Uuid\n  userId              String?       @db.Uuid\n  user                User?         @relation(\"UserAuditLogs\", fields: [userId], references: [id], onDelete: Cascade)\n  action              String        @db.VarChar(255)\n  details             Json\n  createdAt           DateTime      @default(now())\n  notes               String?       @db.Text\n  entityType          String?       @db.VarChar(50)\n  entityId            String?       @db.Uuid\n  investigationStatus String?       @db.VarChar(50)\n  investigatedBy      String?       @db.Uuid\n  investigatedAt      DateTime?\n  orderId             String?       @db.Uuid\n  order               ProductOrder? @relation(\"AuditLogToProductOrder\", fields: [orderId], references: [id], onDelete: Cascade)\n  orderAuditLogId     String?       @db.Uuid\n  orderAuditLogs      ProductOrder? @relation(\"AuditLogs\", fields: [orderAuditLogId], references: [id], onDelete: Cascade)\n  serviceOrderId      String?       @db.Uuid\n  serviceOrder        ServiceOrder? @relation(\"AuditLogToServiceOrder\", fields: [serviceOrderId], references: [id], onDelete: Cascade)\n\n  @@index([userId])\n  @@index([createdAt])\n  @@index([entityType, entityId])\n  @@index([orderId])\n  @@index([orderAuditLogId])\n  @@index([serviceOrderId])\n  @@schema(\"public\")\n}\n\nmodel WalletTransaction {\n  id              String            @id @default(uuid()) @db.Uuid\n  userId          String            @db.Uuid\n  user            User              @relation(fields: [userId], references: [id], onDelete: Cascade)\n  walletId        String            @db.Uuid\n  wallet          Wallet            @relation(fields: [walletId], references: [id], onDelete: Cascade)\n  transactionType TransactionType?\n  amount          Decimal           @db.Decimal(10, 2)\n  topupCharge     Decimal?          @db.Decimal(10, 2)\n  serviceOrderId  String?           @db.Uuid\n  serviceOrder    ServiceOrder?     @relation(\"ServiceOrderTransactions\", fields: [serviceOrderId], references: [id], onDelete: Cascade)\n  productOrderId  String?           @db.Uuid\n  productOrder    ProductOrder?     @relation(\"ProductOrderTransactions\", fields: [productOrderId], references: [id], onDelete: Cascade)\n  payment         Payment?          @relation(\"WalletTransactionToPayment\", fields: [paymentId], references: [id], onDelete: Cascade)\n  paymentId       String?           @db.Uuid\n  transactionRef  String?           @db.VarChar(255)\n  status          TransactionStatus @default(PENDING)\n  createdAt       DateTime          @default(now())\n  updatedAt       DateTime          @updatedAt\n  transfers       Transfer[]\n  billerCode      String?           @db.VarChar(50)\n  metadata        Json?\n  webhookAttempts WebhookAttempt[]  @relation(\"TransactionWebhookAttempts\")\n  vendorId        String?           @db.Uuid\n\n  @@index([createdAt])\n  @@index([vendorId])\n  @@index([serviceOrderId])\n  @@index([productOrderId])\n  @@index([billerCode])\n  @@schema(\"public\")\n}\n\nmodel Otp {\n  id                   String    @id @default(uuid()) @db.Uuid\n  code                 String?\n  userId               String    @db.Uuid\n  expiresAt            DateTime\n  user                 User      @relation(fields: [userId], references: [id], onDelete: Cascade)\n  transactionReference String    @unique\n  phoneNumber          String?\n  email                String?\n  medium               String[]\n  verified             Boolean   @default(false)\n  attempts             Int       @default(0)\n  createdAt            DateTime  @default(now())\n  updatedAt            DateTime  @updatedAt\n  eventType            String? // Stores OTP purpose (e.g., ACCOUNT_VERIFICATION)\n  metadata             Json? // Added to store additional data like platform\n  verifiedAt           DateTime? // Add this field\n\n  @@schema(\"public\")\n}\n\nmodel Voucher {\n  id                String         @id @default(uuid()) @db.Uuid\n  code              String         @unique @db.VarChar(50)\n  discount          Decimal        @db.Decimal(5, 2)\n  type              VoucherType\n  maxUses           Int?\n  maxUsesPerUser    Int?\n  uses              Int            @default(0)\n  validFrom         DateTime       @default(now())\n  validUntil        DateTime\n  isActive          Boolean        @default(true)\n  appliesTo         String         @db.VarChar(20)\n  restrictedToRoles Role[]         @relation(\"VoucherRestrictedToRoles\")\n  createdBy         User           @relation(\"VoucherCreator\", fields: [createdById], references: [id])\n  createdById       String         @db.Uuid\n  createdAt         DateTime       @default(now())\n  updatedAt         DateTime       @updatedAt\n  updatedById       String?\n  orders            ProductOrder[] @relation(\"ProductOrderToVoucher\")\n  voucherUsages     VoucherUsage[] @relation\n  serviceOrders     ServiceOrder[] @relation(\"ServiceOrderToVoucher\")\n\n  @@schema(\"public\")\n}\n\nmodel VoucherUsage {\n  id        Int      @id @default(autoincrement())\n  voucherId String   @db.Uuid // Changed from Int to String @db.Uuid\n  userId    String   @db.Uuid\n  voucher   Voucher  @relation(fields: [voucherId], references: [id], onDelete: Cascade)\n  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)\n  usedAt    DateTime @default(now())\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  @@index([voucherId, userId])\n  @@schema(\"public\")\n}\n\nmodel Favorite {\n  id         String   @id @default(uuid()) @db.Uuid\n  profileId  String   @db.Uuid\n  profile    Profile  @relation(\"ProfileToFavorites\", fields: [profileId], references: [id], onDelete: Cascade)\n  entityType String   @db.VarChar(50) // e.g., \"SERVICE\", \"PRODUCT\", \"VENDOR\"\n  entityId   String   @db.Uuid // ID of the favorited entity (e.g., Service.id, Product.id, Profile.id)\n  createdAt  DateTime @default(now())\n  updatedAt  DateTime @updatedAt\n\n  @@index([profileId, entityType, entityId])\n  @@schema(\"public\")\n}\n\nmodel Transfer {\n  id             Int               @id @default(autoincrement())\n  amount         Decimal           @db.Decimal(10, 2)\n  bankName       String            @db.VarChar(255)\n  accountNumber  String            @db.VarChar(255)\n  transactionId  String            @unique @db.Uuid\n  status         TransactionStatus @default(PENDING)\n  proofOfPayment String\n  createdAt      DateTime          @default(now())\n  transaction    WalletTransaction @relation(fields: [transactionId], references: [id])\n\n  @@schema(\"public\")\n}\n\nmodel CustomerAddress {\n  id            String         @id @default(uuid()) @db.Uuid\n  userId        String         @db.Uuid\n  address       String\n  state         String?        @db.VarChar(50)\n  latitude      Float\n  longitude     Float\n  isDefault     Boolean        @default(false)\n  createdAt     DateTime       @default(now())\n  updatedAt     DateTime       @updatedAt\n  user          User           @relation(fields: [userId], references: [id], onDelete: Cascade, map: \"CustomerAddress_user_fkey\")\n  profile       Profile?       @relation(\"ProfileToSavedAddresses\", fields: [userId], references: [userId], map: \"CustomerAddress_profile_fkey\")\n  orders        ProductOrder[] // For product orders\n  serviceOrders ServiceOrder[] @relation(\"ServiceOrderToCustomerAddress\") // Added\n\n  @@unique([userId, address])\n  @@schema(\"public\")\n}\n\nmodel SubAccount {\n  id             String   @id @default(uuid()) @db.Uuid\n  userId         String   @db.Uuid\n  subAccountCode String   @unique\n  createdAt      DateTime @default(now())\n  updatedAt      DateTime @updatedAt\n  user           User     @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@schema(\"public\")\n}\n\nmodel Feedback {\n  id              String         @id @default(uuid()) @db.Uuid\n  ticketId        String         @unique @db.VarChar(50)\n  giverId         String         @db.Uuid\n  giver           User           @relation(\"FeedbackToUser\", fields: [giverId], references: [id])\n  giverRoleId     String         @db.Uuid\n  giverRole       Role           @relation(\"FeedbackGiverRoles\", fields: [giverRoleId], references: [id])\n  receiverId      String         @db.Uuid\n  receiver        User           @relation(\"FeedbackReceiver\", fields: [receiverId], references: [id])\n  receiverRoleId  String         @db.Uuid\n  receiverRole    Role           @relation(\"FeedbackReceiverRoles\", fields: [receiverRoleId], references: [id])\n  comment         String?        @db.Text\n  rating          Int            @default(0)\n  status          FeedbackStatus @default(PENDING)\n  priority        String         @default(\"LOW\") @db.VarChar(20)\n  issueType       IssueType      @default(GENERAL)\n  createdAt       DateTime       @default(now())\n  updatedAt       DateTime       @updatedAt\n  resolvedAt      DateTime?\n  agentProfileId  String?        @db.Uuid\n  agentProfile    Profile?       @relation(\"AgentFeedback\", fields: [agentProfileId], references: [id])\n  vendorId        String?        @db.Uuid\n  vendor          Profile?       @relation(\"VendorFeedback\", fields: [vendorId], references: [id])\n  orderId         String?        @db.Uuid\n  order           ProductOrder?  @relation(\"ProductOrderFeedbacks\", fields: [orderId], references: [id])\n  serviceOrderId  String?        @db.Uuid\n  serviceOrder    ServiceOrder?  @relation(\"ServiceOrderFeedbacks\", fields: [serviceOrderId], references: [id])\n  customerId      String?        @db.Uuid\n  customerProfile Profile?       @relation(\"CustomerReviews\", fields: [customerId], references: [id])\n\n  @@index([createdAt])\n  @@schema(\"public\")\n}\n\nmodel OrderReview {\n  id             String        @id @default(uuid()) @db.Uuid\n  comment        String        @db.Text\n  orderId        String?       @db.Uuid\n  order          ProductOrder? @relation(\"ProductOrderReviews\", fields: [orderId], references: [id], onDelete: Cascade, onUpdate: Cascade)\n  serviceOrderId String?       @db.Uuid\n  serviceOrder   ServiceOrder? @relation(\"ServiceOrderReviews\", fields: [serviceOrderId], references: [id], onDelete: Cascade, onUpdate: Cascade)\n  serviceId      String?       @db.Uuid\n  service        Services?     @relation(\"ServicesReviews\", fields: [serviceId], references: [id], onDelete: SetNull)\n  user           User          @relation(fields: [userId], references: [id])\n  userId         String        @db.Uuid\n  rating         Int           @default(0)\n  createdAt      DateTime      @default(now())\n\n  @@index([orderId])\n  @@index([serviceOrderId])\n  @@index([serviceId])\n  @@schema(\"public\")\n}\n\nmodel Session {\n  id        String   @id @default(uuid()) @db.Uuid\n  userId    String   @db.Uuid\n  user      User     @relation(\"UserToSessions\", fields: [userId], references: [id], onDelete: Cascade)\n  token     String   @unique @db.Text\n  expiresAt DateTime\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n  metadata  Json?\n\n  @@index([userId])\n  @@index([expiresAt])\n  @@schema(\"public\")\n}\n\nmodel PayOnDeliveryOrder {\n  id             String            @id @default(uuid()) @db.Uuid\n  orderId        String?           @db.Uuid // Made optional\n  order          ProductOrder?     @relation(\"ProductOrderPayOnDelivery\", fields: [orderId], references: [id], onDelete: Cascade) // Updated relation name\n  serviceOrderId String?           @db.Uuid // Added\n  serviceOrder   ServiceOrder?     @relation(\"ServiceOrderPayOnDelivery\", fields: [serviceOrderId], references: [id], onDelete: Cascade) // Added\n  phoneNumber    String            @db.VarChar(20)\n  amountDue      Decimal           @db.Decimal(10, 2)\n  status         TransactionStatus @default(PENDING)\n  createdAt      DateTime          @default(now())\n  user           User?             @relation(fields: [userId], references: [id])\n  userId         String?           @db.Uuid\n\n  @@index([orderId])\n  @@index([serviceOrderId])\n  @@schema(\"public\")\n}\n\nmodel Payment {\n  id                 String              @id @default(uuid()) @db.Uuid\n  userId             String              @db.Uuid\n  transactionRef     String?             @db.VarChar(54)\n  flwRef             String?             @db.VarChar(255)\n  monnifyRef         String?             @db.VarChar(255)\n  productType        String?\n  serviceType        String?\n  billerCode         String?             @db.VarChar(50) // Replaced providerId\n  serviceOrderId     String?             @db.Uuid\n  meterNumber        String?             @db.VarChar(255)\n  paymentLink        String?\n  amount             Float\n  requestedAmount    Float?\n  topupCharge        Float?\n  status             String\n  paymentMethod      PaymentMethod\n  createdAt          DateTime            @default(now())\n  updatedAt          DateTime            @updatedAt\n  paymentDetails     Json?\n  user               User                @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)\n  provider           PaymentProvider?    @relation(\"PaymentToProvider\", fields: [providerId], references: [id], onDelete: Cascade)\n  providerId         Int?\n  serviceOrder       ServiceOrder?       @relation(\"ServiceOrderPayments\", fields: [serviceOrderId], references: [id], onDelete: Cascade)\n  walletTransactions WalletTransaction[] @relation(\"WalletTransactionToPayment\")\n  orderId            String?             @db.Uuid\n  order              ProductOrder?       @relation(\"ProductOrderPayments\", fields: [orderId], references: [id])\n  fraudAlerts        FraudAlert[]        @relation(\"PaymentFraudAlerts\")\n  serviceOrders      ServiceOrder[]      @relation(\"PaymentToServiceOrders\")\n\n  @@index([transactionRef])\n  @@index([monnifyRef])\n  @@index([createdAt])\n  @@index([serviceOrderId])\n  @@index([billerCode]) // Added index for billerCode\n  @@schema(\"public\")\n}\n\nmodel Report {\n  id             String        @id @default(uuid()) @db.Uuid\n  reporterId     String        @db.Uuid\n  reporter       User          @relation(\"ReportReporter\", fields: [reporterId], references: [id], onDelete: Cascade)\n  adminId        String?       @db.Uuid\n  admin          User?         @relation(\"ReportAdmin\", fields: [adminId], references: [id], onDelete: SetNull)\n  category       String        @db.VarChar(50)\n  details        String?       @db.Text\n  imageUrl       String?       @db.Text\n  status         String        @default(\"PENDING\") @db.VarChar(20)\n  createdAt      DateTime      @default(now())\n  updatedAt      DateTime      @updatedAt\n  resolvedAt     DateTime?\n  agentProfileId String?       @db.Uuid\n  agentProfile   Profile?      @relation(\"ReportAgentProfile\", fields: [agentProfileId], references: [id], onDelete: SetNull)\n  vendorId       String?       @db.Uuid\n  vendor         Profile?      @relation(\"ReportVendor\", fields: [vendorId], references: [id], onDelete: SetNull)\n  reporterName   String?       @db.VarChar(100)\n  reporterPhone  String?       @db.VarChar(20)\n  serviceOrderId String?       @db.Uuid\n  serviceOrder   ServiceOrder? @relation(\"ReportToServiceOrder\", fields: [serviceOrderId], references: [id], onDelete: SetNull)\n  productOrderId String?       @db.Uuid\n  productOrder   ProductOrder? @relation(\"ReportToProductOrder\", fields: [productOrderId], references: [id], onDelete: SetNull)\n  documentId     String?       @db.VarChar(255)\n\n  @@index([reporterId, adminId])\n  @@index([createdAt])\n  @@index([serviceOrderId])\n  @@index([productOrderId])\n  @@schema(\"public\")\n}\n\nmodel Wallet {\n  id                   String               @id @default(uuid()) @db.Uuid\n  userId               String               @unique @db.Uuid\n  balance              Decimal              @default(0.00) @db.Decimal(10, 2)\n  totalTopupCharge     Decimal?             @db.Decimal(10, 2)\n  vendorLinkedAccount1 String?              @db.VarChar(255) // Vendor's primary virtual account 1\n  vendorLinkedAccount2 String?              @db.VarChar(255) // Vendor's primary virtual account 2\n  vendorBankName       String?              @db.VarChar(255) // Bank name for vendor's virtual accounts\n  metadata             Json?\n  createdAt            DateTime             @default(now())\n  updatedAt            DateTime             @updatedAt\n  user                 User                 @relation(fields: [userId], references: [id], onDelete: Cascade)\n  profile              Profile?             @relation(\"ProfileToWallet\", fields: [id], references: [id])\n  transactions         WalletTransaction[] // Tracks delivery fees (agent), service fees (vendor), service charges (admin)\n  withdrawals          Withdrawal[]\n  bankCards            BankCard[]\n  settings             WalletSettings?\n  bvnVerifications     BVNVerification[]\n  vendorWalletConfigs  VendorWalletConfig[] @relation(\"WalletToVendorWalletConfig\")\n  virtualAccounts      VirtualAccount[]     @relation(\"WalletToVirtualAccount\")\n  accountNumber        String?              @db.VarChar(255)\n\n  @@schema(\"public\")\n}\n\nmodel PaymentProvider {\n  id                      Int       @id @default(autoincrement())\n  name                    String    @unique\n  flutterwave_biller_code String?   @unique\n  providerKey             String? // Added\n  description             String?\n  createdAt               DateTime  @default(now())\n  updatedAt               DateTime  @updatedAt\n  payments                Payment[] @relation(\"PaymentToProvider\")\n\n  @@schema(\"public\")\n}\n\nmodel Category {\n  id           String        @id @default(uuid()) @db.Uuid\n  name         String        @unique\n  description  String?\n  imageUrl     String        @default(\"https://via.placeholder.com/150\")\n  active       Boolean       @default(true)\n  products     Product[]\n  serviceTypes ServiceType[] @relation(\"CategoryToServiceTypes\") // Changed from services to serviceTypes\n  images       String[]\n  createdAt    DateTime      @default(now())\n  updatedAt    DateTime      @updatedAt\n  productTypes ProductType[] @relation(\"ProductTypeToCategory\")\n\n  @@schema(\"public\")\n}\n\nmodel ProductType {\n  id            String         @id @default(uuid()) @db.Uuid\n  name          String         @unique @db.VarChar(50)\n  description   String?        @db.Text\n  categoryId    String?        @db.Uuid\n  category      Category?      @relation(\"ProductTypeToCategory\", fields: [categoryId], references: [id])\n  isActive      Boolean        @default(true)\n  createdAt     DateTime       @default(now())\n  updatedAt     DateTime       @updatedAt\n  createdById   String?        @db.Uuid\n  createdBy     User?          @relation(\"ProductTypeCreatedBy\", fields: [createdById], references: [id])\n  products      Product[]      @relation(\"ProductTypeToProducts\")\n  productOrders ProductOrder[] @relation(\"ProductTypeToProductOrders\") // Added relation to ProductOrder\n\n  @@index([categoryId])\n  @@schema(\"public\")\n}\n\nmodel Product {\n  id             String        @id @default(uuid()) @db.Uuid\n  name           String\n  description    String\n  price          Decimal       @db.Decimal(10, 2)\n  salePrice      Decimal?      @db.Decimal(10, 2)\n  imageUrl       String?\n  images         String[]      @default([])\n  brand          String?\n  size           String?\n  stock          Int           @default(0)\n  status         ProductStatus @default(PENDING)\n  featured       Boolean       @default(false)\n  productTypeId  String?       @db.Uuid\n  productType    ProductType?  @relation(\"ProductTypeToProducts\", fields: [productTypeId], references: [id])\n  categoryId     String?       @db.Uuid\n  category       Category?     @relation(fields: [categoryId], references: [id])\n  productOwnerId String        @db.Uuid\n  productOwner   User          @relation(fields: [productOwnerId], references: [id])\n  rating         Decimal?      @db.Decimal(2, 1)\n  orderCount     Int           @default(0)\n  cartItems      CartItem[]\n  disputes       Dispute[]     @relation(\"ProductDisputes\")\n  orderItems     OrderItem[]\n  complaints     Complaint[]   @relation(\"ProductComplaints\")\n  createdAt      DateTime      @default(now())\n  updatedAt      DateTime      @updatedAt\n\n  @@index([createdAt])\n  @@index([productTypeId])\n  @@schema(\"public\")\n}\n\nmodel Cart {\n  id        String     @id @default(uuid()) @db.Uuid\n  userId    String     @unique @db.Uuid\n  user      User       @relation(fields: [userId], references: [id], onDelete: Cascade)\n  items     CartItem[]\n  createdAt DateTime   @default(now())\n  updatedAt DateTime   @updatedAt\n\n  @@schema(\"public\")\n}\n\nmodel ContactOption {\n  id            Int      @id @default(autoincrement())\n  method        String   @db.VarChar(50) // e.g., \"Email\", \"WhatsApp\", \"Phone\"\n  details       String   @db.Text // e.g., email address, phone number\n  responseTime  String?  @db.VarChar(100) // e.g., \"Within 24 hours\"\n  businessHours String?  @db.VarChar(100) // e.g., \"9 AM - 5 PM\"\n  createdAt     DateTime @default(now())\n  updatedAt     DateTime @updatedAt\n  isActive      Boolean  @default(true)\n\n  @@schema(\"public\")\n}\n\nmodel CartItem {\n  id        String   @id @default(uuid()) @db.Uuid\n  cartId    String   @db.Uuid\n  cart      Cart     @relation(fields: [cartId], references: [id], onDelete: Cascade)\n  productId String   @db.Uuid\n  product   Product  @relation(fields: [productId], references: [id])\n  quantity  Int\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  @@unique([cartId, productId])\n  @@schema(\"public\")\n}\n\nmodel Infraction {\n  id            String    @id @default(uuid()) @db.Uuid\n  agentId       String?   @db.Uuid\n  deliveryRepId String?   @db.Uuid\n  vendorId      String?   @db.Uuid\n  type          String    @db.VarChar(50)\n  reason        String    @db.VarChar(255)\n  issuedAt      DateTime  @default(now())\n  expiresAt     DateTime?\n  agent         Profile?  @relation(\"InfractionToAgent\", fields: [agentId], references: [id])\n  deliveryRep   Profile?  @relation(\"InfractionToDeliveryRep\", fields: [deliveryRepId], references: [id], map: \"Infraction_deliveryRep_fkey\")\n  vendor        Profile?  @relation(\"InfractionToVendor\", fields: [vendorId], references: [id], map: \"Infraction_vendor_fkey\")\n\n  @@schema(\"public\")\n}\n\nmodel OrderItem {\n  id          String       @id @default(uuid()) @db.Uuid\n  orderId     String       @db.Uuid\n  order       ProductOrder @relation(fields: [orderId], references: [id], onDelete: Cascade)\n  productId   String?      @db.Uuid\n  product     Product?     @relation(fields: [productId], references: [id])\n  accessoryId Int?\n  accessory   Accessory?   @relation(fields: [accessoryId], references: [id])\n  quantity    Int\n  price       Decimal      @db.Decimal(10, 2)\n  createdAt   DateTime     @default(now())\n  updatedAt   DateTime     @updatedAt\n\n  @@unique([orderId, productId])\n  @@unique([orderId, accessoryId])\n  @@schema(\"public\")\n}\n\nmodel PaymentConfig {\n  id            Int      @id @default(autoincrement())\n  paymentMethod String   @unique\n  isEnabled     Boolean  @default(true)\n  gateway       String?\n  publicKey     String? // Store encrypted public key\n  secretKey     String? // Store encrypted secret key\n  contractCode  String? // Added field\n  updatedAt     DateTime @updatedAt\n  updatedBy     String?\n\n  @@schema(\"public\")\n}\n\nmodel Dispute {\n  id             String        @id @default(uuid()) @db.Uuid\n  orderId        String?       @db.Uuid\n  order          ProductOrder? @relation(\"ProductOrderDisputes\", fields: [orderId], references: [id], onDelete: Cascade)\n  serviceOrderId String?       @db.Uuid\n  serviceOrder   ServiceOrder? @relation(\"ServiceOrderDisputes\", fields: [serviceOrderId], references: [id], onDelete: Cascade)\n  productId      String?       @db.Uuid\n  product        Product?      @relation(\"ProductDisputes\", fields: [productId], references: [id], onDelete: SetNull)\n  serviceId      String?       @db.Uuid\n  service        Services?     @relation(\"ServicesDisputes\", fields: [serviceId], references: [id], onDelete: SetNull)\n  reason         String        @db.Text\n  riskFactors    Boolean       @default(false)\n  internalNotes  String?       @db.Text\n  status         DisputeStatus @default(PENDING)\n  createdAt      DateTime      @default(now())\n  updatedAt      DateTime      @updatedAt\n\n  @@index([createdAt])\n  @@index([orderId])\n  @@index([serviceOrderId])\n  @@index([productId])\n  @@index([serviceId])\n  @@schema(\"public\")\n}\n\nmodel Withdrawal {\n  id                 String           @id @default(uuid()) @db.Uuid\n  userId             String           @db.Uuid\n  user               User             @relation(\"UserWithdrawals\", fields: [userId], references: [id], onDelete: Cascade)\n  walletId           String?          @db.Uuid\n  wallet             Wallet?          @relation(fields: [walletId], references: [id], onDelete: Cascade)\n  amount             Decimal          @db.Decimal(10, 2)\n  bankName           String           @db.VarChar(255)\n  accountNumber      String?          @db.VarChar(255)\n  status             WithdrawalStatus @default(PENDING)\n  createdAt          DateTime         @default(now())\n  updatedAt          DateTime         @updatedAt\n  deliveryRepId      String?          @db.Uuid\n  vendorId           String?          @db.Uuid\n  processedAt        DateTime?\n  transactionRef     String?          @unique @db.VarChar(255)\n  isAccountValidated Boolean          @default(false)\n  validatedBy        String?          @db.Uuid\n  validationDate     DateTime?\n  bvnVerified        Boolean          @default(false)\n\n  @@index([createdAt])\n  @@schema(\"public\")\n}\n\nmodel WithdrawalLimit {\n  id            Int                 @id @default(autoincrement())\n  roleId        String              @db.Uuid\n  role          Role                @relation(\"WithdrawalLimitRoles\", fields: [roleId], references: [id])\n  limitType     WithdrawalLimitType\n  limitValue    Decimal             @db.Decimal(10, 2)\n  createdAt     DateTime            @default(now())\n  updatedAt     DateTime            @updatedAt\n  updatedBy     String              @db.Uuid\n  updatedByUser User?               @relation(\"WithdrawalLimitUpdatedBy\", fields: [updatedBy], references: [id])\n\n  @@unique([roleId, limitType])\n  @@schema(\"public\")\n}\n\nmodel QuicrifillWallet {\n  id            String                 @id @default(uuid()) @db.Uuid\n  accountNumber String                 @db.VarChar(255)\n  bankName      String                 @db.VarChar(255)\n  balance       Decimal                @default(0.00) @db.Decimal(10, 2)\n  createdAt     DateTime               @default(now())\n  updatedAt     DateTime               @updatedAt\n  withdrawals   QuicrifillWithdrawal[] @relation(\"QuicrifillWalletToWithdrawal\")\n\n  @@schema(\"public\")\n}\n\nmodel QuicrifillWithdrawal {\n  id             String            @id @default(uuid()) @db.Uuid\n  walletId       String            @db.Uuid\n  wallet         QuicrifillWallet  @relation(\"QuicrifillWalletToWithdrawal\", fields: [walletId], references: [id], onDelete: Cascade)\n  amount         Decimal           @db.Decimal(10, 2)\n  bankName       String            @db.VarChar(255)\n  accountNumber  String            @db.VarChar(255)\n  status         TransactionStatus @default(PENDING)\n  createdAt      DateTime          @default(now())\n  updatedAt      DateTime          @updatedAt\n  processedAt    DateTime?\n  transactionRef String?           @db.VarChar(255)\n  requestedBy    String            @db.Uuid\n\n  @@index([createdAt])\n  @@schema(\"public\")\n}\n\nmodel AppInstallation {\n  id           String        @id @default(uuid()) @db.Uuid\n  userId       String?       @db.Uuid\n  user         User?         @relation(\"UserInstallations\", fields: [userId], references: [id], onDelete: Cascade)\n  deviceType   String        @db.VarChar(50)\n  deviceId     String        @unique @db.VarChar(255)\n  deviceToken  String?       @db.VarChar(255)\n  isRecognized Boolean       @default(false)\n  recognizedAt DateTime?\n  isBanned     Boolean       @default(false)\n  bannedAt     DateTime?\n  banReason    String?       @db.VarChar(255)\n  createdAt    DateTime      @default(now())\n  crashReports CrashReport[] @relation(\"InstallationCrashReports\")\n  blocked      Boolean       @default(false)\n  isSuspended  Boolean       @default(false)\n  isPenalized  Boolean       @default(false)\n\n  @@index([createdAt])\n  @@index([userId, deviceId])\n  @@schema(\"public\")\n}\n\nmodel Country {\n  id            Int            @id @default(autoincrement())\n  name          String         @unique @db.VarChar(100)\n  code          String         @unique @db.VarChar(3)\n  status        LocationStatus @default(ENABLED)\n  restrictions  Json?\n  createdAt     DateTime       @default(now())\n  updatedAt     DateTime       @updatedAt\n  states        State[]\n  productOrders ProductOrder[] @relation(\"ProductOrderToCountry\")\n  services      Services[]     @relation(\"ServicesToCountry\")\n  serviceOrders ServiceOrder[] @relation(\"CountryToServiceOrders\")\n\n  @@schema(\"public\")\n}\n\nmodel State {\n  id            Int            @id @default(autoincrement())\n  name          String         @db.VarChar(100)\n  countryId     Int\n  country       Country        @relation(fields: [countryId], references: [id], onDelete: Cascade)\n  status        LocationStatus @default(ENABLED)\n  restrictions  Json?\n  createdAt     DateTime       @default(now())\n  updatedAt     DateTime       @updatedAt\n  lgas          Lga[]\n  productOrders ProductOrder[] @relation(\"ProductOrderToState\")\n  services      Services[]     @relation(\"ServicesToState\")\n  serviceOrders ServiceOrder[] @relation(\"StateToServiceOrders\")\n  cities        City[]         @relation(\"CityToState\")\n\n  @@unique([name, countryId])\n  @@schema(\"public\")\n}\n\nmodel City {\n  id            Int                                    @id @default(autoincrement())\n  name          String                                 @db.VarChar(100)\n  lgaId         Int\n  lga           Lga                                    @relation(fields: [lgaId], references: [id], onDelete: Cascade)\n  stateId       Int\n  state         State                                  @relation(\"CityToState\", fields: [stateId], references: [id], onDelete: Cascade)\n  status        LocationStatus                         @default(ENABLED)\n  restrictions  Json?\n  location      Unsupported(\"geography(Point, 4326)\")?\n  createdAt     DateTime                               @default(now())\n  updatedAt     DateTime                               @updatedAt\n  productOrders ProductOrder[]                         @relation(\"ProductOrderToCity\")\n  services      Services[]                             @relation(\"ServicesToCity\")\n  serviceOrders ServiceOrder[]                         @relation(\"CityToServiceOrders\")\n\n  @@unique([name, lgaId])\n  @@index([stateId])\n  @@schema(\"public\")\n}\n\nmodel Lga {\n  id            Int            @id @default(autoincrement())\n  name          String         @db.VarChar(100)\n  stateId       Int\n  state         State          @relation(fields: [stateId], references: [id], onDelete: Cascade)\n  status        LocationStatus @default(ENABLED)\n  restrictions  Json?\n  createdAt     DateTime       @default(now())\n  updatedAt     DateTime       @updatedAt\n  cities        City[]\n  productOrders ProductOrder[] @relation(\"ProductOrderToLga\")\n  services      Services[]     @relation(\"ServicesToLga\")\n\n  @@unique([name, stateId])\n  @@schema(\"public\")\n}\n\nmodel VirtualAccount {\n  id                  String              @id @default(uuid()) @db.Uuid\n  userId              String              @db.Uuid\n  user                User                @relation(\"UserToVirtualAccount\", fields: [userId], references: [id], onDelete: Cascade)\n  walletId            String              @db.Uuid\n  wallet              Wallet              @relation(\"WalletToVirtualAccount\", fields: [walletId], references: [id], onDelete: Cascade)\n  vendorId            String?             @db.Uuid // Links to vendor's userId if assigned to a delivery agent\n  accountNumber       String              @db.VarChar(255)\n  bankName            String              @db.VarChar(255)\n  status              String              @db.VarChar(50) // e.g., \"ACTIVE\", \"DELETED\"\n  monnifyRef          String              @db.VarChar(255)\n  isVendorMain        Boolean             @default(false) // True for vendor's main accounts, false for agent sub-accounts\n  metadata            Json? // e.g., {\"type\": \"agent_sub\"}\n  createdAt           DateTime            @default(now())\n  updatedAt           DateTime            @updatedAt\n  serviceOrders       ServiceOrder[]      @relation(\"VirtualAccountToServiceOrder\") // Links to ServiceOrder payments\n  vendorWalletConfig1 VendorWalletConfig? @relation(\"VendorWalletConfigToVirtualAccount1\")\n  vendorWalletConfig2 VendorWalletConfig? @relation(\"VendorWalletConfigToVirtualAccount2\")\n\n  @@index([userId])\n  @@index([vendorId])\n  @@index([walletId])\n  @@schema(\"public\")\n}\n\nmodel FraudAlert {\n  id           String        @id @default(uuid()) @db.Uuid\n  type         String        @db.VarChar(50)\n  entityId     String        @db.Uuid\n  entityType   String        @db.VarChar(50)\n  reason       String        @db.Text\n  userId       String?       @db.Uuid\n  vendorId     String?       @db.Uuid\n  createdAt    DateTime      @default(now())\n  resolvedAt   DateTime?\n  status       String        @default(\"PENDING\")\n  user         User?         @relation(\"UserFraudAlerts\", fields: [userId], references: [id])\n  vendor       User?         @relation(\"VendorFraudAlerts\", fields: [vendorId], references: [id])\n  order        ProductOrder? @relation(\"ProductOrderFraudAlerts\", fields: [entityId], references: [id], onDelete: Cascade, map: \"FraudAlert_productOrder_fkey\")\n  serviceOrder ServiceOrder? @relation(\"ServiceOrderFraudAlerts\", fields: [entityId], references: [id], onDelete: Cascade, map: \"FraudAlert_serviceOrder_fkey\") // Added\n  payment      Payment?      @relation(\"PaymentFraudAlerts\", fields: [entityId], references: [id], onDelete: Cascade, map: \"FraudAlert_payment_fkey\")\n\n  @@index([createdAt])\n  @@index([entityId, entityType])\n  @@schema(\"public\")\n}\n\nmodel EmailTemplate {\n  id          String     @id @default(uuid()) @db.Uuid\n  name        String     @unique @db.VarChar(50)\n  subject     String     @db.VarChar(255)\n  htmlContent String     @db.Text\n  roles       Role[]     @relation(\"EmailTemplateRoles\")\n  eventTypeId String?    @db.Uuid\n  eventType   EventType? @relation(\"EventTypeToEmailTemplate\", fields: [eventTypeId], references: [id])\n  updatedBy   String     @db.Uuid\n  updatedAt   DateTime   @updatedAt\n  user        User       @relation(\"UserToEmailTemplate\", fields: [updatedBy], references: [id])\n  isActive    Boolean    @default(true)\n\n  @@index([name])\n  @@schema(\"public\")\n}\n\nmodel RolePrivilege {\n  id         String   @id @default(uuid()) @db.Uuid\n  roleId     String   @unique @db.Uuid\n  role       Role     @relation(\"RoleToPrivileges\", fields: [roleId], references: [id])\n  privileges Json\n  createdAt  DateTime @default(now())\n  updatedAt  DateTime @updatedAt\n\n  @@schema(\"public\")\n}\n\nmodel CrashReport {\n  id           String           @id @default(uuid()) @db.Uuid\n  appVersion   String           @db.VarChar(50)\n  deviceType   String           @db.VarChar(50)\n  deviceModel  String?          @db.VarChar(100)\n  osVersion    String?          @db.VarChar(50)\n  errorMessage String           @db.Text\n  stackTrace   String           @db.Text\n  userId       String?          @db.Uuid\n  user         User?            @relation(\"UserCrashReports\", fields: [userId], references: [id], onDelete: Cascade)\n  status       CrashStatus      @default(PENDING)\n  reportedAt   DateTime         @default(now())\n  updatedAt    DateTime         @updatedAt\n  resolvedAt   DateTime?\n  deviceId     String?          @db.VarChar(255)\n  installation AppInstallation? @relation(\"InstallationCrashReports\", fields: [deviceId], references: [deviceId])\n  metadata     Json?\n\n  @@index([reportedAt])\n  @@index([userId])\n  @@index([deviceId])\n  @@schema(\"public\")\n}\n\nmodel AccountDeletionRequest {\n  id                  Int                   @id @default(autoincrement())\n  userId              String                @unique @db.Uuid\n  user                User                  @relation(fields: [userId], references: [id], onDelete: Cascade)\n  reason              String?               @db.Text\n  additionalComments  String?               @db.Text // Added for additional user comments\n  status              AccountDeletionStatus @default(PENDING)\n  requestedAt         DateTime              @default(now())\n  scheduledDeletionAt DateTime? // Added for scheduled deletion date\n  reviewedAt          DateTime?\n  reviewedById        String?               @db.Uuid\n  reviewedBy          User?                 @relation(\"ReviewedBy\", fields: [reviewedById], references: [id])\n  rejectionReason     String?               @db.Text\n  adminNotes          String?               @db.Text // Added for admin notes\n  createdAt           DateTime              @default(now())\n  updatedAt           DateTime              @updatedAt\n\n  @@index([userId])\n  @@index([status])\n  @@index([requestedAt])\n  @@index([reviewedById])\n  @@schema(\"public\")\n}\n\nmodel AdminSettings {\n  id                      Int      @id @default(autoincrement())\n  defaultServiceCharge    Float    @default(0.0)\n  defaultVatRate          Float    @default(0.075)\n  defaultTopupCharge      Float    @default(0.0)\n  defaultPetroleumTaxRate Float?\n  updatedAt               DateTime @updatedAt\n\n  @@schema(\"public\")\n}\n\nmodel Appeal {\n  id        String       @id @default(uuid()) @db.Uuid\n  userId    String       @db.Uuid\n  vendorId  String?      @db.Uuid\n  reason    String       @db.Text\n  status    AppealStatus @default(PENDING)\n  createdAt DateTime     @default(now())\n  updatedAt DateTime     @updatedAt\n  user      User         @relation(\"AppealToUser\", fields: [userId], references: [id], onDelete: Cascade)\n  vendor    Profile?     @relation(\"AppealToVendor\", fields: [vendorId], references: [id], onDelete: Cascade)\n\n  @@schema(\"public\")\n}\n\nmodel WalletSettings {\n  id                          String   @id @default(uuid()) @db.Uuid\n  userId                      String   @unique @db.Uuid\n  walletId                    String?  @unique @db.Uuid\n  wallet                      Wallet?  @relation(fields: [walletId], references: [id])\n  isDeliveryWithdrawalEnabled Boolean  @default(false)\n  withdrawalLimitDaily        Decimal?\n  withdrawalLimitSingle       Decimal?\n  createdAt                   DateTime @default(now())\n  updatedAt                   DateTime @updatedAt\n  user                        User     @relation(\"UserToWalletSettings\", fields: [userId], references: [id])\n\n  @@schema(\"public\")\n}\n\nmodel BankCard {\n  id               String   @id @default(uuid()) @db.Uuid\n  userId           String   @db.Uuid\n  walletId         String?  @db.Uuid\n  wallet           Wallet?  @relation(fields: [walletId], references: [id])\n  profileId        String?  @db.Uuid\n  profile          Profile? @relation(\"ProfileToSavedCards\", fields: [profileId], references: [id])\n  cardLast4        String\n  cardType         String\n  bankName         String\n  accountNumber    String? // Added for bank-based refunds\n  bankCode         String? // Added for bank-based refunds\n  expiryDate       String\n  isValidated      Boolean  @default(false)\n  flutterwaveToken String?\n  createdAt        DateTime @default(now())\n  updatedAt        DateTime @updatedAt\n  user             User     @relation(\"UserToBankCard\", fields: [userId], references: [id])\n\n  @@unique([userId, walletId])\n  @@index([profileId])\n  @@schema(\"public\")\n}\n\nmodel OrderStatusHistory {\n  id             String        @id @default(uuid()) @db.Uuid\n  orderId        String?       @db.Uuid\n  serviceOrderId String?       @db.Uuid\n  entityType     String        @db.VarChar(20)\n  status         String\n  createdAt      DateTime      @default(now())\n  updatedBy      String?       @db.Uuid\n  order          ProductOrder? @relation(\"ProductOrderStatusHistory\", fields: [orderId], references: [id], onDelete: Cascade)\n  user           User?         @relation(\"UserOrderStatusHistory\", fields: [updatedBy], references: [id])\n  notes          String?       @db.Text\n\n  @@index([orderId])\n  @@index([serviceOrderId])\n  @@index([createdAt])\n  @@schema(\"public\")\n}\n\nmodel WebhookAttempt {\n  id                  String             @id @default(uuid()) @db.Uuid\n  walletTransactionId String?            @db.Uuid\n  eventType           String             @db.VarChar(50)\n  webhookUrl          String             @db.Text\n  payload             Json?\n  status              String?            @db.VarChar\n  attempts            Int                @default(0)\n  lastAttemptAt       DateTime?\n  response            Json?\n  createdAt           DateTime           @default(now())\n  updatedAt           DateTime           @updatedAt\n  walletTransaction   WalletTransaction? @relation(\"TransactionWebhookAttempts\", fields: [walletTransactionId], references: [id])\n\n  @@index([walletTransactionId])\n  @@index([createdAt])\n  @@schema(\"public\")\n}\n\nmodel EventType {\n  id               String            @id @default(uuid()) @db.Uuid\n  name             String            @unique @db.VarChar(50)\n  description      String?           @db.Text\n  createdBy        String            @db.Uuid\n  createdAt        DateTime          @default(now())\n  updatedAt        DateTime          @updatedAt\n  user             User              @relation(fields: [createdBy], references: [id])\n  emailTemplates   EmailTemplate[]   @relation(\"EventTypeToEmailTemplate\")\n  smsTemplates     SMSTemplate[]     @relation(\"EventTypeToSMSTemplate\")\n  notificationLogs NotificationLog[] @relation(\"EventTypeToNotificationLog\")\n  pushTemplates    PushTemplate[]    @relation(\"EventTypeToPushTemplate\")\n  webhooks         Webhook[]         @relation\n  eventTypeRoles   EventTypeRole[]   @relation\n\n  @@schema(\"public\")\n}\n\nmodel SMSTemplate {\n  id          String     @id @default(uuid()) @db.Uuid\n  name        String     @unique @db.VarChar(50)\n  content     String     @db.Text\n  roles       Role[]     @relation(\"SMSTemplateRoles\")\n  eventTypeId String?    @db.Uuid\n  eventType   EventType? @relation(\"EventTypeToSMSTemplate\", fields: [eventTypeId], references: [id])\n  updatedBy   String     @db.Uuid\n  updatedAt   DateTime   @updatedAt\n  user        User       @relation(\"UserToSMSTemplate\", fields: [updatedBy], references: [id])\n  isActive    Boolean    @default(true)\n\n  @@index([name])\n  @@schema(\"public\")\n}\n\nmodel NotificationLog {\n  id           String    @id @default(uuid()) @db.Uuid\n  userId       String?   @db.Uuid\n  vendorId     String?   @db.Uuid\n  type         String    @db.VarChar(50)\n  eventTypeId  String    @db.Uuid\n  eventType    EventType @relation(\"EventTypeToNotificationLog\", fields: [eventTypeId], references: [id]) // Changed from EventType? to EventType\n  payload      String    @db.Text\n  status       String    @db.VarChar(20)\n  channel      String    @db.VarChar(50) // Changed from String? to String\n  recipient    String?   @db.VarChar(255)\n  errorMessage String?   @db.Text\n  message      String?   @db.Text\n  createdAt    DateTime  @default(now())\n  user         User?     @relation(\"UserNotificationLogs\", fields: [userId], references: [id])\n  vendor       User?     @relation(\"VendorNotificationLogs\", fields: [vendorId], references: [id])\n\n  @@index([createdAt])\n  @@index([userId])\n  @@index([vendorId])\n  @@index([eventTypeId])\n  @@schema(\"public\")\n}\n\nmodel PushTemplate {\n  id          String     @id @default(uuid()) @db.Uuid\n  name        String     @unique @db.VarChar(50)\n  title       String     @db.VarChar(255)\n  body        String     @db.Text\n  roles       Role[]     @relation(\"PushTemplateRoles\")\n  eventTypeId String?    @db.Uuid\n  eventType   EventType? @relation(\"EventTypeToPushTemplate\", fields: [eventTypeId], references: [id])\n  updatedBy   String     @db.Uuid\n  updatedAt   DateTime   @updatedAt\n  user        User       @relation(\"UserToPushTemplate\", fields: [updatedBy], references: [id])\n  isActive    Boolean    @default(true)\n\n  @@index([name])\n  @@schema(\"public\")\n}\n\nmodel Webhook {\n  id          String    @id @default(uuid()) @db.Uuid\n  url         String    @db.Text\n  eventTypeId String    @db.Uuid\n  eventType   EventType @relation(fields: [eventTypeId], references: [id])\n  isActive    Boolean   @default(true)\n  roles       Role[]    @relation(\"WebhookRoles\")\n  createdBy   String    @db.Uuid\n  createdAt   DateTime  @default(now())\n  updatedAt   DateTime  @updatedAt\n\n  @@schema(\"public\")\n}\n\nmodel EmailSettings {\n  id                  Int      @id @default(autoincrement())\n  smtpHost            String?  @db.VarChar(255)\n  smtpPort            Int?\n  smtpUser            String?  @db.VarChar(255)\n  smtpPassword        String?  @db.VarChar(255)\n  emailFrom           String?  @db.VarChar(255)\n  enableNotifications Boolean  @default(true) // New: Enable email notifications\n  deliveryTimeStart   String?  @db.VarChar(5) // New: e.g., \"06:00\"\n  deliveryTimeEnd     String?  @db.VarChar(5) // New: e.g., \"18:00\"\n  updatedBy           String?  @db.Uuid\n  updatedByUser       User?    @relation(fields: [updatedBy], references: [id], name: \"EmailSettingsToUser\")\n  updatedAt           DateTime @updatedAt\n  createdAt           DateTime @default(now())\n\n  @@schema(\"public\")\n}\n\nmodel SMSSettings {\n  id                  Int      @id @default(autoincrement())\n  enableNotifications Boolean  @default(true) // Enable SMS notifications\n  senderId            String?  @db.VarChar(50) // e.g., \"Quicrefil\"\n  deliveryTimeStart   String?  @db.VarChar(5) // e.g., \"06:00\" (24-hour format)\n  deliveryTimeEnd     String?  @db.VarChar(5) // e.g., \"18:00\" (24-hour format)\n  smsProvider         String?  @db.VarChar(100) // e.g., \"Twilio\", \"Nexmo\"\n  serviceType         String?  @db.VarChar(50) // e.g., \"API\", \"SMTP-like\"\n  user                String?  @db.VarChar(255) // SMS provider username\n  password            String?  @db.VarChar(255) // SMS provider password\n  host                String?  @db.VarChar(255) // SMS provider host (if applicable)\n  port                Int? // SMS provider port (if applicable)\n  updatedBy           String?  @db.Uuid\n  updatedByUser       User?    @relation(fields: [updatedBy], references: [id], name: \"SMSSettingsToUser\")\n  updatedAt           DateTime @updatedAt\n  createdAt           DateTime @default(now())\n\n  @@schema(\"public\")\n}\n\nmodel ChurnInsight {\n  id                  String   @id @default(uuid()) @db.Uuid\n  month               String   @db.VarChar(7) // e.g., \"2025-01\"\n  poorCustomerSupport Decimal  @default(0.00) @db.Decimal(10, 2)\n  highServiceFees     Decimal  @default(0.00) @db.Decimal(10, 2)\n  paymentIssues       Decimal  @default(0.00) @db.Decimal(10, 2)\n  serviceDelays       Decimal  @default(0.00) @db.Decimal(10, 2)\n  other               Decimal  @default(0.00) @db.Decimal(10, 2)\n  createdAt           DateTime @default(now())\n  updatedAt           DateTime @updatedAt\n\n  @@index([month])\n  @@schema(\"public\")\n}\n\nmodel RewardRule {\n  id             String   @id @default(uuid()) @db.Uuid\n  pointsPerNaira Float    @default(0) // Points earned per Naira spent\n  nairaPerPoint  Float    @default(0.01) // Naira credited per point redeemed (1000 points = 10 Naira)\n  appliesTo      String\n  validFrom      DateTime\n  validUntil     DateTime\n  isActive       Boolean  @default(true)\n  createdById    String   @db.Uuid\n  createdBy      User     @relation(fields: [createdById], references: [id], name: \"RewardRuleCreatedBy\")\n  createdAt      DateTime @default(now())\n  updatedAt      DateTime @updatedAt\n  updatedById    String?  @db.Uuid\n  updatedBy      User?    @relation(fields: [updatedById], references: [id], name: \"RewardRuleUpdatedBy\")\n\n  @@schema(\"public\")\n}\n\nmodel Reward {\n  id        String    @id @default(uuid()) @db.Uuid\n  userId    String    @db.Uuid\n  user      User      @relation(fields: [userId], references: [id], name: \"RewardToUser\")\n  points    Int       @default(0)\n  source    String\n  sourceId  String?\n  createdAt DateTime  @default(now())\n  expiresAt DateTime?\n  updatedAt DateTime  @updatedAt // Add this field\n\n  @@schema(\"public\")\n}\n\nmodel EventTypeRole {\n  id          String    @id @default(uuid()) @db.Uuid\n  eventTypeId String    @db.Uuid\n  eventType   EventType @relation(fields: [eventTypeId], references: [id], onDelete: Cascade)\n  roleId      String    @db.Uuid\n  role        Role      @relation(fields: [roleId], references: [id], onDelete: Cascade)\n  createdAt   DateTime  @default(now())\n  updatedAt   DateTime  @updatedAt\n\n  @@unique([eventTypeId, roleId])\n  @@index([eventTypeId])\n  @@index([roleId])\n  @@schema(\"public\")\n}\n",
  "inlineSchemaHash": "99ae791c51de94d3983845bd819bc4ea59d9164266d5a0648817981f42974cc1",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"Rating\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"RatingToUser\"},{\"name\":\"roleId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"object\",\"type\":\"Role\",\"relationName\":\"RatingRoles\"},{\"name\":\"avgRating\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"ratingCount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"roleId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"object\",\"type\":\"Role\",\"relationName\":\"UserRoles\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"username\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"firstName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"lastName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"uniqueDeliveryId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"deviceToken\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phoneNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phoneVerified\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"identityVerified\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"bvnVerified\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"businessVerified\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"webAccessGranted\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"webAccessGrantedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"migratedToVendor\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"migrationDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"inviteCode\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"publicKey\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"address\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"avatar\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"emailVerified\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isSocialAccount\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"socialAccountProvider\",\"kind\":\"enum\",\"type\":\"SocialAccountProvider\"},{\"name\":\"notificationsEnabled\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"twoFactorEnabled\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"twoFactorSecret\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"notificationPreference\",\"kind\":\"enum\",\"type\":\"NotificationType\"},{\"name\":\"customerAddress\",\"kind\":\"object\",\"type\":\"CustomerAddress\",\"relationName\":\"CustomerAddressToUser\"},{\"name\":\"walletTransactions\",\"kind\":\"object\",\"type\":\"WalletTransaction\",\"relationName\":\"UserToWalletTransaction\"},{\"name\":\"payOnDeliveryOrders\",\"kind\":\"object\",\"type\":\"PayOnDeliveryOrder\",\"relationName\":\"PayOnDeliveryOrderToUser\"},{\"name\":\"profile\",\"kind\":\"object\",\"type\":\"Profile\",\"relationName\":\"UserToProfile\"},{\"name\":\"orders\",\"kind\":\"object\",\"type\":\"ProductOrder\",\"relationName\":\"UserProductOrders\"},{\"name\":\"vouchersCreated\",\"kind\":\"object\",\"type\":\"Voucher\",\"relationName\":\"VoucherCreator\"},{\"name\":\"payments\",\"kind\":\"object\",\"type\":\"Payment\",\"relationName\":\"PaymentToUser\"},{\"name\":\"wallet\",\"kind\":\"object\",\"type\":\"Wallet\",\"relationName\":\"UserToWallet\"},{\"name\":\"savedMeterNumbers\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"agentOrders\",\"kind\":\"object\",\"type\":\"ProductOrder\",\"relationName\":\"AgentProductOrders\"},{\"name\":\"carts\",\"kind\":\"object\",\"type\":\"Cart\",\"relationName\":\"CartToUser\"},{\"name\":\"products\",\"kind\":\"object\",\"type\":\"Product\",\"relationName\":\"ProductToUser\"},{\"name\":\"otps\",\"kind\":\"object\",\"type\":\"Otp\",\"relationName\":\"OtpToUser\"},{\"name\":\"withdrawals\",\"kind\":\"object\",\"type\":\"Withdrawal\",\"relationName\":\"UserWithdrawals\"},{\"name\":\"appInstallations\",\"kind\":\"object\",\"type\":\"AppInstallation\",\"relationName\":\"UserInstallations\"},{\"name\":\"isSuspended\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"suspendedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"deletionRequestedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"deletedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"isWithdrawalSuspended\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"withdrawalSuspendedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"withdrawalSuspensionReason\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"withdrawalSuspensionDuration\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"fraudAlerts\",\"kind\":\"object\",\"type\":\"FraudAlert\",\"relationName\":\"UserFraudAlerts\"},{\"name\":\"vendorFraudAlerts\",\"kind\":\"object\",\"type\":\"FraudAlert\",\"relationName\":\"VendorFraudAlerts\"},{\"name\":\"smsTemplates\",\"kind\":\"object\",\"type\":\"SMSTemplate\",\"relationName\":\"UserToSMSTemplate\"},{\"name\":\"emailTemplates\",\"kind\":\"object\",\"type\":\"EmailTemplate\",\"relationName\":\"UserToEmailTemplate\"},{\"name\":\"auditLogs\",\"kind\":\"object\",\"type\":\"AuditLog\",\"relationName\":\"UserAuditLogs\"},{\"name\":\"gender\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"dateOfBirth\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"crashReports\",\"kind\":\"object\",\"type\":\"CrashReport\",\"relationName\":\"UserCrashReports\"},{\"name\":\"accountDeletionRequest\",\"kind\":\"object\",\"type\":\"AccountDeletionRequest\",\"relationName\":\"AccountDeletionRequestToUser\"},{\"name\":\"reviewedAccountDeletionRequests\",\"kind\":\"object\",\"type\":\"AccountDeletionRequest\",\"relationName\":\"ReviewedBy\"},{\"name\":\"notificationLogsUser\",\"kind\":\"object\",\"type\":\"NotificationLog\",\"relationName\":\"UserNotificationLogs\"},{\"name\":\"notificationLogsVendor\",\"kind\":\"object\",\"type\":\"NotificationLog\",\"relationName\":\"VendorNotificationLogs\"},{\"name\":\"appealsAsUser\",\"kind\":\"object\",\"type\":\"Appeal\",\"relationName\":\"AppealToUser\"},{\"name\":\"bankCards\",\"kind\":\"object\",\"type\":\"BankCard\",\"relationName\":\"UserToBankCard\"},{\"name\":\"settings\",\"kind\":\"object\",\"type\":\"WalletSettings\",\"relationName\":\"UserToWalletSettings\"},{\"name\":\"bvnVerifications\",\"kind\":\"object\",\"type\":\"BVNVerification\",\"relationName\":\"UserToBVNVerification\"},{\"name\":\"notificationPreferences\",\"kind\":\"object\",\"type\":\"NotificationPreference\",\"relationName\":\"UserToNotificationPreference\"},{\"name\":\"orderStatusHistory\",\"kind\":\"object\",\"type\":\"OrderStatusHistory\",\"relationName\":\"UserOrderStatusHistory\"},{\"name\":\"ratings\",\"kind\":\"object\",\"type\":\"Rating\",\"relationName\":\"RatingToUser\"},{\"name\":\"orderReviews\",\"kind\":\"object\",\"type\":\"OrderReview\",\"relationName\":\"OrderReviewToUser\"},{\"name\":\"EventType\",\"kind\":\"object\",\"type\":\"EventType\",\"relationName\":\"EventTypeToUser\"},{\"name\":\"givenFeedback\",\"kind\":\"object\",\"type\":\"Feedback\",\"relationName\":\"FeedbackToUser\"},{\"name\":\"receivedFeedback\",\"kind\":\"object\",\"type\":\"Feedback\",\"relationName\":\"FeedbackReceiver\"},{\"name\":\"serviceOrders\",\"kind\":\"object\",\"type\":\"ServiceOrder\",\"relationName\":\"UserServiceOrders\"},{\"name\":\"agentServiceOrders\",\"kind\":\"object\",\"type\":\"ServiceOrder\",\"relationName\":\"AgentServiceOrders\"},{\"name\":\"adminServiceOrders\",\"kind\":\"object\",\"type\":\"ServiceOrder\",\"relationName\":\"AdminServiceOrders\"},{\"name\":\"reviewedIdentityVerifications\",\"kind\":\"object\",\"type\":\"IdentityVerification\",\"relationName\":\"IdentityVerificationReviewedBy\"},{\"name\":\"identityVerification\",\"kind\":\"object\",\"type\":\"IdentityVerification\",\"relationName\":\"UserToIdentityVerification\"},{\"name\":\"businessVerification\",\"kind\":\"object\",\"type\":\"BusinessVerification\",\"relationName\":\"UserToBusinessVerification\"},{\"name\":\"pushToken\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"pushTemplates\",\"kind\":\"object\",\"type\":\"PushTemplate\",\"relationName\":\"UserToPushTemplate\"},{\"name\":\"emailSettings\",\"kind\":\"object\",\"type\":\"EmailSettings\",\"relationName\":\"EmailSettingsToUser\"},{\"name\":\"smsSettings\",\"kind\":\"object\",\"type\":\"SMSSettings\",\"relationName\":\"SMSSettingsToUser\"},{\"name\":\"lastLoginAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"last_login_at\"},{\"name\":\"virtualAccounts\",\"kind\":\"object\",\"type\":\"VirtualAccount\",\"relationName\":\"UserToVirtualAccount\"},{\"name\":\"voucherUsages\",\"kind\":\"object\",\"type\":\"VoucherUsage\",\"relationName\":\"UserToVoucherUsage\"},{\"name\":\"reportsAsReporter\",\"kind\":\"object\",\"type\":\"Report\",\"relationName\":\"ReportReporter\"},{\"name\":\"reportsAsAdmin\",\"kind\":\"object\",\"type\":\"Report\",\"relationName\":\"ReportAdmin\"},{\"name\":\"rewardRulesCreated\",\"kind\":\"object\",\"type\":\"RewardRule\",\"relationName\":\"RewardRuleCreatedBy\"},{\"name\":\"rewardRulesUpdated\",\"kind\":\"object\",\"type\":\"RewardRule\",\"relationName\":\"RewardRuleUpdatedBy\"},{\"name\":\"rewards\",\"kind\":\"object\",\"type\":\"Reward\",\"relationName\":\"RewardToUser\"},{\"name\":\"staff\",\"kind\":\"object\",\"type\":\"Staff\",\"relationName\":\"StaffToUser\"},{\"name\":\"isWithdrawalAllowed\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdStaff\",\"kind\":\"object\",\"type\":\"Staff\",\"relationName\":\"StaffCreatedBy\"},{\"name\":\"isDeliveryAgent\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"subAccounts\",\"kind\":\"object\",\"type\":\"SubAccount\",\"relationName\":\"SubAccountToUser\"},{\"name\":\"isAdmin\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"isVendor\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"complaints\",\"kind\":\"object\",\"type\":\"Complaint\",\"relationName\":\"UserComplaints\"},{\"name\":\"assignedComplaints\",\"kind\":\"object\",\"type\":\"Complaint\",\"relationName\":\"AssignedTeamComplaints\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"agentServices\",\"kind\":\"object\",\"type\":\"Services\",\"relationName\":\"AgentServices\"},{\"name\":\"banReason\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"blocked\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"isPenalized\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"serviceVerifications\",\"kind\":\"object\",\"type\":\"ServiceVerification\",\"relationName\":\"UserToServiceVerification\"},{\"name\":\"serviceOrderStatusHistory\",\"kind\":\"object\",\"type\":\"ServiceOrderStatusHistory\",\"relationName\":\"UserServiceOrderStatusHistory\"},{\"name\":\"licenses\",\"kind\":\"object\",\"type\":\"License\",\"relationName\":\"UserToLicense\"},{\"name\":\"vehicles\",\"kind\":\"object\",\"type\":\"Vehicle\",\"relationName\":\"UserToVehicle\"},{\"name\":\"providerServices\",\"kind\":\"object\",\"type\":\"Services\",\"relationName\":\"ProviderServices\"},{\"name\":\"createdServiceTypes\",\"kind\":\"object\",\"type\":\"ServiceType\",\"relationName\":\"ServiceTypeCreatedBy\"},{\"name\":\"createdProductTypes\",\"kind\":\"object\",\"type\":\"ProductType\",\"relationName\":\"ProductTypeCreatedBy\"},{\"name\":\"createdRoles\",\"kind\":\"object\",\"type\":\"Role\",\"relationName\":\"RoleCreatedBy\"},{\"name\":\"withdrawalLimitsUpdated\",\"kind\":\"object\",\"type\":\"WithdrawalLimit\",\"relationName\":\"WithdrawalLimitUpdatedBy\"},{\"name\":\"sessions\",\"kind\":\"object\",\"type\":\"Session\",\"relationName\":\"UserToSessions\"},{\"name\":\"identityVerificationStatusHistory\",\"kind\":\"object\",\"type\":\"IdentityVerificationStatusHistory\",\"relationName\":\"UserIdentityVerificationStatusHistory\"}],\"dbName\":null},\"Role\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdById\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdBy\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"RoleCreatedBy\"},{\"name\":\"users\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserRoles\"},{\"name\":\"staff\",\"kind\":\"object\",\"type\":\"Staff\",\"relationName\":\"StaffRoles\"},{\"name\":\"ratings\",\"kind\":\"object\",\"type\":\"Rating\",\"relationName\":\"RatingRoles\"},{\"name\":\"feedbackGivers\",\"kind\":\"object\",\"type\":\"Feedback\",\"relationName\":\"FeedbackGiverRoles\"},{\"name\":\"feedbackReceivers\",\"kind\":\"object\",\"type\":\"Feedback\",\"relationName\":\"FeedbackReceiverRoles\"},{\"name\":\"profiles\",\"kind\":\"object\",\"type\":\"Profile\",\"relationName\":\"ProfileRoles\"},{\"name\":\"emailTemplates\",\"kind\":\"object\",\"type\":\"EmailTemplate\",\"relationName\":\"EmailTemplateRoles\"},{\"name\":\"smsTemplates\",\"kind\":\"object\",\"type\":\"SMSTemplate\",\"relationName\":\"SMSTemplateRoles\"},{\"name\":\"pushTemplates\",\"kind\":\"object\",\"type\":\"PushTemplate\",\"relationName\":\"PushTemplateRoles\"},{\"name\":\"webhooks\",\"kind\":\"object\",\"type\":\"Webhook\",\"relationName\":\"WebhookRoles\"},{\"name\":\"voucherRestrictedTo\",\"kind\":\"object\",\"type\":\"Voucher\",\"relationName\":\"VoucherRestrictedToRoles\"},{\"name\":\"withdrawalLimits\",\"kind\":\"object\",\"type\":\"WithdrawalLimit\",\"relationName\":\"WithdrawalLimitRoles\"},{\"name\":\"rolePrivileges\",\"kind\":\"object\",\"type\":\"RolePrivilege\",\"relationName\":\"RoleToPrivileges\"},{\"name\":\"eventTypeRoles\",\"kind\":\"object\",\"type\":\"EventTypeRole\",\"relationName\":\"EventTypeRoleToRole\"}],\"dbName\":null},\"Profile\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToProfile\"},{\"name\":\"roleId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"object\",\"type\":\"Role\",\"relationName\":\"ProfileRoles\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"AgentStatus\"},{\"name\":\"isWebEnabled\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"webEnabledAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"department\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"jobTitle\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"permissions\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"vehicleType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"vehiclePlate\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"lastLocationLat\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"lastLocationLng\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"lastLocationAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"vendorId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"vendor\",\"kind\":\"object\",\"type\":\"Profile\",\"relationName\":\"VendorToAgents\"},{\"name\":\"defaultDeliveryFee\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"roleSpecificData\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"services\",\"kind\":\"object\",\"type\":\"Services\",\"relationName\":\"VendorServices\"},{\"name\":\"orders\",\"kind\":\"object\",\"type\":\"ProductOrder\",\"relationName\":\"VendorProductOrders\"},{\"name\":\"serviceOrders\",\"kind\":\"object\",\"type\":\"ServiceOrder\",\"relationName\":\"VendorToServiceOrders\"},{\"name\":\"deliveryReps\",\"kind\":\"object\",\"type\":\"Profile\",\"relationName\":\"VendorToDeliveryReps\"},{\"name\":\"agents\",\"kind\":\"object\",\"type\":\"Profile\",\"relationName\":\"VendorToAgents\"},{\"name\":\"deliveryRepVendor\",\"kind\":\"object\",\"type\":\"Profile\",\"relationName\":\"VendorToDeliveryReps\"},{\"name\":\"servicesAsDeliveryRep\",\"kind\":\"object\",\"type\":\"Services\",\"relationName\":\"DeliveryRepServices\"},{\"name\":\"feedbackAsAgent\",\"kind\":\"object\",\"type\":\"Feedback\",\"relationName\":\"AgentFeedback\"},{\"name\":\"feedbackAsVendor\",\"kind\":\"object\",\"type\":\"Feedback\",\"relationName\":\"VendorFeedback\"},{\"name\":\"customerReviews\",\"kind\":\"object\",\"type\":\"Feedback\",\"relationName\":\"CustomerReviews\"},{\"name\":\"infractionsAsAgent\",\"kind\":\"object\",\"type\":\"Infraction\",\"relationName\":\"InfractionToAgent\"},{\"name\":\"infractionsAsDeliveryRep\",\"kind\":\"object\",\"type\":\"Infraction\",\"relationName\":\"InfractionToDeliveryRep\"},{\"name\":\"infractionsAsVendor\",\"kind\":\"object\",\"type\":\"Infraction\",\"relationName\":\"InfractionToVendor\"},{\"name\":\"appealsAsVendor\",\"kind\":\"object\",\"type\":\"Appeal\",\"relationName\":\"AppealToVendor\"},{\"name\":\"vendorWalletConfigs\",\"kind\":\"object\",\"type\":\"VendorWalletConfig\",\"relationName\":\"VendorToWalletConfig\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"profileId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"businessVerificationStatus\",\"kind\":\"enum\",\"type\":\"VerificationStatus\"},{\"name\":\"identityVerificationStatus\",\"kind\":\"enum\",\"type\":\"DocumentStatus\"},{\"name\":\"serviceVerificationStatus\",\"kind\":\"enum\",\"type\":\"VerificationStatus\"},{\"name\":\"businessVerification\",\"kind\":\"object\",\"type\":\"BusinessVerification\",\"relationName\":\"ProfileToBusinessVerification\"},{\"name\":\"identityVerification\",\"kind\":\"object\",\"type\":\"IdentityVerification\",\"relationName\":\"ProfileToIdentityVerification\"},{\"name\":\"serviceVerification\",\"kind\":\"object\",\"type\":\"ServiceVerification\",\"relationName\":\"ProfileToServiceVerification\"},{\"name\":\"wallet\",\"kind\":\"object\",\"type\":\"Wallet\",\"relationName\":\"ProfileToWallet\"},{\"name\":\"savedAddresses\",\"kind\":\"object\",\"type\":\"CustomerAddress\",\"relationName\":\"ProfileToSavedAddresses\"},{\"name\":\"savedCards\",\"kind\":\"object\",\"type\":\"BankCard\",\"relationName\":\"ProfileToSavedCards\"},{\"name\":\"favorites\",\"kind\":\"object\",\"type\":\"Favorite\",\"relationName\":\"ProfileToFavorites\"},{\"name\":\"walletBalance\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"avatar\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"deliveries\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"rating\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"yearsOnPlatform\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"achievements\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"fiveStarRatingsCount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"reportsAsAgentProfile\",\"kind\":\"object\",\"type\":\"Report\",\"relationName\":\"ReportAgentProfile\"},{\"name\":\"reportsAsVendor\",\"kind\":\"object\",\"type\":\"Report\",\"relationName\":\"ReportVendor\"},{\"name\":\"staff\",\"kind\":\"object\",\"type\":\"Staff\",\"relationName\":\"ProfileToStaff\"},{\"name\":\"avgRating\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"ratingCount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"fiveStarCount\",\"kind\":\"scalar\",\"type\":\"Int\"}],\"dbName\":null},\"Zone\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"serviceId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"service\",\"kind\":\"object\",\"type\":\"Services\",\"relationName\":\"ServicesToZones\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"minDeliveryDays\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"maxDeliveryDays\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"orderCutoffTime\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"providerId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"providerRole\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"address\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"latitude\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"longitude\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"serviceRadius\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"priceMultiplier\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"serviceOrders\",\"kind\":\"object\",\"type\":\"ServiceOrder\",\"relationName\":\"ZoneToServiceOrders\"}],\"dbName\":null},\"Complaint\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orderId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"order\",\"kind\":\"object\",\"type\":\"ProductOrder\",\"relationName\":\"ProductOrderComplaints\"},{\"name\":\"serviceOrderId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"serviceOrder\",\"kind\":\"object\",\"type\":\"ServiceOrder\",\"relationName\":\"ServiceOrderComplaints\"},{\"name\":\"productId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"product\",\"kind\":\"object\",\"type\":\"Product\",\"relationName\":\"ProductComplaints\"},{\"name\":\"serviceId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"service\",\"kind\":\"object\",\"type\":\"Services\",\"relationName\":\"ServicesComplaints\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserComplaints\"},{\"name\":\"issueType\",\"kind\":\"enum\",\"type\":\"IssueType\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"reason\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"ComplaintStatus\"},{\"name\":\"internalNote\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"resolutionDetails\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"assignedTeamId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"assignedTeam\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"AssignedTeamComplaints\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"resolvedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"images\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ticketId\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null},\"Staff\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"StaffToUser\"},{\"name\":\"profileId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"profile\",\"kind\":\"object\",\"type\":\"Profile\",\"relationName\":\"ProfileToStaff\"},{\"name\":\"roleId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"object\",\"type\":\"Role\",\"relationName\":\"StaffRoles\"},{\"name\":\"customRole\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdById\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdBy\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"StaffCreatedBy\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"metadata\",\"kind\":\"scalar\",\"type\":\"Json\"}],\"dbName\":null},\"NotificationPreference\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToNotificationPreference\"},{\"name\":\"pushEnabled\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"emailEnabled\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"smsEnabled\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"discountsEnabled\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"passwordChangeEnabled\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"notificationTypes\",\"kind\":\"enum\",\"type\":\"NotificationType\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"IdentityVerification\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToIdentityVerification\"},{\"name\":\"profileId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"profile\",\"kind\":\"object\",\"type\":\"Profile\",\"relationName\":\"ProfileToIdentityVerification\"},{\"name\":\"documentType\",\"kind\":\"enum\",\"type\":\"IdentityVerificationType\"},{\"name\":\"country\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"frontImageUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"backImageUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"selfieImageUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"DocumentStatus\"},{\"name\":\"reviewedById\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"reviewedBy\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"IdentityVerificationReviewedBy\"},{\"name\":\"reviewedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"rejectionReason\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"submittedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"processedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"deviceInfo\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"documentNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"statusHistory\",\"kind\":\"object\",\"type\":\"IdentityVerificationStatusHistory\",\"relationName\":\"IdentityVerificationStatusHistory\"}],\"dbName\":null},\"IdentityVerificationStatusHistory\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"verificationId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"verification\",\"kind\":\"object\",\"type\":\"IdentityVerification\",\"relationName\":\"IdentityVerificationStatusHistory\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"DocumentStatus\"},{\"name\":\"updatedById\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"updatedBy\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserIdentityVerificationStatusHistory\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"License\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToLicense\"},{\"name\":\"licenseType\",\"kind\":\"enum\",\"type\":\"LicenseType\"},{\"name\":\"licenseNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"issuedBy\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"issuedDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"expiryDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"documentUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"documentBackUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"documentType\",\"kind\":\"enum\",\"type\":\"DocumentType\"},{\"name\":\"verified\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"VerificationStatus\"},{\"name\":\"verifiedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"rejectionReason\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"verifiedById\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"services\",\"kind\":\"object\",\"type\":\"Services\",\"relationName\":\"ServicesToLicenses\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"urlStatuses\",\"kind\":\"scalar\",\"type\":\"Json\"}],\"dbName\":null},\"Vehicle\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToVehicle\"},{\"name\":\"plateNumberUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"driverLicenseUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"vehicleRoadLicenseUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"verified\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"VerificationStatus\"},{\"name\":\"verifiedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"rejectionReason\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"documentType\",\"kind\":\"enum\",\"type\":\"DocumentType\"},{\"name\":\"verifiedById\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"services\",\"kind\":\"object\",\"type\":\"Services\",\"relationName\":\"ServicesToVehicles\"},{\"name\":\"plateNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"urlStatuses\",\"kind\":\"scalar\",\"type\":\"Json\"}],\"dbName\":null},\"VendorWalletConfig\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"vendorId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"deliveryAgentId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"withdrawalEnabled\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"depositEnabled\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"withdrawalLimit\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"depositRequiresApproval\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"vendor\",\"kind\":\"object\",\"type\":\"Profile\",\"relationName\":\"VendorToWalletConfig\"},{\"name\":\"wallet\",\"kind\":\"object\",\"type\":\"Wallet\",\"relationName\":\"WalletToVendorWalletConfig\"},{\"name\":\"virtualAccount1Id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"virtualAccount2Id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"virtualAccount1\",\"kind\":\"object\",\"type\":\"VirtualAccount\",\"relationName\":\"VendorWalletConfigToVirtualAccount1\"},{\"name\":\"virtualAccount2\",\"kind\":\"object\",\"type\":\"VirtualAccount\",\"relationName\":\"VendorWalletConfigToVirtualAccount2\"}],\"dbName\":null},\"ServiceType\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdById\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdBy\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ServiceTypeCreatedBy\"},{\"name\":\"services\",\"kind\":\"object\",\"type\":\"Services\",\"relationName\":\"ServiceTypeToServices\"},{\"name\":\"serviceOrders\",\"kind\":\"object\",\"type\":\"ServiceOrder\",\"relationName\":\"ServiceTypeToServiceOrders\"},{\"name\":\"categoryId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"category\",\"kind\":\"object\",\"type\":\"Category\",\"relationName\":\"CategoryToServiceTypes\"}],\"dbName\":null},\"ServiceOrder\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserServiceOrders\"},{\"name\":\"agentId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"agent\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"AgentServiceOrders\"},{\"name\":\"serviceId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"service\",\"kind\":\"object\",\"type\":\"Services\",\"relationName\":\"ServicesToServiceOrders\"},{\"name\":\"zoneId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"zone\",\"kind\":\"object\",\"type\":\"Zone\",\"relationName\":\"ZoneToServiceOrders\"},{\"name\":\"vendorId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"vendor\",\"kind\":\"object\",\"type\":\"Profile\",\"relationName\":\"VendorToServiceOrders\"},{\"name\":\"amountDue\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"deliveryFee\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"serviceCharge\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"paymentStatus\",\"kind\":\"enum\",\"type\":\"TransactionStatus\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"ServiceOrderStatus\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"feedbacks\",\"kind\":\"object\",\"type\":\"Feedback\",\"relationName\":\"ServiceOrderFeedbacks\"},{\"name\":\"paymentId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"payment\",\"kind\":\"object\",\"type\":\"Payment\",\"relationName\":\"PaymentToServiceOrders\"},{\"name\":\"deliveryAddressId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"deliveryAddress\",\"kind\":\"object\",\"type\":\"CustomerAddress\",\"relationName\":\"ServiceOrderToCustomerAddress\"},{\"name\":\"latitude\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"longitude\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"countryId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"stateId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"cityId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"country\",\"kind\":\"object\",\"type\":\"Country\",\"relationName\":\"CountryToServiceOrders\"},{\"name\":\"state\",\"kind\":\"object\",\"type\":\"State\",\"relationName\":\"StateToServiceOrders\"},{\"name\":\"city\",\"kind\":\"object\",\"type\":\"City\",\"relationName\":\"CityToServiceOrders\"},{\"name\":\"auditLogs\",\"kind\":\"object\",\"type\":\"AuditLog\",\"relationName\":\"AuditLogToServiceOrder\"},{\"name\":\"virtualAccountId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"virtualAccount\",\"kind\":\"object\",\"type\":\"VirtualAccount\",\"relationName\":\"VirtualAccountToServiceOrder\"},{\"name\":\"adminId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"admin\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"AdminServiceOrders\"},{\"name\":\"walletTransactions\",\"kind\":\"object\",\"type\":\"WalletTransaction\",\"relationName\":\"ServiceOrderTransactions\"},{\"name\":\"reports\",\"kind\":\"object\",\"type\":\"Report\",\"relationName\":\"ReportToServiceOrder\"},{\"name\":\"orderQuantity\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"deliveryDistance\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"customerReference\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"paymentMethod\",\"kind\":\"enum\",\"type\":\"PaymentMethod\"},{\"name\":\"deliveryLatitude\",\"kind\":\"scalar\",\"type\":\"Float\",\"dbName\":\"ST_Y(delivery_location::geometry)\"},{\"name\":\"deliveryLongitude\",\"kind\":\"scalar\",\"type\":\"Float\",\"dbName\":\"ST_X(delivery_location::geometry)\"},{\"name\":\"confirmationCode\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"voucherId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"voucher\",\"kind\":\"object\",\"type\":\"Voucher\",\"relationName\":\"ServiceOrderToVoucher\"},{\"name\":\"deliveryTime\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"statusHistory\",\"kind\":\"object\",\"type\":\"ServiceOrderStatusHistory\",\"relationName\":\"ServiceOrderStatusHistory\"},{\"name\":\"billerCode\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"itemCode\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"meterNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"paymentDetails\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"meterType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"token\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"serviceFee\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"voucherDiscount\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"pointsDiscount\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"flutterwaveFee\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"monnifyFee\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"vat\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"transactionRef\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"payments\",\"kind\":\"object\",\"type\":\"Payment\",\"relationName\":\"ServiceOrderPayments\"},{\"name\":\"fraudAlerts\",\"kind\":\"object\",\"type\":\"FraudAlert\",\"relationName\":\"ServiceOrderFraudAlerts\"},{\"name\":\"disputes\",\"kind\":\"object\",\"type\":\"Dispute\",\"relationName\":\"ServiceOrderDisputes\"},{\"name\":\"payOnDeliveryOrders\",\"kind\":\"object\",\"type\":\"PayOnDeliveryOrder\",\"relationName\":\"ServiceOrderPayOnDelivery\"},{\"name\":\"reviews\",\"kind\":\"object\",\"type\":\"OrderReview\",\"relationName\":\"ServiceOrderReviews\"},{\"name\":\"complaints\",\"kind\":\"object\",\"type\":\"Complaint\",\"relationName\":\"ServiceOrderComplaints\"},{\"name\":\"serviceTypeId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"serviceType\",\"kind\":\"object\",\"type\":\"ServiceType\",\"relationName\":\"ServiceTypeToServiceOrders\"}],\"dbName\":null},\"ServiceOrderStatusHistory\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"serviceOrderId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"serviceOrder\",\"kind\":\"object\",\"type\":\"ServiceOrder\",\"relationName\":\"ServiceOrderStatusHistory\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"ServiceOrderStatus\"},{\"name\":\"updatedBy\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserServiceOrderStatusHistory\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"BVNVerification\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToBVNVerification\"},{\"name\":\"walletId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"wallet\",\"kind\":\"object\",\"type\":\"Wallet\",\"relationName\":\"BVNVerificationToWallet\"},{\"name\":\"bvn\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"bankName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"accountNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"responseDetails\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"transactionRef\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null},\"Accessory\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"price\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"stockCount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"AccessoryStatus\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"orderItems\",\"kind\":\"object\",\"type\":\"OrderItem\",\"relationName\":\"AccessoryToOrderItem\"}],\"dbName\":null},\"Services\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"serviceTypeId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"serviceType\",\"kind\":\"object\",\"type\":\"ServiceType\",\"relationName\":\"ServiceTypeToServices\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"ServiceStatus\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"pricePerUnit\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"deliveryCost\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"minimumOrder\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"maximumOrder\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"paymentOptions\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"Contact\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"businessHours\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"expectedDeliveryTime\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"address\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"logoUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"longitude\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"latitude\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"serviceRadius\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"countryId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"stateId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"cityId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"lgaId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"country\",\"kind\":\"object\",\"type\":\"Country\",\"relationName\":\"ServicesToCountry\"},{\"name\":\"state\",\"kind\":\"object\",\"type\":\"State\",\"relationName\":\"ServicesToState\"},{\"name\":\"city\",\"kind\":\"object\",\"type\":\"City\",\"relationName\":\"ServicesToCity\"},{\"name\":\"lga\",\"kind\":\"object\",\"type\":\"Lga\",\"relationName\":\"ServicesToLga\"},{\"name\":\"providerId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"provider\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ProviderServices\"},{\"name\":\"providerRole\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"businessVerificationId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"businessVerification\",\"kind\":\"object\",\"type\":\"BusinessVerification\",\"relationName\":\"ServicesToBusinessVerification\"},{\"name\":\"deliveryRepId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"deliveryRep\",\"kind\":\"object\",\"type\":\"Profile\",\"relationName\":\"DeliveryRepServices\"},{\"name\":\"agentId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"agent\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"AgentServices\"},{\"name\":\"verified\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"verifiedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"verificationStatus\",\"kind\":\"enum\",\"type\":\"VerificationStatus\"},{\"name\":\"avgRating\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"ratingCount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"serviceOrders\",\"kind\":\"object\",\"type\":\"ServiceOrder\",\"relationName\":\"ServicesToServiceOrders\"},{\"name\":\"serviceReviews\",\"kind\":\"object\",\"type\":\"ServiceReview\",\"relationName\":\"ServicesToServiceReviews\"},{\"name\":\"billerCode\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"itemCode\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"destinationBankCode\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"destinationAccountNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"serviceVerifications\",\"kind\":\"object\",\"type\":\"ServiceVerification\",\"relationName\":\"ServicesToVerifications\"},{\"name\":\"disputes\",\"kind\":\"object\",\"type\":\"Dispute\",\"relationName\":\"ServicesDisputes\"},{\"name\":\"zones\",\"kind\":\"object\",\"type\":\"Zone\",\"relationName\":\"ServicesToZones\"},{\"name\":\"licenses\",\"kind\":\"object\",\"type\":\"License\",\"relationName\":\"ServicesToLicenses\"},{\"name\":\"vehicles\",\"kind\":\"object\",\"type\":\"Vehicle\",\"relationName\":\"ServicesToVehicles\"},{\"name\":\"vendorId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"vendor\",\"kind\":\"object\",\"type\":\"Profile\",\"relationName\":\"VendorServices\"},{\"name\":\"reviews\",\"kind\":\"object\",\"type\":\"OrderReview\",\"relationName\":\"ServicesReviews\"},{\"name\":\"complaints\",\"kind\":\"object\",\"type\":\"Complaint\",\"relationName\":\"ServicesComplaints\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"businessName\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null},\"ServiceReview\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"rating\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"comment\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"reviewerName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"reviewerId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"serviceId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"service\",\"kind\":\"object\",\"type\":\"Services\",\"relationName\":\"ServicesToServiceReviews\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"BusinessVerification\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToBusinessVerification\"},{\"name\":\"profileId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"profile\",\"kind\":\"object\",\"type\":\"Profile\",\"relationName\":\"ProfileToBusinessVerification\"},{\"name\":\"businessName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"rcNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"businessAddress\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tinNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"cacDocumentUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tinDocumentUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"proofOfAddressUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"logoUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"handles\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"VerificationStatus\"},{\"name\":\"documentType\",\"kind\":\"enum\",\"type\":\"DocumentType\"},{\"name\":\"rejectionReason\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"adminId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"submittedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"processedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"services\",\"kind\":\"object\",\"type\":\"Services\",\"relationName\":\"ServicesToBusinessVerification\"},{\"name\":\"urlStatuses\",\"kind\":\"scalar\",\"type\":\"Json\"}],\"dbName\":null},\"ProductOrder\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserProductOrders\"},{\"name\":\"vendorId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"vendor\",\"kind\":\"object\",\"type\":\"Profile\",\"relationName\":\"VendorProductOrders\"},{\"name\":\"deliveryAddressId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"deliveryAddress\",\"kind\":\"object\",\"type\":\"CustomerAddress\",\"relationName\":\"CustomerAddressToProductOrder\"},{\"name\":\"agentId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"agent\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"AgentProductOrders\"},{\"name\":\"subtotal\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"deliveryFee\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"serviceCharge\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"vatAmount\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"total\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"confirmationCode\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"paymentMethod\",\"kind\":\"enum\",\"type\":\"PaymentMethod\"},{\"name\":\"paymentStatus\",\"kind\":\"enum\",\"type\":\"TransactionStatus\"},{\"name\":\"orderStatus\",\"kind\":\"enum\",\"type\":\"OrderStatus\"},{\"name\":\"deliveryRepId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"countryId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"stateId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"lgaId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"cityId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"country\",\"kind\":\"object\",\"type\":\"Country\",\"relationName\":\"ProductOrderToCountry\"},{\"name\":\"state\",\"kind\":\"object\",\"type\":\"State\",\"relationName\":\"ProductOrderToState\"},{\"name\":\"lga\",\"kind\":\"object\",\"type\":\"Lga\",\"relationName\":\"ProductOrderToLga\"},{\"name\":\"city\",\"kind\":\"object\",\"type\":\"City\",\"relationName\":\"ProductOrderToCity\"},{\"name\":\"items\",\"kind\":\"object\",\"type\":\"OrderItem\",\"relationName\":\"OrderItemToProductOrder\"},{\"name\":\"reviews\",\"kind\":\"object\",\"type\":\"OrderReview\",\"relationName\":\"ProductOrderReviews\"},{\"name\":\"payOnDeliveryOrders\",\"kind\":\"object\",\"type\":\"PayOnDeliveryOrder\",\"relationName\":\"ProductOrderPayOnDelivery\"},{\"name\":\"disputes\",\"kind\":\"object\",\"type\":\"Dispute\",\"relationName\":\"ProductOrderDisputes\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"customerReference\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"deliveryNotes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"completedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"deliveryTime\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"deliveryDistance\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"latitude\",\"kind\":\"scalar\",\"type\":\"Float\",\"dbName\":\"ST_Y(delivery_location::geometry)\"},{\"name\":\"longitude\",\"kind\":\"scalar\",\"type\":\"Float\",\"dbName\":\"ST_X(delivery_location::geometry)\"},{\"name\":\"auditLogs\",\"kind\":\"object\",\"type\":\"AuditLog\",\"relationName\":\"AuditLogs\"},{\"name\":\"auditLogsToOrder\",\"kind\":\"object\",\"type\":\"AuditLog\",\"relationName\":\"AuditLogToProductOrder\"},{\"name\":\"payments\",\"kind\":\"object\",\"type\":\"Payment\",\"relationName\":\"ProductOrderPayments\"},{\"name\":\"fraudAlerts\",\"kind\":\"object\",\"type\":\"FraudAlert\",\"relationName\":\"ProductOrderFraudAlerts\"},{\"name\":\"feedbacks\",\"kind\":\"object\",\"type\":\"Feedback\",\"relationName\":\"ProductOrderFeedbacks\"},{\"name\":\"statusHistory\",\"kind\":\"object\",\"type\":\"OrderStatusHistory\",\"relationName\":\"ProductOrderStatusHistory\"},{\"name\":\"voucherId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"voucher\",\"kind\":\"object\",\"type\":\"Voucher\",\"relationName\":\"ProductOrderToVoucher\"},{\"name\":\"complaints\",\"kind\":\"object\",\"type\":\"Complaint\",\"relationName\":\"ProductOrderComplaints\"},{\"name\":\"reports\",\"kind\":\"object\",\"type\":\"Report\",\"relationName\":\"ReportToProductOrder\"},{\"name\":\"walletTransactions\",\"kind\":\"object\",\"type\":\"WalletTransaction\",\"relationName\":\"ProductOrderTransactions\"},{\"name\":\"productTypeId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"productType\",\"kind\":\"object\",\"type\":\"ProductType\",\"relationName\":\"ProductTypeToProductOrders\"}],\"dbName\":null},\"ServiceVerification\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"serviceId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"service\",\"kind\":\"object\",\"type\":\"Services\",\"relationName\":\"ServicesToVerifications\"},{\"name\":\"profileId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"profile\",\"kind\":\"object\",\"type\":\"Profile\",\"relationName\":\"ProfileToServiceVerification\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"VerificationStatus\"},{\"name\":\"adminId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"submittedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"processedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToServiceVerification\"}],\"dbName\":null},\"AuditLog\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserAuditLogs\"},{\"name\":\"action\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"details\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"entityType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"entityId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"investigationStatus\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"investigatedBy\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"investigatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"orderId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"order\",\"kind\":\"object\",\"type\":\"ProductOrder\",\"relationName\":\"AuditLogToProductOrder\"},{\"name\":\"orderAuditLogId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orderAuditLogs\",\"kind\":\"object\",\"type\":\"ProductOrder\",\"relationName\":\"AuditLogs\"},{\"name\":\"serviceOrderId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"serviceOrder\",\"kind\":\"object\",\"type\":\"ServiceOrder\",\"relationName\":\"AuditLogToServiceOrder\"}],\"dbName\":null},\"WalletTransaction\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToWalletTransaction\"},{\"name\":\"walletId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"wallet\",\"kind\":\"object\",\"type\":\"Wallet\",\"relationName\":\"WalletToWalletTransaction\"},{\"name\":\"transactionType\",\"kind\":\"enum\",\"type\":\"TransactionType\"},{\"name\":\"amount\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"topupCharge\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"serviceOrderId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"serviceOrder\",\"kind\":\"object\",\"type\":\"ServiceOrder\",\"relationName\":\"ServiceOrderTransactions\"},{\"name\":\"productOrderId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"productOrder\",\"kind\":\"object\",\"type\":\"ProductOrder\",\"relationName\":\"ProductOrderTransactions\"},{\"name\":\"payment\",\"kind\":\"object\",\"type\":\"Payment\",\"relationName\":\"WalletTransactionToPayment\"},{\"name\":\"paymentId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"transactionRef\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"TransactionStatus\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"transfers\",\"kind\":\"object\",\"type\":\"Transfer\",\"relationName\":\"TransferToWalletTransaction\"},{\"name\":\"billerCode\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"metadata\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"webhookAttempts\",\"kind\":\"object\",\"type\":\"WebhookAttempt\",\"relationName\":\"TransactionWebhookAttempts\"},{\"name\":\"vendorId\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null},\"Otp\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"code\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"expiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"OtpToUser\"},{\"name\":\"transactionReference\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phoneNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"medium\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"verified\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"attempts\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"eventType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"metadata\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"verifiedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Voucher\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"code\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"discount\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"VoucherType\"},{\"name\":\"maxUses\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"maxUsesPerUser\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"uses\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"validFrom\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"validUntil\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"appliesTo\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"restrictedToRoles\",\"kind\":\"object\",\"type\":\"Role\",\"relationName\":\"VoucherRestrictedToRoles\"},{\"name\":\"createdBy\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"VoucherCreator\"},{\"name\":\"createdById\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedById\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orders\",\"kind\":\"object\",\"type\":\"ProductOrder\",\"relationName\":\"ProductOrderToVoucher\"},{\"name\":\"voucherUsages\",\"kind\":\"object\",\"type\":\"VoucherUsage\",\"relationName\":\"VoucherToVoucherUsage\"},{\"name\":\"serviceOrders\",\"kind\":\"object\",\"type\":\"ServiceOrder\",\"relationName\":\"ServiceOrderToVoucher\"}],\"dbName\":null},\"VoucherUsage\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"voucherId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"voucher\",\"kind\":\"object\",\"type\":\"Voucher\",\"relationName\":\"VoucherToVoucherUsage\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToVoucherUsage\"},{\"name\":\"usedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Favorite\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"profileId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"profile\",\"kind\":\"object\",\"type\":\"Profile\",\"relationName\":\"ProfileToFavorites\"},{\"name\":\"entityType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"entityId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Transfer\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"amount\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"bankName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"accountNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"transactionId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"TransactionStatus\"},{\"name\":\"proofOfPayment\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"transaction\",\"kind\":\"object\",\"type\":\"WalletTransaction\",\"relationName\":\"TransferToWalletTransaction\"}],\"dbName\":null},\"CustomerAddress\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"address\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"state\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"latitude\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"longitude\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"isDefault\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"CustomerAddressToUser\"},{\"name\":\"profile\",\"kind\":\"object\",\"type\":\"Profile\",\"relationName\":\"ProfileToSavedAddresses\"},{\"name\":\"orders\",\"kind\":\"object\",\"type\":\"ProductOrder\",\"relationName\":\"CustomerAddressToProductOrder\"},{\"name\":\"serviceOrders\",\"kind\":\"object\",\"type\":\"ServiceOrder\",\"relationName\":\"ServiceOrderToCustomerAddress\"}],\"dbName\":null},\"SubAccount\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"subAccountCode\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"SubAccountToUser\"}],\"dbName\":null},\"Feedback\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ticketId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"giverId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"giver\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"FeedbackToUser\"},{\"name\":\"giverRoleId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"giverRole\",\"kind\":\"object\",\"type\":\"Role\",\"relationName\":\"FeedbackGiverRoles\"},{\"name\":\"receiverId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"receiver\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"FeedbackReceiver\"},{\"name\":\"receiverRoleId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"receiverRole\",\"kind\":\"object\",\"type\":\"Role\",\"relationName\":\"FeedbackReceiverRoles\"},{\"name\":\"comment\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"rating\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"FeedbackStatus\"},{\"name\":\"priority\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"issueType\",\"kind\":\"enum\",\"type\":\"IssueType\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"resolvedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"agentProfileId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"agentProfile\",\"kind\":\"object\",\"type\":\"Profile\",\"relationName\":\"AgentFeedback\"},{\"name\":\"vendorId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"vendor\",\"kind\":\"object\",\"type\":\"Profile\",\"relationName\":\"VendorFeedback\"},{\"name\":\"orderId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"order\",\"kind\":\"object\",\"type\":\"ProductOrder\",\"relationName\":\"ProductOrderFeedbacks\"},{\"name\":\"serviceOrderId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"serviceOrder\",\"kind\":\"object\",\"type\":\"ServiceOrder\",\"relationName\":\"ServiceOrderFeedbacks\"},{\"name\":\"customerId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"customerProfile\",\"kind\":\"object\",\"type\":\"Profile\",\"relationName\":\"CustomerReviews\"}],\"dbName\":null},\"OrderReview\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"comment\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orderId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"order\",\"kind\":\"object\",\"type\":\"ProductOrder\",\"relationName\":\"ProductOrderReviews\"},{\"name\":\"serviceOrderId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"serviceOrder\",\"kind\":\"object\",\"type\":\"ServiceOrder\",\"relationName\":\"ServiceOrderReviews\"},{\"name\":\"serviceId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"service\",\"kind\":\"object\",\"type\":\"Services\",\"relationName\":\"ServicesReviews\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"OrderReviewToUser\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"rating\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Session\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToSessions\"},{\"name\":\"token\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"expiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"metadata\",\"kind\":\"scalar\",\"type\":\"Json\"}],\"dbName\":null},\"PayOnDeliveryOrder\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orderId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"order\",\"kind\":\"object\",\"type\":\"ProductOrder\",\"relationName\":\"ProductOrderPayOnDelivery\"},{\"name\":\"serviceOrderId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"serviceOrder\",\"kind\":\"object\",\"type\":\"ServiceOrder\",\"relationName\":\"ServiceOrderPayOnDelivery\"},{\"name\":\"phoneNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"amountDue\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"TransactionStatus\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"PayOnDeliveryOrderToUser\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null},\"Payment\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"transactionRef\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"flwRef\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"monnifyRef\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"productType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"serviceType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"billerCode\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"serviceOrderId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"meterNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"paymentLink\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"amount\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"requestedAmount\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"topupCharge\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"paymentMethod\",\"kind\":\"enum\",\"type\":\"PaymentMethod\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"paymentDetails\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"PaymentToUser\"},{\"name\":\"provider\",\"kind\":\"object\",\"type\":\"PaymentProvider\",\"relationName\":\"PaymentToProvider\"},{\"name\":\"providerId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"serviceOrder\",\"kind\":\"object\",\"type\":\"ServiceOrder\",\"relationName\":\"ServiceOrderPayments\"},{\"name\":\"walletTransactions\",\"kind\":\"object\",\"type\":\"WalletTransaction\",\"relationName\":\"WalletTransactionToPayment\"},{\"name\":\"orderId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"order\",\"kind\":\"object\",\"type\":\"ProductOrder\",\"relationName\":\"ProductOrderPayments\"},{\"name\":\"fraudAlerts\",\"kind\":\"object\",\"type\":\"FraudAlert\",\"relationName\":\"PaymentFraudAlerts\"},{\"name\":\"serviceOrders\",\"kind\":\"object\",\"type\":\"ServiceOrder\",\"relationName\":\"PaymentToServiceOrders\"}],\"dbName\":null},\"Report\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"reporterId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"reporter\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ReportReporter\"},{\"name\":\"adminId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"admin\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ReportAdmin\"},{\"name\":\"category\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"details\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"imageUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"resolvedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"agentProfileId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"agentProfile\",\"kind\":\"object\",\"type\":\"Profile\",\"relationName\":\"ReportAgentProfile\"},{\"name\":\"vendorId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"vendor\",\"kind\":\"object\",\"type\":\"Profile\",\"relationName\":\"ReportVendor\"},{\"name\":\"reporterName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"reporterPhone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"serviceOrderId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"serviceOrder\",\"kind\":\"object\",\"type\":\"ServiceOrder\",\"relationName\":\"ReportToServiceOrder\"},{\"name\":\"productOrderId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"productOrder\",\"kind\":\"object\",\"type\":\"ProductOrder\",\"relationName\":\"ReportToProductOrder\"},{\"name\":\"documentId\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null},\"Wallet\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"balance\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"totalTopupCharge\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"vendorLinkedAccount1\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"vendorLinkedAccount2\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"vendorBankName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"metadata\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToWallet\"},{\"name\":\"profile\",\"kind\":\"object\",\"type\":\"Profile\",\"relationName\":\"ProfileToWallet\"},{\"name\":\"transactions\",\"kind\":\"object\",\"type\":\"WalletTransaction\",\"relationName\":\"WalletToWalletTransaction\"},{\"name\":\"withdrawals\",\"kind\":\"object\",\"type\":\"Withdrawal\",\"relationName\":\"WalletToWithdrawal\"},{\"name\":\"bankCards\",\"kind\":\"object\",\"type\":\"BankCard\",\"relationName\":\"BankCardToWallet\"},{\"name\":\"settings\",\"kind\":\"object\",\"type\":\"WalletSettings\",\"relationName\":\"WalletToWalletSettings\"},{\"name\":\"bvnVerifications\",\"kind\":\"object\",\"type\":\"BVNVerification\",\"relationName\":\"BVNVerificationToWallet\"},{\"name\":\"vendorWalletConfigs\",\"kind\":\"object\",\"type\":\"VendorWalletConfig\",\"relationName\":\"WalletToVendorWalletConfig\"},{\"name\":\"virtualAccounts\",\"kind\":\"object\",\"type\":\"VirtualAccount\",\"relationName\":\"WalletToVirtualAccount\"},{\"name\":\"accountNumber\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null},\"PaymentProvider\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"flutterwave_biller_code\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"providerKey\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"payments\",\"kind\":\"object\",\"type\":\"Payment\",\"relationName\":\"PaymentToProvider\"}],\"dbName\":null},\"Category\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"imageUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"active\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"products\",\"kind\":\"object\",\"type\":\"Product\",\"relationName\":\"CategoryToProduct\"},{\"name\":\"serviceTypes\",\"kind\":\"object\",\"type\":\"ServiceType\",\"relationName\":\"CategoryToServiceTypes\"},{\"name\":\"images\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"productTypes\",\"kind\":\"object\",\"type\":\"ProductType\",\"relationName\":\"ProductTypeToCategory\"}],\"dbName\":null},\"ProductType\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"categoryId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"category\",\"kind\":\"object\",\"type\":\"Category\",\"relationName\":\"ProductTypeToCategory\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdById\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdBy\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ProductTypeCreatedBy\"},{\"name\":\"products\",\"kind\":\"object\",\"type\":\"Product\",\"relationName\":\"ProductTypeToProducts\"},{\"name\":\"productOrders\",\"kind\":\"object\",\"type\":\"ProductOrder\",\"relationName\":\"ProductTypeToProductOrders\"}],\"dbName\":null},\"Product\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"price\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"salePrice\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"imageUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"images\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"brand\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"size\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"stock\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"ProductStatus\"},{\"name\":\"featured\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"productTypeId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"productType\",\"kind\":\"object\",\"type\":\"ProductType\",\"relationName\":\"ProductTypeToProducts\"},{\"name\":\"categoryId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"category\",\"kind\":\"object\",\"type\":\"Category\",\"relationName\":\"CategoryToProduct\"},{\"name\":\"productOwnerId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"productOwner\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ProductToUser\"},{\"name\":\"rating\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"orderCount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"cartItems\",\"kind\":\"object\",\"type\":\"CartItem\",\"relationName\":\"CartItemToProduct\"},{\"name\":\"disputes\",\"kind\":\"object\",\"type\":\"Dispute\",\"relationName\":\"ProductDisputes\"},{\"name\":\"orderItems\",\"kind\":\"object\",\"type\":\"OrderItem\",\"relationName\":\"OrderItemToProduct\"},{\"name\":\"complaints\",\"kind\":\"object\",\"type\":\"Complaint\",\"relationName\":\"ProductComplaints\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Cart\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"CartToUser\"},{\"name\":\"items\",\"kind\":\"object\",\"type\":\"CartItem\",\"relationName\":\"CartToCartItem\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"ContactOption\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"method\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"details\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"responseTime\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"businessHours\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"}],\"dbName\":null},\"CartItem\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"cartId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"cart\",\"kind\":\"object\",\"type\":\"Cart\",\"relationName\":\"CartToCartItem\"},{\"name\":\"productId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"product\",\"kind\":\"object\",\"type\":\"Product\",\"relationName\":\"CartItemToProduct\"},{\"name\":\"quantity\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Infraction\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"agentId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"deliveryRepId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"vendorId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"reason\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"issuedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"expiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"agent\",\"kind\":\"object\",\"type\":\"Profile\",\"relationName\":\"InfractionToAgent\"},{\"name\":\"deliveryRep\",\"kind\":\"object\",\"type\":\"Profile\",\"relationName\":\"InfractionToDeliveryRep\"},{\"name\":\"vendor\",\"kind\":\"object\",\"type\":\"Profile\",\"relationName\":\"InfractionToVendor\"}],\"dbName\":null},\"OrderItem\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orderId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"order\",\"kind\":\"object\",\"type\":\"ProductOrder\",\"relationName\":\"OrderItemToProductOrder\"},{\"name\":\"productId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"product\",\"kind\":\"object\",\"type\":\"Product\",\"relationName\":\"OrderItemToProduct\"},{\"name\":\"accessoryId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"accessory\",\"kind\":\"object\",\"type\":\"Accessory\",\"relationName\":\"AccessoryToOrderItem\"},{\"name\":\"quantity\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"price\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"PaymentConfig\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"paymentMethod\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isEnabled\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"gateway\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"publicKey\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"secretKey\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"contractCode\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedBy\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null},\"Dispute\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orderId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"order\",\"kind\":\"object\",\"type\":\"ProductOrder\",\"relationName\":\"ProductOrderDisputes\"},{\"name\":\"serviceOrderId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"serviceOrder\",\"kind\":\"object\",\"type\":\"ServiceOrder\",\"relationName\":\"ServiceOrderDisputes\"},{\"name\":\"productId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"product\",\"kind\":\"object\",\"type\":\"Product\",\"relationName\":\"ProductDisputes\"},{\"name\":\"serviceId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"service\",\"kind\":\"object\",\"type\":\"Services\",\"relationName\":\"ServicesDisputes\"},{\"name\":\"reason\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"riskFactors\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"internalNotes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"DisputeStatus\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Withdrawal\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserWithdrawals\"},{\"name\":\"walletId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"wallet\",\"kind\":\"object\",\"type\":\"Wallet\",\"relationName\":\"WalletToWithdrawal\"},{\"name\":\"amount\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"bankName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"accountNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"WithdrawalStatus\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"deliveryRepId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"vendorId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"processedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"transactionRef\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isAccountValidated\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"validatedBy\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"validationDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"bvnVerified\",\"kind\":\"scalar\",\"type\":\"Boolean\"}],\"dbName\":null},\"WithdrawalLimit\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"roleId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"object\",\"type\":\"Role\",\"relationName\":\"WithdrawalLimitRoles\"},{\"name\":\"limitType\",\"kind\":\"enum\",\"type\":\"WithdrawalLimitType\"},{\"name\":\"limitValue\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedBy\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"updatedByUser\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"WithdrawalLimitUpdatedBy\"}],\"dbName\":null},\"QuicrifillWallet\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"accountNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"bankName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"balance\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"withdrawals\",\"kind\":\"object\",\"type\":\"QuicrifillWithdrawal\",\"relationName\":\"QuicrifillWalletToWithdrawal\"}],\"dbName\":null},\"QuicrifillWithdrawal\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"walletId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"wallet\",\"kind\":\"object\",\"type\":\"QuicrifillWallet\",\"relationName\":\"QuicrifillWalletToWithdrawal\"},{\"name\":\"amount\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"bankName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"accountNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"TransactionStatus\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"processedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"transactionRef\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"requestedBy\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null},\"AppInstallation\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserInstallations\"},{\"name\":\"deviceType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"deviceId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"deviceToken\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isRecognized\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"recognizedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"isBanned\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"bannedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"banReason\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"crashReports\",\"kind\":\"object\",\"type\":\"CrashReport\",\"relationName\":\"InstallationCrashReports\"},{\"name\":\"blocked\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"isSuspended\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"isPenalized\",\"kind\":\"scalar\",\"type\":\"Boolean\"}],\"dbName\":null},\"Country\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"code\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"LocationStatus\"},{\"name\":\"restrictions\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"states\",\"kind\":\"object\",\"type\":\"State\",\"relationName\":\"CountryToState\"},{\"name\":\"productOrders\",\"kind\":\"object\",\"type\":\"ProductOrder\",\"relationName\":\"ProductOrderToCountry\"},{\"name\":\"services\",\"kind\":\"object\",\"type\":\"Services\",\"relationName\":\"ServicesToCountry\"},{\"name\":\"serviceOrders\",\"kind\":\"object\",\"type\":\"ServiceOrder\",\"relationName\":\"CountryToServiceOrders\"}],\"dbName\":null},\"State\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"countryId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"country\",\"kind\":\"object\",\"type\":\"Country\",\"relationName\":\"CountryToState\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"LocationStatus\"},{\"name\":\"restrictions\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"lgas\",\"kind\":\"object\",\"type\":\"Lga\",\"relationName\":\"LgaToState\"},{\"name\":\"productOrders\",\"kind\":\"object\",\"type\":\"ProductOrder\",\"relationName\":\"ProductOrderToState\"},{\"name\":\"services\",\"kind\":\"object\",\"type\":\"Services\",\"relationName\":\"ServicesToState\"},{\"name\":\"serviceOrders\",\"kind\":\"object\",\"type\":\"ServiceOrder\",\"relationName\":\"StateToServiceOrders\"},{\"name\":\"cities\",\"kind\":\"object\",\"type\":\"City\",\"relationName\":\"CityToState\"}],\"dbName\":null},\"City\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"lgaId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"lga\",\"kind\":\"object\",\"type\":\"Lga\",\"relationName\":\"CityToLga\"},{\"name\":\"stateId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"state\",\"kind\":\"object\",\"type\":\"State\",\"relationName\":\"CityToState\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"LocationStatus\"},{\"name\":\"restrictions\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"productOrders\",\"kind\":\"object\",\"type\":\"ProductOrder\",\"relationName\":\"ProductOrderToCity\"},{\"name\":\"services\",\"kind\":\"object\",\"type\":\"Services\",\"relationName\":\"ServicesToCity\"},{\"name\":\"serviceOrders\",\"kind\":\"object\",\"type\":\"ServiceOrder\",\"relationName\":\"CityToServiceOrders\"}],\"dbName\":null},\"Lga\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"stateId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"state\",\"kind\":\"object\",\"type\":\"State\",\"relationName\":\"LgaToState\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"LocationStatus\"},{\"name\":\"restrictions\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"cities\",\"kind\":\"object\",\"type\":\"City\",\"relationName\":\"CityToLga\"},{\"name\":\"productOrders\",\"kind\":\"object\",\"type\":\"ProductOrder\",\"relationName\":\"ProductOrderToLga\"},{\"name\":\"services\",\"kind\":\"object\",\"type\":\"Services\",\"relationName\":\"ServicesToLga\"}],\"dbName\":null},\"VirtualAccount\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToVirtualAccount\"},{\"name\":\"walletId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"wallet\",\"kind\":\"object\",\"type\":\"Wallet\",\"relationName\":\"WalletToVirtualAccount\"},{\"name\":\"vendorId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"accountNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"bankName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"monnifyRef\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isVendorMain\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"metadata\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"serviceOrders\",\"kind\":\"object\",\"type\":\"ServiceOrder\",\"relationName\":\"VirtualAccountToServiceOrder\"},{\"name\":\"vendorWalletConfig1\",\"kind\":\"object\",\"type\":\"VendorWalletConfig\",\"relationName\":\"VendorWalletConfigToVirtualAccount1\"},{\"name\":\"vendorWalletConfig2\",\"kind\":\"object\",\"type\":\"VendorWalletConfig\",\"relationName\":\"VendorWalletConfigToVirtualAccount2\"}],\"dbName\":null},\"FraudAlert\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"entityId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"entityType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"reason\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"vendorId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"resolvedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserFraudAlerts\"},{\"name\":\"vendor\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"VendorFraudAlerts\"},{\"name\":\"order\",\"kind\":\"object\",\"type\":\"ProductOrder\",\"relationName\":\"ProductOrderFraudAlerts\"},{\"name\":\"serviceOrder\",\"kind\":\"object\",\"type\":\"ServiceOrder\",\"relationName\":\"ServiceOrderFraudAlerts\"},{\"name\":\"payment\",\"kind\":\"object\",\"type\":\"Payment\",\"relationName\":\"PaymentFraudAlerts\"}],\"dbName\":null},\"EmailTemplate\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"subject\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"htmlContent\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"roles\",\"kind\":\"object\",\"type\":\"Role\",\"relationName\":\"EmailTemplateRoles\"},{\"name\":\"eventTypeId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"eventType\",\"kind\":\"object\",\"type\":\"EventType\",\"relationName\":\"EventTypeToEmailTemplate\"},{\"name\":\"updatedBy\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToEmailTemplate\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"}],\"dbName\":null},\"RolePrivilege\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"roleId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"object\",\"type\":\"Role\",\"relationName\":\"RoleToPrivileges\"},{\"name\":\"privileges\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"CrashReport\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"appVersion\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"deviceType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"deviceModel\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"osVersion\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"errorMessage\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"stackTrace\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserCrashReports\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"CrashStatus\"},{\"name\":\"reportedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"resolvedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"deviceId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"installation\",\"kind\":\"object\",\"type\":\"AppInstallation\",\"relationName\":\"InstallationCrashReports\"},{\"name\":\"metadata\",\"kind\":\"scalar\",\"type\":\"Json\"}],\"dbName\":null},\"AccountDeletionRequest\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"AccountDeletionRequestToUser\"},{\"name\":\"reason\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"additionalComments\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"AccountDeletionStatus\"},{\"name\":\"requestedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"scheduledDeletionAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"reviewedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"reviewedById\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"reviewedBy\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ReviewedBy\"},{\"name\":\"rejectionReason\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"adminNotes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"AdminSettings\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"defaultServiceCharge\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"defaultVatRate\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"defaultTopupCharge\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"defaultPetroleumTaxRate\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Appeal\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"vendorId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"reason\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"AppealStatus\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"AppealToUser\"},{\"name\":\"vendor\",\"kind\":\"object\",\"type\":\"Profile\",\"relationName\":\"AppealToVendor\"}],\"dbName\":null},\"WalletSettings\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"walletId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"wallet\",\"kind\":\"object\",\"type\":\"Wallet\",\"relationName\":\"WalletToWalletSettings\"},{\"name\":\"isDeliveryWithdrawalEnabled\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"withdrawalLimitDaily\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"withdrawalLimitSingle\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToWalletSettings\"}],\"dbName\":null},\"BankCard\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"walletId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"wallet\",\"kind\":\"object\",\"type\":\"Wallet\",\"relationName\":\"BankCardToWallet\"},{\"name\":\"profileId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"profile\",\"kind\":\"object\",\"type\":\"Profile\",\"relationName\":\"ProfileToSavedCards\"},{\"name\":\"cardLast4\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"cardType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"bankName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"accountNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"bankCode\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"expiryDate\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isValidated\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"flutterwaveToken\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToBankCard\"}],\"dbName\":null},\"OrderStatusHistory\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orderId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"serviceOrderId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"entityType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedBy\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"order\",\"kind\":\"object\",\"type\":\"ProductOrder\",\"relationName\":\"ProductOrderStatusHistory\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserOrderStatusHistory\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null},\"WebhookAttempt\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"walletTransactionId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"eventType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"webhookUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"payload\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"attempts\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"lastAttemptAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"response\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"walletTransaction\",\"kind\":\"object\",\"type\":\"WalletTransaction\",\"relationName\":\"TransactionWebhookAttempts\"}],\"dbName\":null},\"EventType\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdBy\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"EventTypeToUser\"},{\"name\":\"emailTemplates\",\"kind\":\"object\",\"type\":\"EmailTemplate\",\"relationName\":\"EventTypeToEmailTemplate\"},{\"name\":\"smsTemplates\",\"kind\":\"object\",\"type\":\"SMSTemplate\",\"relationName\":\"EventTypeToSMSTemplate\"},{\"name\":\"notificationLogs\",\"kind\":\"object\",\"type\":\"NotificationLog\",\"relationName\":\"EventTypeToNotificationLog\"},{\"name\":\"pushTemplates\",\"kind\":\"object\",\"type\":\"PushTemplate\",\"relationName\":\"EventTypeToPushTemplate\"},{\"name\":\"webhooks\",\"kind\":\"object\",\"type\":\"Webhook\",\"relationName\":\"EventTypeToWebhook\"},{\"name\":\"eventTypeRoles\",\"kind\":\"object\",\"type\":\"EventTypeRole\",\"relationName\":\"EventTypeToEventTypeRole\"}],\"dbName\":null},\"SMSTemplate\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"content\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"roles\",\"kind\":\"object\",\"type\":\"Role\",\"relationName\":\"SMSTemplateRoles\"},{\"name\":\"eventTypeId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"eventType\",\"kind\":\"object\",\"type\":\"EventType\",\"relationName\":\"EventTypeToSMSTemplate\"},{\"name\":\"updatedBy\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToSMSTemplate\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"}],\"dbName\":null},\"NotificationLog\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"vendorId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"eventTypeId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"eventType\",\"kind\":\"object\",\"type\":\"EventType\",\"relationName\":\"EventTypeToNotificationLog\"},{\"name\":\"payload\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"channel\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"recipient\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"errorMessage\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"message\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserNotificationLogs\"},{\"name\":\"vendor\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"VendorNotificationLogs\"}],\"dbName\":null},\"PushTemplate\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"body\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"roles\",\"kind\":\"object\",\"type\":\"Role\",\"relationName\":\"PushTemplateRoles\"},{\"name\":\"eventTypeId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"eventType\",\"kind\":\"object\",\"type\":\"EventType\",\"relationName\":\"EventTypeToPushTemplate\"},{\"name\":\"updatedBy\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToPushTemplate\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"}],\"dbName\":null},\"Webhook\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"url\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"eventTypeId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"eventType\",\"kind\":\"object\",\"type\":\"EventType\",\"relationName\":\"EventTypeToWebhook\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"roles\",\"kind\":\"object\",\"type\":\"Role\",\"relationName\":\"WebhookRoles\"},{\"name\":\"createdBy\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"EmailSettings\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"smtpHost\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"smtpPort\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"smtpUser\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"smtpPassword\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"emailFrom\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"enableNotifications\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"deliveryTimeStart\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"deliveryTimeEnd\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"updatedBy\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"updatedByUser\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"EmailSettingsToUser\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"SMSSettings\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"enableNotifications\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"senderId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"deliveryTimeStart\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"deliveryTimeEnd\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"smsProvider\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"serviceType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"host\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"port\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"updatedBy\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"updatedByUser\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"SMSSettingsToUser\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"ChurnInsight\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"month\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"poorCustomerSupport\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"highServiceFees\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"paymentIssues\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"serviceDelays\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"other\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"RewardRule\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"pointsPerNaira\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"nairaPerPoint\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"appliesTo\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"validFrom\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"validUntil\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdById\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdBy\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"RewardRuleCreatedBy\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedById\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"updatedBy\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"RewardRuleUpdatedBy\"}],\"dbName\":null},\"Reward\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"RewardToUser\"},{\"name\":\"points\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"source\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sourceId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"expiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"EventTypeRole\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"eventTypeId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"eventType\",\"kind\":\"object\",\"type\":\"EventType\",\"relationName\":\"EventTypeToEventTypeRole\"},{\"name\":\"roleId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"object\",\"type\":\"Role\",\"relationName\":\"EventTypeRoleToRole\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    POSTGRES_URL: typeof globalThis !== 'undefined' && globalThis['POSTGRES_URL'] || typeof process !== 'undefined' && process.env && process.env.POSTGRES_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

