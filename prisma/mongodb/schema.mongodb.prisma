// prisma/mongodb/schema.mongodb.prisma

generator client {
  provider = "prisma-client-js"
  output   = "../../node_modules/.prisma/mongodb-client"
}

datasource db {
  provider = "mongodb"
  url      = env("MONGODB_URL")
}

model ChatRoom {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  orderId     String?  @db.ObjectId // References ProductOrder or ServiceOrder
  orderType   String   // "PRODUCT" or "SERVICE"
  userId      String   @db.ObjectId // User who initiated the order
  agentId     String?  @db.ObjectId // Assigned agent
  vendorId    String?  @db.ObjectId // Vendor (if applicable)
  status      String   // "ACTIVE", "CLOSED", "REPORTED"
  rocketChatRoomId String // RocketChat room ID
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  closedAt    DateTime?
  messages    ChatMessage[]
  reports     ChatReport[]
  @@index([orderId, orderType])
  @@index([userId])
  @@index([agentId])
  @@index([rocketChatRoomId])
  @@map("chat_rooms")
}

model ChatMessage {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  roomId      String   @db.ObjectId
  room        ChatRoom @relation(fields: [roomId], references: [id], onDelete: Cascade)
  senderId    String   @db.ObjectId // User or agent ID
  content     String
  type        String   // "TEXT", "IMAGE", "FILE"
  createdAt   DateTime @default(now())
  readBy      String[] @default([]) // Array of user IDs who read the message
  @@index([roomId])
  @@index([senderId])
  @@map("chat_messages")
}

model ChatReport {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  roomId      String   @db.ObjectId
  room        ChatRoom @relation(fields: [roomId], references: [id], onDelete: Cascade)
  reporterId  String   @db.ObjectId // User who reported
  reasons     String[] // Selected reasons (e.g., ["Rude behavior", "Other"])
  details     String?  // Details for "Other" reason
  evidenceUrl String?  // URL to uploaded evidence
  status      String   // "PENDING", "UNDER_REVIEW", "RESOLVED", "REJECTED"
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  resolvedAt  DateTime?
  @@index([roomId])
  @@index([reporterId])
  @@map("chat_reports")
}